<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;

/**
 * appDevDebugProjectContainer.
 *
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 *
 * @final since Symfony 3.3
 */
class appDevDebugProjectContainer extends Container
{
    private $parameters;
    private $targetDirs = array();

    /**
     * Constructor.
     */
    public function __construct()
    {
        $dir = __DIR__;
        for ($i = 1; $i <= 5; ++$i) {
            $this->targetDirs[$i] = $dir = dirname($dir);
        }
        $this->parameters = $this->getDefaultParameters();

        $this->services = array();
        $this->normalizedIds = array(
            'appbundle\\controller\\advancedcontroller' => 'AppBundle\\Controller\\AdvancedController',
            'appbundle\\controller\\blogcontroller' => 'AppBundle\\Controller\\BlogController',
            'appbundle\\controller\\category\\examplecontroller' => 'AppBundle\\Controller\\Category\\ExampleController',
            'appbundle\\controller\\contentcontroller' => 'AppBundle\\Controller\\ContentController',
            'appbundle\\controller\\defaultcontroller' => 'AppBundle\\Controller\\DefaultController',
            'appbundle\\controller\\newscontroller' => 'AppBundle\\Controller\\NewsController',
            'appbundle\\controller\\newslettercontroller' => 'AppBundle\\Controller\\NewsletterController',
            'appbundle\\controller\\securecontroller' => 'AppBundle\\Controller\\SecureController',
            'appbundle\\controller\\web2printcontroller' => 'AppBundle\\Controller\\Web2printController',
            'autowired.pimcore\\model\\dataobject\\abstractobject' => 'autowired.Pimcore\\Model\\DataObject\\AbstractObject',
            'autowired.pimcore\\model\\dataobject\\concrete' => 'autowired.Pimcore\\Model\\DataObject\\Concrete',
            'coreshop\\bundle\\adminbundle\\installer' => 'CoreShop\\Bundle\\AdminBundle\\Installer',
            'jms\\serializer\\arraytransformerinterface' => 'JMS\\Serializer\\ArrayTransformerInterface',
            'jms\\serializer\\serializerinterface' => 'JMS\\Serializer\\SerializerInterface',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\assetcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\classcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\classificationstorecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\dataobjectcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\dataobjecthelpercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\documentcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\documenttag\\renderletcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\elementcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\elementcontrollerbase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\emailcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\external\\adminercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\external\\linfocontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\external\\opcachecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\foldercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\hardlinkcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\indexcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\installcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\linkcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\logcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\logincontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\misccontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\newslettercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\pagecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\portalcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\printcontainercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\printpagecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\printpagecontrollerbase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\quantityvaluecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\recyclebincontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\settingscontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\snippetcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\tagscontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\translationcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\usercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\variantscontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController',
            'pimcore\\bundle\\adminbundle\\controller\\admin\\workflowcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController',
            'pimcore\\bundle\\adminbundle\\controller\\extensionmanager\\extensionmanagercontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\analyticscontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\customreportcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\qrcodecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\reportscontrollerbase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\settingscontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController',
            'pimcore\\bundle\\adminbundle\\controller\\reports\\targetingcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\classcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\element\\assetcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\element\\dataobjectcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\element\\documentcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\element\\tagcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\imagecontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController',
            'pimcore\\bundle\\adminbundle\\controller\\rest\\infocontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController',
            'pimcore\\bundle\\adminbundle\\controller\\searchadmin\\searchcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController',
            'pimcore\\bundle\\adminbundle\\controller\\update\\indexcontroller' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController',
            'pimcore\\bundle\\adminbundle\\eventlistener\\adminauthenticationdoublechecklistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminAuthenticationDoubleCheckListener',
            'pimcore\\bundle\\adminbundle\\eventlistener\\adminexceptionlistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminExceptionListener',
            'pimcore\\bundle\\adminbundle\\eventlistener\\bruteforceprotectionlistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\BruteforceProtectionListener',
            'pimcore\\bundle\\adminbundle\\eventlistener\\httpcachelistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\HttpCacheListener',
            'pimcore\\bundle\\adminbundle\\eventlistener\\usagestatisticslistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\UsageStatisticsListener',
            'pimcore\\bundle\\adminbundle\\eventlistener\\userperspectivelistener' => 'Pimcore\\Bundle\\AdminBundle\\EventListener\\UserPerspectiveListener',
            'pimcore\\bundle\\adminbundle\\security\\user\\tokenstorageuserresolver' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\TokenStorageUserResolver',
            'pimcore\\bundle\\adminbundle\\security\\user\\userchecker' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserChecker',
            'pimcore\\bundle\\adminbundle\\security\\user\\userloader' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserLoader',
            'pimcore\\bundle\\adminbundle\\security\\user\\userprovider' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserProvider',
            'pimcore\\bundle\\adminbundle\\session\\adminsessionbagconfigurator' => 'Pimcore\\Bundle\\AdminBundle\\Session\\AdminSessionBagConfigurator',
            'pimcore\\bundle\\adminbundle\\session\\handler\\adminsessionhandler' => 'Pimcore\\Bundle\\AdminBundle\\Session\\Handler\\AdminSessionHandler',
            'pimcore\\bundle\\corebundle\\controller\\publicservicescontroller' => 'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController',
            'pimcore\\bundle\\corebundle\\eventlistener\\controllerviewmodellistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\ControllerViewModelListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\elementtagslistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\ElementTagsListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\eventedcontrollerlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\EventedControllerListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\blockstatelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\BlockStateListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\contenttemplatelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ContentTemplateListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\cookiepolicynoticelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\CookiePolicyNoticeListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\documentfallbacklistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentFallbackListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\documentmetadatalistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentMetaDataListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\editmodelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\EditmodeListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\elementlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ElementListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\frontendroutinglistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FrontendRoutingListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\fullpagecachelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FullPageCacheListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\googleanalyticscodelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleAnalyticsCodeListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\googlesearchconsoleverificationlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleSearchConsoleVerificationListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\googletagmanagerlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleTagManagerListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\hardlinkcanonicallistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\HardlinkCanonicalListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\internalwysiwyghtmlattributefilterlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\InternalWysiwygHtmlAttributeFilterListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\localelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\LocaleListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\tagmanagerlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TagManagerListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\frontend\\targetinglistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TargetingListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\maintenancepagelistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\MaintenancePageListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\pimcorecontextlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreContextListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\pimcoreheaderlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreHeaderListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\responseexceptionlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseExceptionListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\responseheaderlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseHeaderListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\searchbackendlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\SearchBackendListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\templatecontrollerlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\TemplateControllerListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\translationdebuglistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\TranslationDebugListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\uuidlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\UUIDListener',
            'pimcore\\bundle\\corebundle\\eventlistener\\workflowmanagementlistener' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\WorkflowManagementListener',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\adminordercontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\configcontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\findologiccontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\indexcontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\pricingcontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\controller\\vouchercontroller' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController',
            'pimcore\\bundle\\ecommerceframeworkbundle\\eventlistener\\indexupdatelistener' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\IndexUpdateListener',
            'pimcore\\bundle\\ecommerceframeworkbundle\\eventlistener\\systemeventslistener' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\SystemEventsListener',
            'pimcore\\bundle\\ecommerceframeworkbundle\\tools\\installer' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Tools\\Installer',
            'pimcore\\cache\\runtime' => 'Pimcore\\Cache\\Runtime',
            'pimcore\\controller\\argumentvalueresolver\\documentvalueresolver' => 'Pimcore\\Controller\\ArgumentValueResolver\\DocumentValueResolver',
            'pimcore\\controller\\argumentvalueresolver\\editmodevalueresolver' => 'Pimcore\\Controller\\ArgumentValueResolver\\EditmodeValueResolver',
            'pimcore\\controller\\argumentvalueresolver\\templatevarsvalueresolver' => 'Pimcore\\Controller\\ArgumentValueResolver\\TemplateVarsValueResolver',
            'pimcore\\controller\\argumentvalueresolver\\viewmodelvalueresolver' => 'Pimcore\\Controller\\ArgumentValueResolver\\ViewModelValueResolver',
            'pimcore\\controller\\argumentvalueresolver\\websiteconfigvalueresolver' => 'Pimcore\\Controller\\ArgumentValueResolver\\WebsiteConfigValueResolver',
            'pimcore\\controller\\config\\confignormalizer' => 'Pimcore\\Controller\\Config\\ConfigNormalizer',
            'pimcore\\controller\\config\\controllerdataprovider' => 'Pimcore\\Controller\\Config\\ControllerDataProvider',
            'pimcore\\db\\connection' => 'Pimcore\\Db\\Connection',
            'pimcore\\document\\renderer\\documentrenderer' => 'Pimcore\\Document\\Renderer\\DocumentRenderer',
            'pimcore\\document\\tag\\block\\blockstatestack' => 'Pimcore\\Document\\Tag\\Block\\BlockStateStack',
            'pimcore\\document\\tag\\taghandlerinterface' => 'Pimcore\\Document\\Tag\\TagHandlerInterface',
            'pimcore\\extension\\bundle\\pimcorebundlemanager' => 'Pimcore\\Extension\\Bundle\\PimcoreBundleManager',
            'pimcore\\extension\\config' => 'Pimcore\\Extension\\Config',
            'pimcore\\extension\\document\\areabrick\\areabrickmanager' => 'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManager',
            'pimcore\\extension\\document\\areabrick\\areabrickmanagerinterface' => 'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManagerInterface',
            'pimcore\\http\\request\\resolver\\documentresolver' => 'Pimcore\\Http\\Request\\Resolver\\DocumentResolver',
            'pimcore\\http\\request\\resolver\\editmoderesolver' => 'Pimcore\\Http\\Request\\Resolver\\EditmodeResolver',
            'pimcore\\http\\request\\resolver\\pimcorecontextresolver' => 'Pimcore\\Http\\Request\\Resolver\\PimcoreContextResolver',
            'pimcore\\http\\request\\resolver\\responseheaderresolver' => 'Pimcore\\Http\\Request\\Resolver\\ResponseHeaderResolver',
            'pimcore\\http\\request\\resolver\\siteresolver' => 'Pimcore\\Http\\Request\\Resolver\\SiteResolver',
            'pimcore\\http\\request\\resolver\\templateresolver' => 'Pimcore\\Http\\Request\\Resolver\\TemplateResolver',
            'pimcore\\http\\request\\resolver\\templatevarsresolver' => 'Pimcore\\Http\\Request\\Resolver\\TemplateVarsResolver',
            'pimcore\\http\\request\\resolver\\viewmodelresolver' => 'Pimcore\\Http\\Request\\Resolver\\ViewModelResolver',
            'pimcore\\http\\requesthelper' => 'Pimcore\\Http\\RequestHelper',
            'pimcore\\http\\responsehelper' => 'Pimcore\\Http\\ResponseHelper',
            'pimcore\\kernel' => 'Pimcore\\Kernel',
            'pimcore\\localization\\intlformatter' => 'Pimcore\\Localization\\IntlFormatter',
            'pimcore\\localization\\locale' => 'Pimcore\\Localization\\Locale',
            'pimcore\\log\\applicationlogger' => 'Pimcore\\Log\\ApplicationLogger',
            'pimcore\\log\\handler\\applicationloggerdb' => 'Pimcore\\Log\\Handler\\ApplicationLoggerDb',
            'pimcore\\migrations\\configuration\\configurationfactory' => 'Pimcore\\Migrations\\Configuration\\ConfigurationFactory',
            'pimcore\\model\\document\\service' => 'Pimcore\\Model\\Document\\Service',
            'pimcore\\model\\factory' => 'Pimcore\\Model\\Factory',
            'pimcore\\model\\schedule\\manager\\procedural' => 'Pimcore\\Model\\Schedule\\Manager\\Procedural',
            'pimcore\\navigation\\renderer\\breadcrumbs' => 'Pimcore\\Navigation\\Renderer\\Breadcrumbs',
            'pimcore\\navigation\\renderer\\menu' => 'Pimcore\\Navigation\\Renderer\\Menu',
            'pimcore\\routing\\dynamic\\documentroutehandler' => 'Pimcore\\Routing\\Dynamic\\DocumentRouteHandler',
            'pimcore\\templating\\helper\\action' => 'Pimcore\\Templating\\Helper\\Action',
            'pimcore\\templating\\helper\\cache' => 'Pimcore\\Templating\\Helper\\Cache',
            'pimcore\\templating\\helper\\device' => 'Pimcore\\Templating\\Helper\\Device',
            'pimcore\\templating\\helper\\getallparams' => 'Pimcore\\Templating\\Helper\\GetAllParams',
            'pimcore\\templating\\helper\\getparam' => 'Pimcore\\Templating\\Helper\\GetParam',
            'pimcore\\templating\\helper\\glossary' => 'Pimcore\\Templating\\Helper\\Glossary',
            'pimcore\\templating\\helper\\headlink' => 'Pimcore\\Templating\\Helper\\HeadLink',
            'pimcore\\templating\\helper\\headmeta' => 'Pimcore\\Templating\\Helper\\HeadMeta',
            'pimcore\\templating\\helper\\headscript' => 'Pimcore\\Templating\\Helper\\HeadScript',
            'pimcore\\templating\\helper\\headstyle' => 'Pimcore\\Templating\\Helper\\HeadStyle',
            'pimcore\\templating\\helper\\headtitle' => 'Pimcore\\Templating\\Helper\\HeadTitle',
            'pimcore\\templating\\helper\\inc' => 'Pimcore\\Templating\\Helper\\Inc',
            'pimcore\\templating\\helper\\inlinescript' => 'Pimcore\\Templating\\Helper\\InlineScript',
            'pimcore\\templating\\helper\\navigation' => 'Pimcore\\Templating\\Helper\\Navigation',
            'pimcore\\templating\\helper\\pimcoreurl' => 'Pimcore\\Templating\\Helper\\PimcoreUrl',
            'pimcore\\templating\\helper\\placeholder' => 'Pimcore\\Templating\\Helper\\Placeholder',
            'pimcore\\templating\\helper\\websiteconfig' => 'Pimcore\\Templating\\Helper\\WebsiteConfig',
            'pimcore\\tool\\assetsinstaller' => 'Pimcore\\Tool\\AssetsInstaller',
            'pimcore\\tool\\restclient' => 'Pimcore\\Tool\\RestClient',
            'pimcore\\translation\\translator' => 'Pimcore\\Translation\\Translator',
        );
        $this->methodMap = array(
            '1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' => 'get113bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService',
            '2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' => 'get213bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService',
            'AppBundle\\Controller\\AdvancedController' => 'getAppBundle_Controller_AdvancedControllerService',
            'AppBundle\\Controller\\BlogController' => 'getAppBundle_Controller_BlogControllerService',
            'AppBundle\\Controller\\Category\\ExampleController' => 'getAppBundle_Controller_Category_ExampleControllerService',
            'AppBundle\\Controller\\ContentController' => 'getAppBundle_Controller_ContentControllerService',
            'AppBundle\\Controller\\DefaultController' => 'getAppBundle_Controller_DefaultControllerService',
            'AppBundle\\Controller\\NewsController' => 'getAppBundle_Controller_NewsControllerService',
            'AppBundle\\Controller\\NewsletterController' => 'getAppBundle_Controller_NewsletterControllerService',
            'AppBundle\\Controller\\SecureController' => 'getAppBundle_Controller_SecureControllerService',
            'AppBundle\\Controller\\Web2printController' => 'getAppBundle_Controller_Web2printControllerService',
            'CoreShop\\Bundle\\AdminBundle\\Installer' => 'getCoreShop_Bundle_AdminBundle_InstallerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_AssetControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_ClassControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_ClassificationstoreControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_DataObjectControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_DataObjectHelperControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_DocumentControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_DocumentTag_RenderletControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_ElementControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_ElementControllerBaseService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_EmailControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_External_AdminerControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_External_LinfoControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_External_OpcacheControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_FolderControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_HardlinkControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_IndexControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_InstallControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_LinkControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_LogControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_LoginControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_MiscControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_NewsletterControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_PageControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_PortalControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_PrintcontainerControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_PrintpageControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_PrintpageControllerBaseService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_QuantityValueControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_RecyclebinControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_SettingsControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_SnippetControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_TagsControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_TranslationControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_UserControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_VariantsControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController' => 'getPimcore_Bundle_AdminBundle_Controller_Admin_WorkflowControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController' => 'getPimcore_Bundle_AdminBundle_Controller_ExtensionManager_ExtensionManagerControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_AnalyticsControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_CustomReportControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_QrcodeControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_ReportsControllerBaseService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_SettingsControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController' => 'getPimcore_Bundle_AdminBundle_Controller_Reports_TargetingControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_ClassControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_Element_AssetControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_Element_DataObjectControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_Element_DocumentControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_Element_TagControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_ImageControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController' => 'getPimcore_Bundle_AdminBundle_Controller_Rest_InfoControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController' => 'getPimcore_Bundle_AdminBundle_Controller_Searchadmin_SearchControllerService',
            'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController' => 'getPimcore_Bundle_AdminBundle_Controller_Update_IndexControllerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminAuthenticationDoubleCheckListener' => 'getPimcore_Bundle_AdminBundle_EventListener_AdminAuthenticationDoubleCheckListenerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminExceptionListener' => 'getPimcore_Bundle_AdminBundle_EventListener_AdminExceptionListenerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\BruteforceProtectionListener' => 'getPimcore_Bundle_AdminBundle_EventListener_BruteforceProtectionListenerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\HttpCacheListener' => 'getPimcore_Bundle_AdminBundle_EventListener_HttpCacheListenerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\UsageStatisticsListener' => 'getPimcore_Bundle_AdminBundle_EventListener_UsageStatisticsListenerService',
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\UserPerspectiveListener' => 'getPimcore_Bundle_AdminBundle_EventListener_UserPerspectiveListenerService',
            'Pimcore\\Bundle\\AdminBundle\\Security\\User\\TokenStorageUserResolver' => 'getPimcore_Bundle_AdminBundle_Security_User_TokenStorageUserResolverService',
            'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserChecker' => 'getPimcore_Bundle_AdminBundle_Security_User_UserCheckerService',
            'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserLoader' => 'getPimcore_Bundle_AdminBundle_Security_User_UserLoaderService',
            'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserProvider' => 'getPimcore_Bundle_AdminBundle_Security_User_UserProviderService',
            'Pimcore\\Bundle\\AdminBundle\\Session\\AdminSessionBagConfigurator' => 'getPimcore_Bundle_AdminBundle_Session_AdminSessionBagConfiguratorService',
            'Pimcore\\Bundle\\AdminBundle\\Session\\Handler\\AdminSessionHandler' => 'getPimcore_Bundle_AdminBundle_Session_Handler_AdminSessionHandlerService',
            'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController' => 'getPimcore_Bundle_CoreBundle_Controller_PublicServicesControllerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ControllerViewModelListener' => 'getPimcore_Bundle_CoreBundle_EventListener_ControllerViewModelListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ElementTagsListener' => 'getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\EventedControllerListener' => 'getPimcore_Bundle_CoreBundle_EventListener_EventedControllerListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\BlockStateListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_BlockStateListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ContentTemplateListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_ContentTemplateListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\CookiePolicyNoticeListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_CookiePolicyNoticeListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentFallbackListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentFallbackListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentMetaDataListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentMetaDataListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\EditmodeListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_EditmodeListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ElementListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_ElementListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FrontendRoutingListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_FrontendRoutingListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FullPageCacheListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_FullPageCacheListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleAnalyticsCodeListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleAnalyticsCodeListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleSearchConsoleVerificationListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleSearchConsoleVerificationListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleTagManagerListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleTagManagerListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\HardlinkCanonicalListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_HardlinkCanonicalListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\InternalWysiwygHtmlAttributeFilterListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_InternalWysiwygHtmlAttributeFilterListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\LocaleListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_LocaleListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TagManagerListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_TagManagerListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TargetingListener' => 'getPimcore_Bundle_CoreBundle_EventListener_Frontend_TargetingListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\MaintenancePageListener' => 'getPimcore_Bundle_CoreBundle_EventListener_MaintenancePageListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreContextListener' => 'getPimcore_Bundle_CoreBundle_EventListener_PimcoreContextListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreHeaderListener' => 'getPimcore_Bundle_CoreBundle_EventListener_PimcoreHeaderListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseExceptionListener' => 'getPimcore_Bundle_CoreBundle_EventListener_ResponseExceptionListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseHeaderListener' => 'getPimcore_Bundle_CoreBundle_EventListener_ResponseHeaderListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\SearchBackendListener' => 'getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\TemplateControllerListener' => 'getPimcore_Bundle_CoreBundle_EventListener_TemplateControllerListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\TranslationDebugListener' => 'getPimcore_Bundle_CoreBundle_EventListener_TranslationDebugListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\UUIDListener' => 'getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService',
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\WorkflowManagementListener' => 'getPimcore_Bundle_CoreBundle_EventListener_WorkflowManagementListenerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_AdminOrderControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_ConfigControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_FindologicControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_IndexControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_PricingControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Controller_VoucherControllerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\IndexUpdateListener' => 'getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_IndexUpdateListenerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\SystemEventsListener' => 'getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_SystemEventsListenerService',
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Tools\\Installer' => 'getPimcore_Bundle_EcommerceFrameworkBundle_Tools_InstallerService',
            'Pimcore\\Controller\\ArgumentValueResolver\\DocumentValueResolver' => 'getPimcore_Controller_ArgumentValueResolver_DocumentValueResolverService',
            'Pimcore\\Controller\\ArgumentValueResolver\\EditmodeValueResolver' => 'getPimcore_Controller_ArgumentValueResolver_EditmodeValueResolverService',
            'Pimcore\\Controller\\ArgumentValueResolver\\TemplateVarsValueResolver' => 'getPimcore_Controller_ArgumentValueResolver_TemplateVarsValueResolverService',
            'Pimcore\\Controller\\ArgumentValueResolver\\ViewModelValueResolver' => 'getPimcore_Controller_ArgumentValueResolver_ViewModelValueResolverService',
            'Pimcore\\Controller\\ArgumentValueResolver\\WebsiteConfigValueResolver' => 'getPimcore_Controller_ArgumentValueResolver_WebsiteConfigValueResolverService',
            'Pimcore\\Controller\\Config\\ConfigNormalizer' => 'getPimcore_Controller_Config_ConfigNormalizerService',
            'Pimcore\\Controller\\Config\\ControllerDataProvider' => 'getPimcore_Controller_Config_ControllerDataProviderService',
            'Pimcore\\Document\\Renderer\\DocumentRenderer' => 'getPimcore_Document_Renderer_DocumentRendererService',
            'Pimcore\\Document\\Tag\\Block\\BlockStateStack' => 'getPimcore_Document_Tag_Block_BlockStateStackService',
            'Pimcore\\Extension\\Bundle\\PimcoreBundleManager' => 'getPimcore_Extension_Bundle_PimcoreBundleManagerService',
            'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManager' => 'getPimcore_Extension_Document_Areabrick_AreabrickManagerService',
            'Pimcore\\Http\\RequestHelper' => 'getPimcore_Http_RequestHelperService',
            'Pimcore\\Http\\Request\\Resolver\\DocumentResolver' => 'getPimcore_Http_Request_Resolver_DocumentResolverService',
            'Pimcore\\Http\\Request\\Resolver\\EditmodeResolver' => 'getPimcore_Http_Request_Resolver_EditmodeResolverService',
            'Pimcore\\Http\\Request\\Resolver\\PimcoreContextResolver' => 'getPimcore_Http_Request_Resolver_PimcoreContextResolverService',
            'Pimcore\\Http\\Request\\Resolver\\ResponseHeaderResolver' => 'getPimcore_Http_Request_Resolver_ResponseHeaderResolverService',
            'Pimcore\\Http\\Request\\Resolver\\SiteResolver' => 'getPimcore_Http_Request_Resolver_SiteResolverService',
            'Pimcore\\Http\\Request\\Resolver\\TemplateResolver' => 'getPimcore_Http_Request_Resolver_TemplateResolverService',
            'Pimcore\\Http\\Request\\Resolver\\TemplateVarsResolver' => 'getPimcore_Http_Request_Resolver_TemplateVarsResolverService',
            'Pimcore\\Http\\Request\\Resolver\\ViewModelResolver' => 'getPimcore_Http_Request_Resolver_ViewModelResolverService',
            'Pimcore\\Http\\ResponseHelper' => 'getPimcore_Http_ResponseHelperService',
            'Pimcore\\Localization\\IntlFormatter' => 'getPimcore_Localization_IntlFormatterService',
            'Pimcore\\Localization\\Locale' => 'getPimcore_Localization_LocaleService',
            'Pimcore\\Log\\ApplicationLogger' => 'getPimcore_Log_ApplicationLoggerService',
            'Pimcore\\Log\\Handler\\ApplicationLoggerDb' => 'getPimcore_Log_Handler_ApplicationLoggerDbService',
            'Pimcore\\Migrations\\Configuration\\ConfigurationFactory' => 'getPimcore_Migrations_Configuration_ConfigurationFactoryService',
            'Pimcore\\Model\\Document\\Service' => 'getPimcore_Model_Document_ServiceService',
            'Pimcore\\Model\\Factory' => 'getPimcore_Model_FactoryService',
            'Pimcore\\Model\\Schedule\\Manager\\Procedural' => 'getPimcore_Model_Schedule_Manager_ProceduralService',
            'Pimcore\\Navigation\\Renderer\\Breadcrumbs' => 'getPimcore_Navigation_Renderer_BreadcrumbsService',
            'Pimcore\\Navigation\\Renderer\\Menu' => 'getPimcore_Navigation_Renderer_MenuService',
            'Pimcore\\Routing\\Dynamic\\DocumentRouteHandler' => 'getPimcore_Routing_Dynamic_DocumentRouteHandlerService',
            'Pimcore\\Templating\\Helper\\Action' => 'getPimcore_Templating_Helper_ActionService',
            'Pimcore\\Templating\\Helper\\Cache' => 'getPimcore_Templating_Helper_CacheService',
            'Pimcore\\Templating\\Helper\\Device' => 'getPimcore_Templating_Helper_DeviceService',
            'Pimcore\\Templating\\Helper\\GetAllParams' => 'getPimcore_Templating_Helper_GetAllParamsService',
            'Pimcore\\Templating\\Helper\\GetParam' => 'getPimcore_Templating_Helper_GetParamService',
            'Pimcore\\Templating\\Helper\\Glossary' => 'getPimcore_Templating_Helper_GlossaryService',
            'Pimcore\\Templating\\Helper\\HeadLink' => 'getPimcore_Templating_Helper_HeadLinkService',
            'Pimcore\\Templating\\Helper\\HeadMeta' => 'getPimcore_Templating_Helper_HeadMetaService',
            'Pimcore\\Templating\\Helper\\HeadScript' => 'getPimcore_Templating_Helper_HeadScriptService',
            'Pimcore\\Templating\\Helper\\HeadStyle' => 'getPimcore_Templating_Helper_HeadStyleService',
            'Pimcore\\Templating\\Helper\\HeadTitle' => 'getPimcore_Templating_Helper_HeadTitleService',
            'Pimcore\\Templating\\Helper\\Inc' => 'getPimcore_Templating_Helper_IncService',
            'Pimcore\\Templating\\Helper\\InlineScript' => 'getPimcore_Templating_Helper_InlineScriptService',
            'Pimcore\\Templating\\Helper\\Navigation' => 'getPimcore_Templating_Helper_NavigationService',
            'Pimcore\\Templating\\Helper\\PimcoreUrl' => 'getPimcore_Templating_Helper_PimcoreUrlService',
            'Pimcore\\Templating\\Helper\\Placeholder' => 'getPimcore_Templating_Helper_PlaceholderService',
            'Pimcore\\Templating\\Helper\\WebsiteConfig' => 'getPimcore_Templating_Helper_WebsiteConfigService',
            'Pimcore\\Tool\\AssetsInstaller' => 'getPimcore_Tool_AssetsInstallerService',
            'Pimcore\\Tool\\RestClient' => 'getPimcore_Tool_RestClientService',
            'Pimcore\\Translation\\Translator' => 'getPimcore_Translation_TranslatorService',
            'annotation_reader' => 'getAnnotationReaderService',
            'annotations.reader' => 'getAnnotations_ReaderService',
            'app.area.brick.embed' => 'getApp_Area_Brick_EmbedService',
            'app.area.brick.featurette' => 'getApp_Area_Brick_FeaturetteService',
            'app.area.brick.gallery_carousel' => 'getApp_Area_Brick_GalleryCarouselService',
            'app.area.brick.gallery_folder' => 'getApp_Area_Brick_GalleryFolderService',
            'app.area.brick.gallery_single_images' => 'getApp_Area_Brick_GallerySingleImagesService',
            'app.area.brick.headlines' => 'getApp_Area_Brick_HeadlinesService',
            'app.area.brick.horizontal_line' => 'getApp_Area_Brick_HorizontalLineService',
            'app.area.brick.icon_teaser_row' => 'getApp_Area_Brick_IconTeaserRowService',
            'app.area.brick.image' => 'getApp_Area_Brick_ImageService',
            'app.area.brick.image_hotspot_marker' => 'getApp_Area_Brick_ImageHotspotMarkerService',
            'app.area.brick.pdf' => 'getApp_Area_Brick_PdfService',
            'app.area.brick.standard_teaser_row' => 'getApp_Area_Brick_StandardTeaserRowService',
            'app.area.brick.tabbed_slider_text' => 'getApp_Area_Brick_TabbedSliderTextService',
            'app.area.brick.text_accordion' => 'getApp_Area_Brick_TextAccordionService',
            'app.area.brick.video' => 'getApp_Area_Brick_VideoService',
            'app.area.brick.wysiwyg' => 'getApp_Area_Brick_WysiwygService',
            'app.area.brick.wysiwyg_with_images' => 'getApp_Area_Brick_WysiwygWithImagesService',
            'argument_resolver.default' => 'getArgumentResolver_DefaultService',
            'argument_resolver.request' => 'getArgumentResolver_RequestService',
            'argument_resolver.request_attribute' => 'getArgumentResolver_RequestAttributeService',
            'argument_resolver.service' => 'getArgumentResolver_ServiceService',
            'argument_resolver.session' => 'getArgumentResolver_SessionService',
            'argument_resolver.variadic' => 'getArgumentResolver_VariadicService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'autowired.Pimcore\\Model\\DataObject\\AbstractObject' => 'getAutowired_Pimcore_Model_DataObject_AbstractObjectService',
            'autowired.Pimcore\\Model\\DataObject\\Concrete' => 'getAutowired_Pimcore_Model_DataObject_ConcreteService',
            'cache.annotations' => 'getCache_AnnotationsService',
            'cache.annotations.recorder_inner' => 'getCache_Annotations_RecorderInnerService',
            'cache.app' => 'getCache_AppService',
            'cache.app.recorder_inner' => 'getCache_App_RecorderInnerService',
            'cache.default_clearer' => 'getCache_DefaultClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.serializer' => 'getCache_SerializerService',
            'cache.serializer.recorder_inner' => 'getCache_Serializer_RecorderInnerService',
            'cache.system' => 'getCache_SystemService',
            'cache.system.recorder_inner' => 'getCache_System_RecorderInnerService',
            'cache.validator' => 'getCache_ValidatorService',
            'cache.validator.recorder_inner' => 'getCache_Validator_RecorderInnerService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'cmf_routing.dynamic_router' => 'getCmfRouting_DynamicRouterService',
            'cmf_routing.enhancer.route_content' => 'getCmfRouting_Enhancer_RouteContentService',
            'cmf_routing.final_matcher' => 'getCmfRouting_FinalMatcherService',
            'cmf_routing.generator' => 'getCmfRouting_GeneratorService',
            'cmf_routing.nested_matcher' => 'getCmfRouting_NestedMatcherService',
            'cmf_routing.persistence.doctrine.route_condition_metadata_listener' => 'getCmfRouting_Persistence_Doctrine_RouteConditionMetadataListenerService',
            'cmf_routing.redirect_controller' => 'getCmfRouting_RedirectControllerService',
            'cmf_routing.route_provider' => 'getCmfRouting_RouteProviderService',
            'cmf_routing.route_type_form_type' => 'getCmfRouting_RouteTypeFormTypeService',
            'cmf_routing.router' => 'getCmfRouting_RouterService',
            'cmf_routing.validator.route_defaults' => 'getCmfRouting_Validator_RouteDefaultsService',
            'config_cache_factory' => 'getConfigCacheFactoryService',
            'console.command.pimcore_migrations_command_executecommand' => 'getConsole_Command_PimcoreMigrationsCommandExecutecommandService',
            'console.command.pimcore_migrations_command_generatecommand' => 'getConsole_Command_PimcoreMigrationsCommandGeneratecommandService',
            'console.command.pimcore_migrations_command_latestcommand' => 'getConsole_Command_PimcoreMigrationsCommandLatestcommandService',
            'console.command.pimcore_migrations_command_migratecommand' => 'getConsole_Command_PimcoreMigrationsCommandMigratecommandService',
            'console.command.pimcore_migrations_command_statuscommand' => 'getConsole_Command_PimcoreMigrationsCommandStatuscommandService',
            'console.command.pimcore_migrations_command_versioncommand' => 'getConsole_Command_PimcoreMigrationsCommandVersioncommandService',
            'console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand' => 'getConsole_Command_SymfonyBundleSecuritybundleCommandUserpasswordencodercommandService',
            'console.error_listener' => 'getConsole_ErrorListenerService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'coreshop.address.formatter' => 'getCoreshop_Address_FormatterService',
            'coreshop.admin_controller.carrier' => 'getCoreshop_AdminController_CarrierService',
            'coreshop.admin_controller.cart_price_rule' => 'getCoreshop_AdminController_CartPriceRuleService',
            'coreshop.admin_controller.configuration' => 'getCoreshop_AdminController_ConfigurationService',
            'coreshop.admin_controller.country' => 'getCoreshop_AdminController_CountryService',
            'coreshop.admin_controller.currency' => 'getCoreshop_AdminController_CurrencyService',
            'coreshop.admin_controller.exchange_rate' => 'getCoreshop_AdminController_ExchangeRateService',
            'coreshop.admin_controller.filter' => 'getCoreshop_AdminController_FilterService',
            'coreshop.admin_controller.index' => 'getCoreshop_AdminController_IndexService',
            'coreshop.admin_controller.notification_rule' => 'getCoreshop_AdminController_NotificationRuleService',
            'coreshop.admin_controller.payment' => 'getCoreshop_AdminController_PaymentService',
            'coreshop.admin_controller.payment_provider' => 'getCoreshop_AdminController_PaymentProviderService',
            'coreshop.admin_controller.product_price_rule' => 'getCoreshop_AdminController_ProductPriceRuleService',
            'coreshop.admin_controller.product_specific_price_rule' => 'getCoreshop_AdminController_ProductSpecificPriceRuleService',
            'coreshop.admin_controller.reports' => 'getCoreshop_AdminController_ReportsService',
            'coreshop.admin_controller.resource_settings' => 'getCoreshop_AdminController_ResourceSettingsService',
            'coreshop.admin_controller.rule_action' => 'getCoreshop_AdminController_RuleActionService',
            'coreshop.admin_controller.rule_condition' => 'getCoreshop_AdminController_RuleConditionService',
            'coreshop.admin_controller.sequence' => 'getCoreshop_AdminController_SequenceService',
            'coreshop.admin_controller.settings' => 'getCoreshop_AdminController_SettingsService',
            'coreshop.admin_controller.shipping_rule' => 'getCoreshop_AdminController_ShippingRuleService',
            'coreshop.admin_controller.state' => 'getCoreshop_AdminController_StateService',
            'coreshop.admin_controller.store' => 'getCoreshop_AdminController_StoreService',
            'coreshop.admin_controller.tax_rate' => 'getCoreshop_AdminController_TaxRateService',
            'coreshop.admin_controller.tax_rule_group' => 'getCoreshop_AdminController_TaxRuleGroupService',
            'coreshop.admin_controller.zone' => 'getCoreshop_AdminController_ZoneService',
            'coreshop.carrier.cart.store_based_processor' => 'getCoreshop_Carrier_Cart_StoreBasedProcessorService',
            'coreshop.carrier.price_calculator' => 'getCoreshop_Carrier_PriceCalculatorService',
            'coreshop.carrier.price_calculator.default' => 'getCoreshop_Carrier_PriceCalculator_DefaultService',
            'coreshop.carrier.price_calculator.free_shipping_rule' => 'getCoreshop_Carrier_PriceCalculator_FreeShippingRuleService',
            'coreshop.carrier.price_calculator.shipping_rules' => 'getCoreshop_Carrier_PriceCalculator_ShippingRulesService',
            'coreshop.carrier.price_calculator.taxed' => 'getCoreshop_Carrier_PriceCalculator_TaxedService',
            'coreshop.carrier.processor.shipping_rules' => 'getCoreshop_Carrier_Processor_ShippingRulesService',
            'coreshop.carrier.shipping_rule.checker' => 'getCoreshop_Carrier_ShippingRule_CheckerService',
            'coreshop.cart.cleanup' => 'getCoreshop_Cart_CleanupService',
            'coreshop.cart.cleanup.maintenance_listener' => 'getCoreshop_Cart_Cleanup_MaintenanceListenerService',
            'coreshop.cart.discount_calculator.composite' => 'getCoreshop_Cart_DiscountCalculator_CompositeService',
            'coreshop.cart.discount_calculator.price_rules' => 'getCoreshop_Cart_DiscountCalculator_PriceRulesService',
            'coreshop.cart.manager' => 'getCoreshop_Cart_ManagerService',
            'coreshop.cart.modifier' => 'getCoreshop_Cart_ModifierService',
            'coreshop.cart_price_rule.action.discount_amount' => 'getCoreshop_CartPriceRule_Action_DiscountAmountService',
            'coreshop.cart_price_rule.action.discount_percent' => 'getCoreshop_CartPriceRule_Action_DiscountPercentService',
            'coreshop.cart_price_rule.condition.amount' => 'getCoreshop_CartPriceRule_Condition_AmountService',
            'coreshop.cart_price_rule.condition.categories' => 'getCoreshop_CartPriceRule_Condition_CategoriesService',
            'coreshop.cart_price_rule.condition.nested' => 'getCoreshop_CartPriceRule_Condition_NestedService',
            'coreshop.cart_price_rule.condition.products' => 'getCoreshop_CartPriceRule_Condition_ProductsService',
            'coreshop.cart_price_rule.condition.timespan' => 'getCoreshop_CartPriceRule_Condition_TimespanService',
            'coreshop.cart_price_rule.conditions.validation.processor' => 'getCoreshop_CartPriceRule_Conditions_Validation_ProcessorService',
            'coreshop.cart_price_rule.order.processor' => 'getCoreshop_CartPriceRule_Order_ProcessorService',
            'coreshop.cart_price_rule.processor' => 'getCoreshop_CartPriceRule_ProcessorService',
            'coreshop.cart_price_rule.rule_validation.processor' => 'getCoreshop_CartPriceRule_RuleValidation_ProcessorService',
            'coreshop.cart_price_rule.un_processor' => 'getCoreshop_CartPriceRule_UnProcessorService',
            'coreshop.cart_processor.composite' => 'getCoreshop_CartProcessor_CompositeService',
            'coreshop.cart_processor.discount' => 'getCoreshop_CartProcessor_DiscountService',
            'coreshop.cart_processor.item_taxes' => 'getCoreshop_CartProcessor_ItemTaxesService',
            'coreshop.cart_processor.items' => 'getCoreshop_CartProcessor_ItemsService',
            'coreshop.cart_processor.shipping' => 'getCoreshop_CartProcessor_ShippingService',
            'coreshop.cart_processor.taxes' => 'getCoreshop_CartProcessor_TaxesService',
            'coreshop.checkout.step.address' => 'getCoreshop_Checkout_Step_AddressService',
            'coreshop.checkout.step.cart' => 'getCoreshop_Checkout_Step_CartService',
            'coreshop.checkout.step.customer' => 'getCoreshop_Checkout_Step_CustomerService',
            'coreshop.checkout.step.payment' => 'getCoreshop_Checkout_Step_PaymentService',
            'coreshop.checkout.step.shipping' => 'getCoreshop_Checkout_Step_ShippingService',
            'coreshop.checkout.step.summary' => 'getCoreshop_Checkout_Step_SummaryService',
            'coreshop.checkout_manager.default' => 'getCoreshop_CheckoutManager_DefaultService',
            'coreshop.collector.taxes' => 'getCoreshop_Collector_TaxesService',
            'coreshop.commands_provider.database_setup' => 'getCoreshop_CommandsProvider_DatabaseSetupService',
            'coreshop.configuration.service' => 'getCoreshop_Configuration_ServiceService',
            'coreshop.context.country' => 'getCoreshop_Context_CountryService',
            'coreshop.context.country.fixed' => 'getCoreshop_Context_Country_FixedService',
            'coreshop.context.country.request_based.resolver' => 'getCoreshop_Context_Country_RequestBased_ResolverService',
            'coreshop.context.currency.cached' => 'getCoreshop_Context_Currency_CachedService',
            'coreshop.context.currency.fixed' => 'getCoreshop_Context_Currency_FixedService',
            'coreshop.context.currency.storage_based' => 'getCoreshop_Context_Currency_StorageBasedService',
            'coreshop.context.currency.store_aware' => 'getCoreshop_Context_Currency_StoreAwareService',
            'coreshop.context.customer' => 'getCoreshop_Context_CustomerService',
            'coreshop.context.customer.fixed' => 'getCoreshop_Context_Customer_FixedService',
            'coreshop.context.customer.request_based.resolver' => 'getCoreshop_Context_Customer_RequestBased_ResolverService',
            'coreshop.context.locale' => 'getCoreshop_Context_LocaleService',
            'coreshop.context.locale.fixed' => 'getCoreshop_Context_Locale_FixedService',
            'coreshop.context.locale.pimcore' => 'getCoreshop_Context_Locale_PimcoreService',
            'coreshop.context.shopper' => 'getCoreshop_Context_ShopperService',
            'coreshop.context.store' => 'getCoreshop_Context_StoreService',
            'coreshop.context.store.fixed' => 'getCoreshop_Context_Store_FixedService',
            'coreshop.context.store.request_based.cached' => 'getCoreshop_Context_Store_RequestBased_CachedService',
            'coreshop.context.store.request_based.resolver' => 'getCoreshop_Context_Store_RequestBased_ResolverService',
            'coreshop.core.key_transformer' => 'getCoreshop_Core_KeyTransformerService',
            'coreshop.core.order.transformer.cart_to_order' => 'getCoreshop_Core_Order_Transformer_CartToOrderService',
            'coreshop.core.order.transformer.cart_to_quote' => 'getCoreshop_Core_Order_Transformer_CartToQuoteService',
            'coreshop.core.product.price_calculator.store_price' => 'getCoreshop_Core_Product_PriceCalculator_StorePriceService',
            'coreshop.country_collector' => 'getCoreshop_CountryCollectorService',
            'coreshop.currency_collector' => 'getCoreshop_CurrencyCollectorService',
            'coreshop.currency_converter' => 'getCoreshop_CurrencyConverterService',
            'coreshop.customer.registration_service' => 'getCoreshop_Customer_RegistrationServiceService',
            'coreshop.doctrine.cache.pimcore' => 'getCoreshop_Doctrine_Cache_PimcoreService',
            'coreshop.event_listener.cart' => 'getCoreshop_EventListener_CartService',
            'coreshop.event_listener.clear_cached_rules' => 'getCoreshop_EventListener_ClearCachedRulesService',
            'coreshop.event_listener.price_rule_update' => 'getCoreshop_EventListener_PriceRuleUpdateService',
            'coreshop.event_listener.product_update' => 'getCoreshop_EventListener_ProductUpdateService',
            'coreshop.event_listener.update_cart' => 'getCoreshop_EventListener_UpdateCartService',
            'coreshop.event_subscriber.orm_mapped_super_class' => 'getCoreshop_EventSubscriber_OrmMappedSuperClassService',
            'coreshop.event_subscriber.orm_repository_class' => 'getCoreshop_EventSubscriber_OrmRepositoryClassService',
            'coreshop.factory.address' => 'getCoreshop_Factory_AddressService',
            'coreshop.factory.carrier' => 'getCoreshop_Factory_CarrierService',
            'coreshop.factory.cart' => 'getCoreshop_Factory_CartService',
            'coreshop.factory.cart_item' => 'getCoreshop_Factory_CartItemService',
            'coreshop.factory.cart_price_rule' => 'getCoreshop_Factory_CartPriceRuleService',
            'coreshop.factory.cart_price_rule_item' => 'getCoreshop_Factory_CartPriceRuleItemService',
            'coreshop.factory.cart_price_rule_voucher_code' => 'getCoreshop_Factory_CartPriceRuleVoucherCodeService',
            'coreshop.factory.category' => 'getCoreshop_Factory_CategoryService',
            'coreshop.factory.configuration' => 'getCoreshop_Factory_ConfigurationService',
            'coreshop.factory.country' => 'getCoreshop_Factory_CountryService',
            'coreshop.factory.country_translation' => 'getCoreshop_Factory_CountryTranslationService',
            'coreshop.factory.currency' => 'getCoreshop_Factory_CurrencyService',
            'coreshop.factory.customer' => 'getCoreshop_Factory_CustomerService',
            'coreshop.factory.customer_group' => 'getCoreshop_Factory_CustomerGroupService',
            'coreshop.factory.exchange_rate' => 'getCoreshop_Factory_ExchangeRateService',
            'coreshop.factory.filter' => 'getCoreshop_Factory_FilterService',
            'coreshop.factory.filter.list' => 'getCoreshop_Factory_Filter_ListService',
            'coreshop.factory.filter_condition' => 'getCoreshop_Factory_FilterConditionService',
            'coreshop.factory.gateway_config' => 'getCoreshop_Factory_GatewayConfigService',
            'coreshop.factory.index' => 'getCoreshop_Factory_IndexService',
            'coreshop.factory.index.list' => 'getCoreshop_Factory_Index_ListService',
            'coreshop.factory.index_column' => 'getCoreshop_Factory_IndexColumnService',
            'coreshop.factory.manufacturer' => 'getCoreshop_Factory_ManufacturerService',
            'coreshop.factory.notification_rule' => 'getCoreshop_Factory_NotificationRuleService',
            'coreshop.factory.order' => 'getCoreshop_Factory_OrderService',
            'coreshop.factory.order_invoice' => 'getCoreshop_Factory_OrderInvoiceService',
            'coreshop.factory.order_invoice_item' => 'getCoreshop_Factory_OrderInvoiceItemService',
            'coreshop.factory.order_item' => 'getCoreshop_Factory_OrderItemService',
            'coreshop.factory.order_shipment' => 'getCoreshop_Factory_OrderShipmentService',
            'coreshop.factory.order_shipment_item' => 'getCoreshop_Factory_OrderShipmentItemService',
            'coreshop.factory.payment' => 'getCoreshop_Factory_PaymentService',
            'coreshop.factory.payment_provider' => 'getCoreshop_Factory_PaymentProviderService',
            'coreshop.factory.payment_provider_translation' => 'getCoreshop_Factory_PaymentProviderTranslationService',
            'coreshop.factory.payment_security_token' => 'getCoreshop_Factory_PaymentSecurityTokenService',
            'coreshop.factory.product' => 'getCoreshop_Factory_ProductService',
            'coreshop.factory.product_price_rule' => 'getCoreshop_Factory_ProductPriceRuleService',
            'coreshop.factory.product_specific_price_rule' => 'getCoreshop_Factory_ProductSpecificPriceRuleService',
            'coreshop.factory.quote' => 'getCoreshop_Factory_QuoteService',
            'coreshop.factory.quote_item' => 'getCoreshop_Factory_QuoteItemService',
            'coreshop.factory.rule_action' => 'getCoreshop_Factory_RuleActionService',
            'coreshop.factory.rule_condition' => 'getCoreshop_Factory_RuleConditionService',
            'coreshop.factory.sequence' => 'getCoreshop_Factory_SequenceService',
            'coreshop.factory.shipping_rule' => 'getCoreshop_Factory_ShippingRuleService',
            'coreshop.factory.shipping_rule_group' => 'getCoreshop_Factory_ShippingRuleGroupService',
            'coreshop.factory.state' => 'getCoreshop_Factory_StateService',
            'coreshop.factory.state_translation' => 'getCoreshop_Factory_StateTranslationService',
            'coreshop.factory.store' => 'getCoreshop_Factory_StoreService',
            'coreshop.factory.tax_item' => 'getCoreshop_Factory_TaxItemService',
            'coreshop.factory.tax_rate' => 'getCoreshop_Factory_TaxRateService',
            'coreshop.factory.tax_rate_translation' => 'getCoreshop_Factory_TaxRateTranslationService',
            'coreshop.factory.tax_rule' => 'getCoreshop_Factory_TaxRuleService',
            'coreshop.factory.tax_rule_group' => 'getCoreshop_Factory_TaxRuleGroupService',
            'coreshop.factory.wishlist' => 'getCoreshop_Factory_WishlistService',
            'coreshop.factory.wishlist_item' => 'getCoreshop_Factory_WishlistItemService',
            'coreshop.factory.zone' => 'getCoreshop_Factory_ZoneService',
            'coreshop.filter.condition_type.boolean' => 'getCoreshop_Filter_ConditionType_BooleanService',
            'coreshop.filter.condition_type.multiselect' => 'getCoreshop_Filter_ConditionType_MultiselectService',
            'coreshop.filter.condition_type.range' => 'getCoreshop_Filter_ConditionType_RangeService',
            'coreshop.filter.condition_type.select' => 'getCoreshop_Filter_ConditionType_SelectService',
            'coreshop.filter.processor' => 'getCoreshop_Filter_ProcessorService',
            'coreshop.fixture.data.executor' => 'getCoreshop_Fixture_Data_ExecutorService',
            'coreshop.fixture.data.loader' => 'getCoreshop_Fixture_Data_LoaderService',
            'coreshop.form.cart_price_rule.type.rule_action.collection' => 'getCoreshop_Form_CartPriceRule_Type_RuleAction_CollectionService',
            'coreshop.form.cart_price_rule.type.rule_action_choice' => 'getCoreshop_Form_CartPriceRule_Type_RuleActionChoiceService',
            'coreshop.form.cart_price_rule.type.rule_condition.collection' => 'getCoreshop_Form_CartPriceRule_Type_RuleCondition_CollectionService',
            'coreshop.form.cart_price_rule.type.rule_condition_choice' => 'getCoreshop_Form_CartPriceRule_Type_RuleConditionChoiceService',
            'coreshop.form.cart_rule.type.rule_condition' => 'getCoreshop_Form_CartRule_Type_RuleConditionService',
            'coreshop.form.extension.type.carrier' => 'getCoreshop_Form_Extension_Type_CarrierService',
            'coreshop.form.extension.type.country' => 'getCoreshop_Form_Extension_Type_CountryService',
            'coreshop.form.extension.type.order_shipment_creation' => 'getCoreshop_Form_Extension_Type_OrderShipmentCreationService',
            'coreshop.form.extension.type.payment_provider' => 'getCoreshop_Form_Extension_Type_PaymentProviderService',
            'coreshop.form.extension.type.store' => 'getCoreshop_Form_Extension_Type_StoreService',
            'coreshop.form.extension.type.tax_rule' => 'getCoreshop_Form_Extension_Type_TaxRuleService',
            'coreshop.form.extension.type.tax_rule_group' => 'getCoreshop_Form_Extension_Type_TaxRuleGroupService',
            'coreshop.form.notification_rule.type.rule_action.collection' => 'getCoreshop_Form_NotificationRule_Type_RuleAction_CollectionService',
            'coreshop.form.notification_rule.type.rule_action_choice' => 'getCoreshop_Form_NotificationRule_Type_RuleActionChoiceService',
            'coreshop.form.notification_rule.type.rule_condition' => 'getCoreshop_Form_NotificationRule_Type_RuleConditionService',
            'coreshop.form.notification_rule.type.rule_condition.collection' => 'getCoreshop_Form_NotificationRule_Type_RuleCondition_CollectionService',
            'coreshop.form.notification_rule.type.rule_condition_choice' => 'getCoreshop_Form_NotificationRule_Type_RuleConditionChoiceService',
            'coreshop.form.notification_rule_type.type_choice' => 'getCoreshop_Form_NotificationRuleType_TypeChoiceService',
            'coreshop.form.product_price_rule.type.rule_action.collection' => 'getCoreshop_Form_ProductPriceRule_Type_RuleAction_CollectionService',
            'coreshop.form.product_price_rule.type.rule_action_choice' => 'getCoreshop_Form_ProductPriceRule_Type_RuleActionChoiceService',
            'coreshop.form.product_price_rule.type.rule_condition' => 'getCoreshop_Form_ProductPriceRule_Type_RuleConditionService',
            'coreshop.form.product_price_rule.type.rule_condition.collection' => 'getCoreshop_Form_ProductPriceRule_Type_RuleCondition_CollectionService',
            'coreshop.form.product_price_rule.type.rule_condition_choice' => 'getCoreshop_Form_ProductPriceRule_Type_RuleConditionChoiceService',
            'coreshop.form.product_specific_price_rule.type.rule_action.collection' => 'getCoreshop_Form_ProductSpecificPriceRule_Type_RuleAction_CollectionService',
            'coreshop.form.product_specific_price_rule.type.rule_action_choice' => 'getCoreshop_Form_ProductSpecificPriceRule_Type_RuleActionChoiceService',
            'coreshop.form.product_specific_price_rule.type.rule_condition' => 'getCoreshop_Form_ProductSpecificPriceRule_Type_RuleConditionService',
            'coreshop.form.product_specific_price_rule.type.rule_condition.collection' => 'getCoreshop_Form_ProductSpecificPriceRule_Type_RuleCondition_CollectionService',
            'coreshop.form.product_specific_price_rule.type.rule_condition_choice' => 'getCoreshop_Form_ProductSpecificPriceRule_Type_RuleConditionChoiceService',
            'coreshop.form.shipping_rule.type.rule_action.collection' => 'getCoreshop_Form_ShippingRule_Type_RuleAction_CollectionService',
            'coreshop.form.shipping_rule.type.rule_action_choice' => 'getCoreshop_Form_ShippingRule_Type_RuleActionChoiceService',
            'coreshop.form.shipping_rule.type.rule_condition' => 'getCoreshop_Form_ShippingRule_Type_RuleConditionService',
            'coreshop.form.shipping_rule.type.rule_condition.collection' => 'getCoreshop_Form_ShippingRule_Type_RuleCondition_CollectionService',
            'coreshop.form.shipping_rule.type.rule_condition_choice' => 'getCoreshop_Form_ShippingRule_Type_RuleConditionChoiceService',
            'coreshop.form.type.address' => 'getCoreshop_Form_Type_AddressService',
            'coreshop.form.type.address_choice' => 'getCoreshop_Form_Type_AddressChoiceService',
            'coreshop.form.type.carrier' => 'getCoreshop_Form_Type_CarrierService',
            'coreshop.form.type.carrier_choice' => 'getCoreshop_Form_Type_CarrierChoiceService',
            'coreshop.form.type.cart_price_rule' => 'getCoreshop_Form_Type_CartPriceRuleService',
            'coreshop.form.type.cart_price_rule.rule_action' => 'getCoreshop_Form_Type_CartPriceRule_RuleActionService',
            'coreshop.form.type.cart_price_rule_generator' => 'getCoreshop_Form_Type_CartPriceRuleGeneratorService',
            'coreshop.form.type.checkout_address' => 'getCoreshop_Form_Type_CheckoutAddressService',
            'coreshop.form.type.checkout_payment' => 'getCoreshop_Form_Type_CheckoutPaymentService',
            'coreshop.form.type.configuration' => 'getCoreshop_Form_Type_ConfigurationService',
            'coreshop.form.type.configuration.collection' => 'getCoreshop_Form_Type_Configuration_CollectionService',
            'coreshop.form.type.country' => 'getCoreshop_Form_Type_CountryService',
            'coreshop.form.type.country_choice' => 'getCoreshop_Form_Type_CountryChoiceService',
            'coreshop.form.type.country_translation' => 'getCoreshop_Form_Type_CountryTranslationService',
            'coreshop.form.type.currency' => 'getCoreshop_Form_Type_CurrencyService',
            'coreshop.form.type.currency_choice' => 'getCoreshop_Form_Type_CurrencyChoiceService',
            'coreshop.form.type.customer' => 'getCoreshop_Form_Type_CustomerService',
            'coreshop.form.type.customer_registration' => 'getCoreshop_Form_Type_CustomerRegistrationService',
            'coreshop.form.type.exchange_rate' => 'getCoreshop_Form_Type_ExchangeRateService',
            'coreshop.form.type.filter' => 'getCoreshop_Form_Type_FilterService',
            'coreshop.form.type.filter.condition_choice_type' => 'getCoreshop_Form_Type_Filter_ConditionChoiceTypeService',
            'coreshop.form.type.filter.condition_type' => 'getCoreshop_Form_Type_Filter_ConditionTypeService',
            'coreshop.form.type.filter.condition_type_collection' => 'getCoreshop_Form_Type_Filter_ConditionTypeCollectionService',
            'coreshop.form.type.gateway.config' => 'getCoreshop_Form_Type_Gateway_ConfigService',
            'coreshop.form.type.gateway_configuration.paypal' => 'getCoreshop_Form_Type_GatewayConfiguration_PaypalService',
            'coreshop.form.type.gateway_configuration.sofort' => 'getCoreshop_Form_Type_GatewayConfiguration_SofortService',
            'coreshop.form.type.guest_registration' => 'getCoreshop_Form_Type_GuestRegistrationService',
            'coreshop.form.type.index' => 'getCoreshop_Form_Type_IndexService',
            'coreshop.form.type.index.getter_choice' => 'getCoreshop_Form_Type_Index_GetterChoiceService',
            'coreshop.form.type.index.index_column_choice' => 'getCoreshop_Form_Type_Index_IndexColumnChoiceService',
            'coreshop.form.type.index.interpter_choice' => 'getCoreshop_Form_Type_Index_InterpterChoiceService',
            'coreshop.form.type.index.worker_choice' => 'getCoreshop_Form_Type_Index_WorkerChoiceService',
            'coreshop.form.type.index_choice' => 'getCoreshop_Form_Type_IndexChoiceService',
            'coreshop.form.type.index_column' => 'getCoreshop_Form_Type_IndexColumnService',
            'coreshop.form.type.index_column.type_collection' => 'getCoreshop_Form_Type_IndexColumn_TypeCollectionService',
            'coreshop.form.type.money' => 'getCoreshop_Form_Type_MoneyService',
            'coreshop.form.type.notification_rule' => 'getCoreshop_Form_Type_NotificationRuleService',
            'coreshop.form.type.notification_rule.rule_action' => 'getCoreshop_Form_Type_NotificationRule_RuleActionService',
            'coreshop.form.type.order_document_items' => 'getCoreshop_Form_Type_OrderDocumentItemsService',
            'coreshop.form.type.payment_provider' => 'getCoreshop_Form_Type_PaymentProviderService',
            'coreshop.form.type.payment_provider_choice' => 'getCoreshop_Form_Type_PaymentProviderChoiceService',
            'coreshop.form.type.payment_provider_translation' => 'getCoreshop_Form_Type_PaymentProviderTranslationService',
            'coreshop.form.type.pimcore_class_choice' => 'getCoreshop_Form_Type_PimcoreClassChoiceService',
            'coreshop.form.type.product_price_rule' => 'getCoreshop_Form_Type_ProductPriceRuleService',
            'coreshop.form.type.product_price_rule.rule_action' => 'getCoreshop_Form_Type_ProductPriceRule_RuleActionService',
            'coreshop.form.type.product_specific_price_rule' => 'getCoreshop_Form_Type_ProductSpecificPriceRuleService',
            'coreshop.form.type.product_specific_price_rule.rule_action' => 'getCoreshop_Form_Type_ProductSpecificPriceRule_RuleActionService',
            'coreshop.form.type.request_reset_password' => 'getCoreshop_Form_Type_RequestResetPasswordService',
            'coreshop.form.type.reset_password' => 'getCoreshop_Form_Type_ResetPasswordService',
            'coreshop.form.type.resource_translations' => 'getCoreshop_Form_Type_ResourceTranslationsService',
            'coreshop.form.type.shipment_creation' => 'getCoreshop_Form_Type_ShipmentCreationService',
            'coreshop.form.type.shipping_rule' => 'getCoreshop_Form_Type_ShippingRuleService',
            'coreshop.form.type.shipping_rule.rule_action' => 'getCoreshop_Form_Type_ShippingRule_RuleActionService',
            'coreshop.form.type.shipping_rule_choice' => 'getCoreshop_Form_Type_ShippingRuleChoiceService',
            'coreshop.form.type.shipping_rule_chollection' => 'getCoreshop_Form_Type_ShippingRuleChollectionService',
            'coreshop.form.type.shipping_rule_group' => 'getCoreshop_Form_Type_ShippingRuleGroupService',
            'coreshop.form.type.state' => 'getCoreshop_Form_Type_StateService',
            'coreshop.form.type.state_choice' => 'getCoreshop_Form_Type_StateChoiceService',
            'coreshop.form.type.state_translation' => 'getCoreshop_Form_Type_StateTranslationService',
            'coreshop.form.type.store' => 'getCoreshop_Form_Type_StoreService',
            'coreshop.form.type.store_choice' => 'getCoreshop_Form_Type_StoreChoiceService',
            'coreshop.form.type.tax_rate' => 'getCoreshop_Form_Type_TaxRateService',
            'coreshop.form.type.tax_rate_translation' => 'getCoreshop_Form_Type_TaxRateTranslationService',
            'coreshop.form.type.tax_rule' => 'getCoreshop_Form_Type_TaxRuleService',
            'coreshop.form.type.tax_rule_choice' => 'getCoreshop_Form_Type_TaxRuleChoiceService',
            'coreshop.form.type.tax_rule_group' => 'getCoreshop_Form_Type_TaxRuleGroupService',
            'coreshop.form.type.tax_rule_group_choice' => 'getCoreshop_Form_Type_TaxRuleGroupChoiceService',
            'coreshop.form.type.zone' => 'getCoreshop_Form_Type_ZoneService',
            'coreshop.form.type.zone_choice' => 'getCoreshop_Form_Type_ZoneChoiceService',
            'coreshop.form.type_cart_price_rule_choice' => 'getCoreshop_Form_TypeCartPriceRuleChoiceService',
            'coreshop.form_registry.cart_price_rule.actions' => 'getCoreshop_FormRegistry_CartPriceRule_ActionsService',
            'coreshop.form_registry.cart_price_rule.conditions' => 'getCoreshop_FormRegistry_CartPriceRule_ConditionsService',
            'coreshop.form_registry.filter.condition_types' => 'getCoreshop_FormRegistry_Filter_ConditionTypesService',
            'coreshop.form_registry.index.getter' => 'getCoreshop_FormRegistry_Index_GetterService',
            'coreshop.form_registry.index.interpreter' => 'getCoreshop_FormRegistry_Index_InterpreterService',
            'coreshop.form_registry.index.worker' => 'getCoreshop_FormRegistry_Index_WorkerService',
            'coreshop.form_registry.index_column_types' => 'getCoreshop_FormRegistry_IndexColumnTypesService',
            'coreshop.form_registry.notification_rule.actions' => 'getCoreshop_FormRegistry_NotificationRule_ActionsService',
            'coreshop.form_registry.notification_rule.actions.invoice' => 'getCoreshop_FormRegistry_NotificationRule_Actions_InvoiceService',
            'coreshop.form_registry.notification_rule.actions.order' => 'getCoreshop_FormRegistry_NotificationRule_Actions_OrderService',
            'coreshop.form_registry.notification_rule.actions.payment' => 'getCoreshop_FormRegistry_NotificationRule_Actions_PaymentService',
            'coreshop.form_registry.notification_rule.actions.quote' => 'getCoreshop_FormRegistry_NotificationRule_Actions_QuoteService',
            'coreshop.form_registry.notification_rule.actions.shipment' => 'getCoreshop_FormRegistry_NotificationRule_Actions_ShipmentService',
            'coreshop.form_registry.notification_rule.actions.user' => 'getCoreshop_FormRegistry_NotificationRule_Actions_UserService',
            'coreshop.form_registry.notification_rule.conditions' => 'getCoreshop_FormRegistry_NotificationRule_ConditionsService',
            'coreshop.form_registry.notification_rule.conditions.invoice' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_InvoiceService',
            'coreshop.form_registry.notification_rule.conditions.order' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_OrderService',
            'coreshop.form_registry.notification_rule.conditions.payment' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_PaymentService',
            'coreshop.form_registry.notification_rule.conditions.quote' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_QuoteService',
            'coreshop.form_registry.notification_rule.conditions.shipment' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_ShipmentService',
            'coreshop.form_registry.notification_rule.conditions.user' => 'getCoreshop_FormRegistry_NotificationRule_Conditions_UserService',
            'coreshop.form_registry.payum_gateway_config' => 'getCoreshop_FormRegistry_PayumGatewayConfigService',
            'coreshop.form_registry.product_price_rule.actions' => 'getCoreshop_FormRegistry_ProductPriceRule_ActionsService',
            'coreshop.form_registry.product_price_rule.conditions' => 'getCoreshop_FormRegistry_ProductPriceRule_ConditionsService',
            'coreshop.form_registry.product_specific_price_rule.actions' => 'getCoreshop_FormRegistry_ProductSpecificPriceRule_ActionsService',
            'coreshop.form_registry.product_specific_price_rule.conditions' => 'getCoreshop_FormRegistry_ProductSpecificPriceRule_ConditionsService',
            'coreshop.form_registry.shipping_rule.actions' => 'getCoreshop_FormRegistry_ShippingRule_ActionsService',
            'coreshop.form_registry.shipping_rule.conditions' => 'getCoreshop_FormRegistry_ShippingRule_ConditionsService',
            'coreshop.frontend.controller.cart' => 'getCoreshop_Frontend_Controller_CartService',
            'coreshop.frontend.controller.category' => 'getCoreshop_Frontend_Controller_CategoryService',
            'coreshop.frontend.controller.checkout' => 'getCoreshop_Frontend_Controller_CheckoutService',
            'coreshop.frontend.controller.currency' => 'getCoreshop_Frontend_Controller_CurrencyService',
            'coreshop.frontend.controller.customer' => 'getCoreshop_Frontend_Controller_CustomerService',
            'coreshop.frontend.controller.index' => 'getCoreshop_Frontend_Controller_IndexService',
            'coreshop.frontend.controller.language' => 'getCoreshop_Frontend_Controller_LanguageService',
            'coreshop.frontend.controller.payment' => 'getCoreshop_Frontend_Controller_PaymentService',
            'coreshop.frontend.controller.product' => 'getCoreshop_Frontend_Controller_ProductService',
            'coreshop.frontend.controller.quote' => 'getCoreshop_Frontend_Controller_QuoteService',
            'coreshop.frontend.controller.register' => 'getCoreshop_Frontend_Controller_RegisterService',
            'coreshop.frontend.controller.search' => 'getCoreshop_Frontend_Controller_SearchService',
            'coreshop.frontend.controller.security' => 'getCoreshop_Frontend_Controller_SecurityService',
            'coreshop.frontend.controller.wishlist' => 'getCoreshop_Frontend_Controller_WishlistService',
            'coreshop.generator.cart_price_rule_voucher_codes' => 'getCoreshop_Generator_CartPriceRuleVoucherCodesService',
            'coreshop.index.class_helper.product' => 'getCoreshop_Index_ClassHelper_ProductService',
            'coreshop.index.column_type.classification_store' => 'getCoreshop_Index_ColumnType_ClassificationStoreService',
            'coreshop.index.column_type.field_collection' => 'getCoreshop_Index_ColumnType_FieldCollectionService',
            'coreshop.index.column_type.localized_fields' => 'getCoreshop_Index_ColumnType_LocalizedFieldsService',
            'coreshop.index.column_type.object' => 'getCoreshop_Index_ColumnType_ObjectService',
            'coreshop.index.column_type.object_brick' => 'getCoreshop_Index_ColumnType_ObjectBrickService',
            'coreshop.index.getter.brickfield' => 'getCoreshop_Index_Getter_BrickfieldService',
            'coreshop.index.getter.classification_store' => 'getCoreshop_Index_Getter_ClassificationStoreService',
            'coreshop.index.getter.field_collection' => 'getCoreshop_Index_Getter_FieldCollectionService',
            'coreshop.index.getter.localized_field' => 'getCoreshop_Index_Getter_LocalizedFieldService',
            'coreshop.index.interpreter.object' => 'getCoreshop_Index_Interpreter_ObjectService',
            'coreshop.index.interpreter.object_id' => 'getCoreshop_Index_Interpreter_ObjectIdService',
            'coreshop.index.interpreter.object_id_sum' => 'getCoreshop_Index_Interpreter_ObjectIdSumService',
            'coreshop.index.interpreter.object_property' => 'getCoreshop_Index_Interpreter_ObjectPropertyService',
            'coreshop.index.interpreter.soundex' => 'getCoreshop_Index_Interpreter_SoundexService',
            'coreshop.index.updater' => 'getCoreshop_Index_UpdaterService',
            'coreshop.index.worker.mysql' => 'getCoreshop_Index_Worker_MysqlService',
            'coreshop.installer.checker.command_directory' => 'getCoreshop_Installer_Checker_CommandDirectoryService',
            'coreshop.installer.executor.folder_installer' => 'getCoreshop_Installer_Executor_FolderInstallerService',
            'coreshop.jms_serializer.handler.object' => 'getCoreshop_JmsSerializer_Handler_ObjectService',
            'coreshop.jms_serializer.handler.relation' => 'getCoreshop_JmsSerializer_Handler_RelationService',
            'coreshop.listener.cart_blamer' => 'getCoreshop_Listener_CartBlamerService',
            'coreshop.listener.theme_request' => 'getCoreshop_Listener_ThemeRequestService',
            'coreshop.listeners.index.object.post_update' => 'getCoreshop_Listeners_Index_Object_PostUpdateService',
            'coreshop.listeners.product.category.pre_update' => 'getCoreshop_Listeners_Product_Category_PreUpdateService',
            'coreshop.mail.processor.order' => 'getCoreshop_Mail_Processor_OrderService',
            'coreshop.money_formatter' => 'getCoreshop_MoneyFormatterService',
            'coreshop.notification.listener.customer' => 'getCoreshop_Notification_Listener_CustomerService',
            'coreshop.notification.listener.invoice' => 'getCoreshop_Notification_Listener_InvoiceService',
            'coreshop.notification.listener.quote' => 'getCoreshop_Notification_Listener_QuoteService',
            'coreshop.notification.listener.shipment' => 'getCoreshop_Notification_Listener_ShipmentService',
            'coreshop.notification.listsener.order' => 'getCoreshop_Notification_Listsener_OrderService',
            'coreshop.notification_rule.action.mail' => 'getCoreshop_NotificationRule_Action_MailService',
            'coreshop.notification_rule.action.order_mail' => 'getCoreshop_NotificationRule_Action_OrderMailService',
            'coreshop.notification_rule.applier' => 'getCoreshop_NotificationRule_ApplierService',
            'coreshop.notification_rule.condition.invoice.invoice' => 'getCoreshop_NotificationRule_Condition_Invoice_InvoiceService',
            'coreshop.notification_rule.condition.order.carriers' => 'getCoreshop_NotificationRule_Condition_Order_CarriersService',
            'coreshop.notification_rule.condition.order.invoice_state' => 'getCoreshop_NotificationRule_Condition_Order_InvoiceStateService',
            'coreshop.notification_rule.condition.order.order_state' => 'getCoreshop_NotificationRule_Condition_Order_OrderStateService',
            'coreshop.notification_rule.condition.order.payment_state' => 'getCoreshop_NotificationRule_Condition_Order_PaymentStateService',
            'coreshop.notification_rule.condition.order.shipment_state' => 'getCoreshop_NotificationRule_Condition_Order_ShipmentStateService',
            'coreshop.notification_rule.condition.payment.payment_state' => 'getCoreshop_NotificationRule_Condition_Payment_PaymentStateService',
            'coreshop.notification_rule.condition.shipment.shipment' => 'getCoreshop_NotificationRule_Condition_Shipment_ShipmentService',
            'coreshop.notification_rule.condition.user.user_type' => 'getCoreshop_NotificationRule_Condition_User_UserTypeService',
            'coreshop.notification_rule.conditions.processor' => 'getCoreshop_NotificationRule_Conditions_ProcessorService',
            'coreshop.notification_rule.processor' => 'getCoreshop_NotificationRule_ProcessorService',
            'coreshop.notification_rule.validation.processor' => 'getCoreshop_NotificationRule_Validation_ProcessorService',
            'coreshop.object_service' => 'getCoreshop_ObjectServiceService',
            'coreshop.order.configurator.session_cart' => 'getCoreshop_Order_Configurator_SessionCartService',
            'coreshop.order.invoice.processable' => 'getCoreshop_Order_Invoice_ProcessableService',
            'coreshop.order.listener.wkhtml_options' => 'getCoreshop_Order_Listener_WkhtmlOptionsService',
            'coreshop.order.number_generator.prefix_suffix' => 'getCoreshop_Order_NumberGenerator_PrefixSuffixService',
            'coreshop.order.purchasable.discount_calculator' => 'getCoreshop_Order_Purchasable_DiscountCalculatorService',
            'coreshop.order.purchasable.discount_calculator.no_discount' => 'getCoreshop_Order_Purchasable_DiscountCalculator_NoDiscountService',
            'coreshop.order.purchasable.discount_calculator.product' => 'getCoreshop_Order_Purchasable_DiscountCalculator_ProductService',
            'coreshop.order.purchasable.price_calculator' => 'getCoreshop_Order_Purchasable_PriceCalculatorService',
            'coreshop.order.purchasable.price_calculator.price_aware' => 'getCoreshop_Order_Purchasable_PriceCalculator_PriceAwareService',
            'coreshop.order.purchasable.price_calculator.product' => 'getCoreshop_Order_Purchasable_PriceCalculator_ProductService',
            'coreshop.order.renderer.pdf' => 'getCoreshop_Order_Renderer_PdfService',
            'coreshop.order.shipment.processable' => 'getCoreshop_Order_Shipment_ProcessableService',
            'coreshop.order.transformer.cart_item_to_order_item' => 'getCoreshop_Order_Transformer_CartItemToOrderItemService',
            'coreshop.order.transformer.cart_item_to_quote_item' => 'getCoreshop_Order_Transformer_CartItemToQuoteItemService',
            'coreshop.order.transformer.order_to_invoice' => 'getCoreshop_Order_Transformer_OrderToInvoiceService',
            'coreshop.order.transformer.order_to_shipment' => 'getCoreshop_Order_Transformer_OrderToShipmentService',
            'coreshop.order_invoice.number_generator.prefix_suffix' => 'getCoreshop_OrderInvoice_NumberGenerator_PrefixSuffixService',
            'coreshop.order_invoice.transformer.cart_item_to_order_item' => 'getCoreshop_OrderInvoice_Transformer_CartItemToOrderItemService',
            'coreshop.order_shipment.number_generator.prefix_suffix' => 'getCoreshop_OrderShipment_NumberGenerator_PrefixSuffixService',
            'coreshop.order_shipment.transformer.order_item_to_shipment_item' => 'getCoreshop_OrderShipment_Transformer_OrderItemToShipmentItemService',
            'coreshop.payum.http_client' => 'getCoreshop_Payum_HttpClientService',
            'coreshop.payum_action.offine.resolve_next_route' => 'getCoreshop_PayumAction_Offine_ResolveNextRouteService',
            'coreshop.payum_action.offline.convert_payment' => 'getCoreshop_PayumAction_Offline_ConvertPaymentService',
            'coreshop.payum_action.offline.status' => 'getCoreshop_PayumAction_Offline_StatusService',
            'coreshop.payum_action.resolve_next_route' => 'getCoreshop_PayumAction_ResolveNextRouteService',
            'coreshop.payum_extension.update_order_workflow_extension' => 'getCoreshop_PayumExtension_UpdateOrderWorkflowExtensionService',
            'coreshop.payum_extension.update_payment_state' => 'getCoreshop_PayumExtension_UpdatePaymentStateService',
            'coreshop.pimcore_controller.order' => 'getCoreshop_PimcoreController_OrderService',
            'coreshop.pimcore_controller.order_creation' => 'getCoreshop_PimcoreController_OrderCreationService',
            'coreshop.pimcore_controller.order_invoice' => 'getCoreshop_PimcoreController_OrderInvoiceService',
            'coreshop.pimcore_controller.order_shipment' => 'getCoreshop_PimcoreController_OrderShipmentService',
            'coreshop.pimcore_controller.quote' => 'getCoreshop_PimcoreController_QuoteService',
            'coreshop.pimcore_controller.quote_creation' => 'getCoreshop_PimcoreController_QuoteCreationService',
            'coreshop.product.price_calculator.cached_product_price_rules_fetcher' => 'getCoreshop_Product_PriceCalculator_CachedProductPriceRulesFetcherService',
            'coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher' => 'getCoreshop_Product_PriceCalculator_CachedProductSpecificPriceRulesFetcherService',
            'coreshop.product.price_calculator.composite' => 'getCoreshop_Product_PriceCalculator_CompositeService',
            'coreshop.product.price_calculator.product_price_rules' => 'getCoreshop_Product_PriceCalculator_ProductPriceRulesService',
            'coreshop.product.price_calculator.product_specific_price_rules' => 'getCoreshop_Product_PriceCalculator_ProductSpecificPriceRulesService',
            'coreshop.product.price_calculator.tagged' => 'getCoreshop_Product_PriceCalculator_TaggedService',
            'coreshop.product.tax_factory' => 'getCoreshop_Product_TaxFactoryService',
            'coreshop.product.taxed_price_calculator' => 'getCoreshop_Product_TaxedPriceCalculatorService',
            'coreshop.product_price_rule.action.discount_amount' => 'getCoreshop_ProductPriceRule_Action_DiscountAmountService',
            'coreshop.product_price_rule.action.discount_percent' => 'getCoreshop_ProductPriceRule_Action_DiscountPercentService',
            'coreshop.product_price_rule.action.price' => 'getCoreshop_ProductPriceRule_Action_PriceService',
            'coreshop.product_price_rule.condition.categories' => 'getCoreshop_ProductPriceRule_Condition_CategoriesService',
            'coreshop.product_price_rule.condition.nested' => 'getCoreshop_ProductPriceRule_Condition_NestedService',
            'coreshop.product_price_rule.condition.products' => 'getCoreshop_ProductPriceRule_Condition_ProductsService',
            'coreshop.product_price_rule.condition.quantity' => 'getCoreshop_ProductPriceRule_Condition_QuantityService',
            'coreshop.product_price_rule.condition.timespan' => 'getCoreshop_ProductPriceRule_Condition_TimespanService',
            'coreshop.product_price_rule.conditions.processor' => 'getCoreshop_ProductPriceRule_Conditions_ProcessorService',
            'coreshop.product_price_rule.processor' => 'getCoreshop_ProductPriceRule_ProcessorService',
            'coreshop.product_specific_price_rule.condition.nested' => 'getCoreshop_ProductSpecificPriceRule_Condition_NestedService',
            'coreshop.product_specific_price_rule.conditions.processor' => 'getCoreshop_ProductSpecificPriceRule_Conditions_ProcessorService',
            'coreshop.product_specific_price_rule.processor' => 'getCoreshop_ProductSpecificPriceRule_ProcessorService',
            'coreshop.quote.number_generator.prefix_suffix' => 'getCoreshop_Quote_NumberGenerator_PrefixSuffixService',
            'coreshop.registry.cart_price_rule.actions' => 'getCoreshop_Registry_CartPriceRule_ActionsService',
            'coreshop.registry.cart_price_rule.conditions' => 'getCoreshop_Registry_CartPriceRule_ConditionsService',
            'coreshop.registry.filter.condition_types' => 'getCoreshop_Registry_Filter_ConditionTypesService',
            'coreshop.registry.index.class_helpers' => 'getCoreshop_Registry_Index_ClassHelpersService',
            'coreshop.registry.index.column_types' => 'getCoreshop_Registry_Index_ColumnTypesService',
            'coreshop.registry.index.getter' => 'getCoreshop_Registry_Index_GetterService',
            'coreshop.registry.index.interpreter' => 'getCoreshop_Registry_Index_InterpreterService',
            'coreshop.registry.index.worker' => 'getCoreshop_Registry_Index_WorkerService',
            'coreshop.registry.notification_rule.actions' => 'getCoreshop_Registry_NotificationRule_ActionsService',
            'coreshop.registry.notification_rule.actions.invoice' => 'getCoreshop_Registry_NotificationRule_Actions_InvoiceService',
            'coreshop.registry.notification_rule.actions.order' => 'getCoreshop_Registry_NotificationRule_Actions_OrderService',
            'coreshop.registry.notification_rule.actions.payment' => 'getCoreshop_Registry_NotificationRule_Actions_PaymentService',
            'coreshop.registry.notification_rule.actions.quote' => 'getCoreshop_Registry_NotificationRule_Actions_QuoteService',
            'coreshop.registry.notification_rule.actions.shipment' => 'getCoreshop_Registry_NotificationRule_Actions_ShipmentService',
            'coreshop.registry.notification_rule.actions.user' => 'getCoreshop_Registry_NotificationRule_Actions_UserService',
            'coreshop.registry.notification_rule.conditions' => 'getCoreshop_Registry_NotificationRule_ConditionsService',
            'coreshop.registry.notification_rule.conditions.invoice' => 'getCoreshop_Registry_NotificationRule_Conditions_InvoiceService',
            'coreshop.registry.notification_rule.conditions.order' => 'getCoreshop_Registry_NotificationRule_Conditions_OrderService',
            'coreshop.registry.notification_rule.conditions.payment' => 'getCoreshop_Registry_NotificationRule_Conditions_PaymentService',
            'coreshop.registry.notification_rule.conditions.quote' => 'getCoreshop_Registry_NotificationRule_Conditions_QuoteService',
            'coreshop.registry.notification_rule.conditions.shipment' => 'getCoreshop_Registry_NotificationRule_Conditions_ShipmentService',
            'coreshop.registry.notification_rule.conditions.user' => 'getCoreshop_Registry_NotificationRule_Conditions_UserService',
            'coreshop.registry.order.purchasable.discount_calculators' => 'getCoreshop_Registry_Order_Purchasable_DiscountCalculatorsService',
            'coreshop.registry.order.purchasable.price_calculators' => 'getCoreshop_Registry_Order_Purchasable_PriceCalculatorsService',
            'coreshop.registry.product.price_calculators' => 'getCoreshop_Registry_Product_PriceCalculatorsService',
            'coreshop.registry.product_price_rule.actions' => 'getCoreshop_Registry_ProductPriceRule_ActionsService',
            'coreshop.registry.product_price_rule.conditions' => 'getCoreshop_Registry_ProductPriceRule_ConditionsService',
            'coreshop.registry.product_specific_price_rule.actions' => 'getCoreshop_Registry_ProductSpecificPriceRule_ActionsService',
            'coreshop.registry.product_specific_price_rule.conditions' => 'getCoreshop_Registry_ProductSpecificPriceRule_ConditionsService',
            'coreshop.registry.reports' => 'getCoreshop_Registry_ReportsService',
            'coreshop.registry.resource.installers' => 'getCoreshop_Registry_Resource_InstallersService',
            'coreshop.registry.shipping.price_calculators' => 'getCoreshop_Registry_Shipping_PriceCalculatorsService',
            'coreshop.registry.shipping_rule.actions' => 'getCoreshop_Registry_ShippingRule_ActionsService',
            'coreshop.registry.shipping_rule.conditions' => 'getCoreshop_Registry_ShippingRule_ConditionsService',
            'coreshop.registry.tracking.tracker' => 'getCoreshop_Registry_Tracking_TrackerService',
            'coreshop.renderer.order.pdf.asset' => 'getCoreshop_Renderer_Order_Pdf_AssetService',
            'coreshop.report.carriers' => 'getCoreshop_Report_CarriersService',
            'coreshop.report.carts' => 'getCoreshop_Report_CartsService',
            'coreshop.report.carts_abandoned' => 'getCoreshop_Report_CartsAbandonedService',
            'coreshop.report.categories' => 'getCoreshop_Report_CategoriesService',
            'coreshop.report.customers' => 'getCoreshop_Report_CustomersService',
            'coreshop.report.payment_providers' => 'getCoreshop_Report_PaymentProvidersService',
            'coreshop.report.products' => 'getCoreshop_Report_ProductsService',
            'coreshop.report.sales' => 'getCoreshop_Report_SalesService',
            'coreshop.repository.address' => 'getCoreshop_Repository_AddressService',
            'coreshop.repository.carrier' => 'getCoreshop_Repository_CarrierService',
            'coreshop.repository.cart' => 'getCoreshop_Repository_CartService',
            'coreshop.repository.cart_item' => 'getCoreshop_Repository_CartItemService',
            'coreshop.repository.cart_price_rule' => 'getCoreshop_Repository_CartPriceRuleService',
            'coreshop.repository.cart_price_rule_item' => 'getCoreshop_Repository_CartPriceRuleItemService',
            'coreshop.repository.cart_price_rule_voucher_code' => 'getCoreshop_Repository_CartPriceRuleVoucherCodeService',
            'coreshop.repository.category' => 'getCoreshop_Repository_CategoryService',
            'coreshop.repository.configuration' => 'getCoreshop_Repository_ConfigurationService',
            'coreshop.repository.country' => 'getCoreshop_Repository_CountryService',
            'coreshop.repository.country_translation' => 'getCoreshop_Repository_CountryTranslationService',
            'coreshop.repository.currency' => 'getCoreshop_Repository_CurrencyService',
            'coreshop.repository.customer' => 'getCoreshop_Repository_CustomerService',
            'coreshop.repository.customer_group' => 'getCoreshop_Repository_CustomerGroupService',
            'coreshop.repository.exchange_rate' => 'getCoreshop_Repository_ExchangeRateService',
            'coreshop.repository.filter' => 'getCoreshop_Repository_FilterService',
            'coreshop.repository.filter_condition' => 'getCoreshop_Repository_FilterConditionService',
            'coreshop.repository.gateway_config' => 'getCoreshop_Repository_GatewayConfigService',
            'coreshop.repository.index' => 'getCoreshop_Repository_IndexService',
            'coreshop.repository.index_column' => 'getCoreshop_Repository_IndexColumnService',
            'coreshop.repository.manufacturer' => 'getCoreshop_Repository_ManufacturerService',
            'coreshop.repository.notification_rule' => 'getCoreshop_Repository_NotificationRuleService',
            'coreshop.repository.order' => 'getCoreshop_Repository_OrderService',
            'coreshop.repository.order_invoice' => 'getCoreshop_Repository_OrderInvoiceService',
            'coreshop.repository.order_invoice_item' => 'getCoreshop_Repository_OrderInvoiceItemService',
            'coreshop.repository.order_item' => 'getCoreshop_Repository_OrderItemService',
            'coreshop.repository.order_shipment' => 'getCoreshop_Repository_OrderShipmentService',
            'coreshop.repository.order_shipment_item' => 'getCoreshop_Repository_OrderShipmentItemService',
            'coreshop.repository.payment' => 'getCoreshop_Repository_PaymentService',
            'coreshop.repository.payment_provider' => 'getCoreshop_Repository_PaymentProviderService',
            'coreshop.repository.payment_provider_translation' => 'getCoreshop_Repository_PaymentProviderTranslationService',
            'coreshop.repository.payment_security_token' => 'getCoreshop_Repository_PaymentSecurityTokenService',
            'coreshop.repository.product' => 'getCoreshop_Repository_ProductService',
            'coreshop.repository.product_price_rule' => 'getCoreshop_Repository_ProductPriceRuleService',
            'coreshop.repository.product_specific_price_rule' => 'getCoreshop_Repository_ProductSpecificPriceRuleService',
            'coreshop.repository.quote' => 'getCoreshop_Repository_QuoteService',
            'coreshop.repository.quote_item' => 'getCoreshop_Repository_QuoteItemService',
            'coreshop.repository.rule_action' => 'getCoreshop_Repository_RuleActionService',
            'coreshop.repository.rule_condition' => 'getCoreshop_Repository_RuleConditionService',
            'coreshop.repository.sequence' => 'getCoreshop_Repository_SequenceService',
            'coreshop.repository.shipping_rule' => 'getCoreshop_Repository_ShippingRuleService',
            'coreshop.repository.shipping_rule_group' => 'getCoreshop_Repository_ShippingRuleGroupService',
            'coreshop.repository.state' => 'getCoreshop_Repository_StateService',
            'coreshop.repository.state_translation' => 'getCoreshop_Repository_StateTranslationService',
            'coreshop.repository.store' => 'getCoreshop_Repository_StoreService',
            'coreshop.repository.tax_item' => 'getCoreshop_Repository_TaxItemService',
            'coreshop.repository.tax_rate' => 'getCoreshop_Repository_TaxRateService',
            'coreshop.repository.tax_rate_translation' => 'getCoreshop_Repository_TaxRateTranslationService',
            'coreshop.repository.tax_rule' => 'getCoreshop_Repository_TaxRuleService',
            'coreshop.repository.tax_rule_group' => 'getCoreshop_Repository_TaxRuleGroupService',
            'coreshop.repository.zone' => 'getCoreshop_Repository_ZoneService',
            'coreshop.resource.helper.form_error_serializer' => 'getCoreshop_Resource_Helper_FormErrorSerializerService',
            'coreshop.resource.installer' => 'getCoreshop_Resource_InstallerService',
            'coreshop.resource.installer.classes' => 'getCoreshop_Resource_Installer_ClassesService',
            'coreshop.resource.installer.documents' => 'getCoreshop_Resource_Installer_DocumentsService',
            'coreshop.resource.installer.image_thumbnails' => 'getCoreshop_Resource_Installer_ImageThumbnailsService',
            'coreshop.resource.installer.permissions' => 'getCoreshop_Resource_Installer_PermissionsService',
            'coreshop.resource.installer.routes' => 'getCoreshop_Resource_Installer_RoutesService',
            'coreshop.resource.installer.sql' => 'getCoreshop_Resource_Installer_SqlService',
            'coreshop.resource.object_cloner' => 'getCoreshop_Resource_ObjectClonerService',
            'coreshop.resource_controller.event_dispatcher' => 'getCoreshop_ResourceController_EventDispatcherService',
            'coreshop.resource_controller.form_factory' => 'getCoreshop_ResourceController_FormFactoryService',
            'coreshop.resource_controller.view_handler' => 'getCoreshop_ResourceController_ViewHandlerService',
            'coreshop.resource_loader' => 'getCoreshop_ResourceLoaderService',
            'coreshop.resource_registry' => 'getCoreshop_ResourceRegistryService',
            'coreshop.rule.cart_price_rule.action.free_shipping' => 'getCoreshop_Rule_CartPriceRule_Action_FreeShippingService',
            'coreshop.rule.cart_price_rule.action.gift_product' => 'getCoreshop_Rule_CartPriceRule_Action_GiftProductService',
            'coreshop.rule.cart_price_rule.condition.carriers' => 'getCoreshop_Rule_CartPriceRule_Condition_CarriersService',
            'coreshop.rule.cart_price_rule.condition.countries' => 'getCoreshop_Rule_CartPriceRule_Condition_CountriesService',
            'coreshop.rule.cart_price_rule.condition.currencies' => 'getCoreshop_Rule_CartPriceRule_Condition_CurrenciesService',
            'coreshop.rule.cart_price_rule.condition.customer_groups' => 'getCoreshop_Rule_CartPriceRule_Condition_CustomerGroupsService',
            'coreshop.rule.cart_price_rule.condition.customers' => 'getCoreshop_Rule_CartPriceRule_Condition_CustomersService',
            'coreshop.rule.cart_price_rule.condition.stores' => 'getCoreshop_Rule_CartPriceRule_Condition_StoresService',
            'coreshop.rule.cart_price_rule.condition.zones' => 'getCoreshop_Rule_CartPriceRule_Condition_ZonesService',
            'coreshop.rule.condition.countries' => 'getCoreshop_Rule_Condition_CountriesService',
            'coreshop.rule.condition.currencies' => 'getCoreshop_Rule_Condition_CurrenciesService',
            'coreshop.rule.condition.customer_groups' => 'getCoreshop_Rule_Condition_CustomerGroupsService',
            'coreshop.rule.condition.customers' => 'getCoreshop_Rule_Condition_CustomersService',
            'coreshop.rule.condition.stores' => 'getCoreshop_Rule_Condition_StoresService',
            'coreshop.rule.condition.zones' => 'getCoreshop_Rule_Condition_ZonesService',
            'coreshop.security.customer.password_encoder_factory' => 'getCoreshop_Security_Customer_PasswordEncoderFactoryService',
            'coreshop.security.customer.user_provider' => 'getCoreshop_Security_Customer_UserProviderService',
            'coreshop.sequence.generator' => 'getCoreshop_Sequence_GeneratorService',
            'coreshop.shippable_carrier.shipping_rule.validator' => 'getCoreshop_ShippableCarrier_ShippingRule_ValidatorService',
            'coreshop.shipping.carrier.validator' => 'getCoreshop_Shipping_Carrier_ValidatorService',
            'coreshop.shipping_rule.action.addition_amount' => 'getCoreshop_ShippingRule_Action_AdditionAmountService',
            'coreshop.shipping_rule.action.addition_percent' => 'getCoreshop_ShippingRule_Action_AdditionPercentService',
            'coreshop.shipping_rule.action.discount_amount' => 'getCoreshop_ShippingRule_Action_DiscountAmountService',
            'coreshop.shipping_rule.action.discount_percent' => 'getCoreshop_ShippingRule_Action_DiscountPercentService',
            'coreshop.shipping_rule.action.price' => 'getCoreshop_ShippingRule_Action_PriceService',
            'coreshop.shipping_rule.action.shipping_rule' => 'getCoreshop_ShippingRule_Action_ShippingRuleService',
            'coreshop.shipping_rule.condition.amount' => 'getCoreshop_ShippingRule_Condition_AmountService',
            'coreshop.shipping_rule.condition.categories' => 'getCoreshop_ShippingRule_Condition_CategoriesService',
            'coreshop.shipping_rule.condition.countries' => 'getCoreshop_ShippingRule_Condition_CountriesService',
            'coreshop.shipping_rule.condition.dimension' => 'getCoreshop_ShippingRule_Condition_DimensionService',
            'coreshop.shipping_rule.condition.nested' => 'getCoreshop_ShippingRule_Condition_NestedService',
            'coreshop.shipping_rule.condition.postcodes' => 'getCoreshop_ShippingRule_Condition_PostcodesService',
            'coreshop.shipping_rule.condition.products' => 'getCoreshop_ShippingRule_Condition_ProductsService',
            'coreshop.shipping_rule.condition.shipping_rule' => 'getCoreshop_ShippingRule_Condition_ShippingRuleService',
            'coreshop.shipping_rule.condition.weight' => 'getCoreshop_ShippingRule_Condition_WeightService',
            'coreshop.shipping_rule.conditions.processor' => 'getCoreshop_ShippingRule_Conditions_ProcessorService',
            'coreshop.shipping_rule.processor' => 'getCoreshop_ShippingRule_ProcessorService',
            'coreshop.storage.cookie' => 'getCoreshop_Storage_CookieService',
            'coreshop.storage.currency' => 'getCoreshop_Storage_CurrencyService',
            'coreshop.storage.session' => 'getCoreshop_Storage_SessionService',
            'coreshop.store.theme_resolver' => 'getCoreshop_Store_ThemeResolverService',
            'coreshop.store_collector' => 'getCoreshop_StoreCollectorService',
            'coreshop.taxation.factory.cached_tax_calculator' => 'getCoreshop_Taxation_Factory_CachedTaxCalculatorService',
            'coreshop.templating.helper.convert_money' => 'getCoreshop_Templating_Helper_ConvertMoneyService',
            'coreshop.templating.helper.currency' => 'getCoreshop_Templating_Helper_CurrencyService',
            'coreshop.templating.helper.discount' => 'getCoreshop_Templating_Helper_DiscountService',
            'coreshop.templating.helper.format_address' => 'getCoreshop_Templating_Helper_FormatAddressService',
            'coreshop.templating.helper.format_money' => 'getCoreshop_Templating_Helper_FormatMoneyService',
            'coreshop.templating.helper.price' => 'getCoreshop_Templating_Helper_PriceService',
            'coreshop.tracking.item_builder.decorated' => 'getCoreshop_Tracking_ItemBuilder_DecoratedService',
            'coreshop.tracking.manager' => 'getCoreshop_Tracking_ManagerService',
            'coreshop.tracking.tracker.google.enhanced_ecommerce' => 'getCoreshop_Tracking_Tracker_Google_EnhancedEcommerceService',
            'coreshop.transformer.event_dispatcher' => 'getCoreshop_Transformer_EventDispatcherService',
            'coreshop.translatable_entity_locale_assigner' => 'getCoreshop_TranslatableEntityLocaleAssignerService',
            'coreshop.translation.translatable_listener.doctrine.orm' => 'getCoreshop_Translation_TranslatableListener_Doctrine_OrmService',
            'coreshop.translation_locale_provider.pimcore' => 'getCoreshop_TranslationLocaleProvider_PimcoreService',
            'coreshop.twig.extension.discount' => 'getCoreshop_Twig_Extension_DiscountService',
            'coreshop.twig.extension.price' => 'getCoreshop_Twig_Extension_PriceService',
            'coreshop.wishlist.manager' => 'getCoreshop_Wishlist_ManagerService',
            'coreshop.wishlist.modifier' => 'getCoreshop_Wishlist_ModifierService',
            'coreshop.workflow.manager.order' => 'getCoreshop_Workflow_Manager_OrderService',
            'coreshop.workflow.manager.order.validator.invoice' => 'getCoreshop_Workflow_Manager_Order_Validator_InvoiceService',
            'coreshop.workflow.manager.order.validator.payment' => 'getCoreshop_Workflow_Manager_Order_Validator_PaymentService',
            'coreshop.workflow.manager.order.validator.shipment' => 'getCoreshop_Workflow_Manager_Order_Validator_ShipmentService',
            'coreshop.workflow.manager.order.validators' => 'getCoreshop_Workflow_Manager_Order_ValidatorsService',
            'coreshop.workflow.manager.registry' => 'getCoreshop_Workflow_Manager_RegistryService',
            'data_collector.dump' => 'getDataCollector_DumpService',
            'data_collector.form' => 'getDataCollector_FormService',
            'data_collector.form.extractor' => 'getDataCollector_Form_ExtractorService',
            'data_collector.request' => 'getDataCollector_RequestService',
            'data_collector.router' => 'getDataCollector_RouterService',
            'data_collector.translation' => 'getDataCollector_TranslationService',
            'debug.argument_resolver' => 'getDebug_ArgumentResolverService',
            'debug.controller_resolver' => 'getDebug_ControllerResolverService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.dump_listener' => 'getDebug_DumpListenerService',
            'debug.event_dispatcher' => 'getDebug_EventDispatcherService',
            'debug.file_link_formatter' => 'getDebug_FileLinkFormatterService',
            'debug.log_processor' => 'getDebug_LogProcessorService',
            'debug.security.access.decision_manager' => 'getDebug_Security_Access_DecisionManagerService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'debug.templating.engine.php' => 'getDebug_Templating_Engine_PhpService',
            'deprecated.form.registry' => 'getDeprecated_Form_RegistryService',
            'deprecated.form.registry.csrf' => 'getDeprecated_Form_Registry_CsrfService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.dbal.logger.profiling.default' => 'getDoctrine_Dbal_Logger_Profiling_DefaultService',
            'doctrine.orm.default_entity_listener_resolver' => 'getDoctrine_Orm_DefaultEntityListenerResolverService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_entity_manager.property_info_extractor' => 'getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService',
            'doctrine.orm.default_listeners.attach_entity_listeners' => 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'doctrine_cache.providers.coreshop_pimcore_metadata_cache' => 'getDoctrineCache_Providers_CoreshopPimcoreMetadataCacheService',
            'doctrine_cache.providers.coreshop_pimcore_query_cache' => 'getDoctrineCache_Providers_CoreshopPimcoreQueryCacheService',
            'doctrine_cache.providers.coreshop_pimcore_result_cache' => 'getDoctrineCache_Providers_CoreshopPimcoreResultCacheService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.range' => 'getForm_Type_RangeService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.data_collector' => 'getForm_TypeExtension_Form_DataCollectorService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_extension.upload.validator' => 'getForm_TypeExtension_Upload_ValidatorService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_rest.body_listener' => 'getFosRest_BodyListenerService',
            'fos_rest.decoder.json' => 'getFosRest_Decoder_JsonService',
            'fos_rest.decoder.jsontoform' => 'getFosRest_Decoder_JsontoformService',
            'fos_rest.decoder.xml' => 'getFosRest_Decoder_XmlService',
            'fos_rest.decoder_provider' => 'getFosRest_DecoderProviderService',
            'fos_rest.format_listener' => 'getFosRest_FormatListenerService',
            'fos_rest.format_negotiator' => 'getFosRest_FormatNegotiatorService',
            'fos_rest.inflector' => 'getFosRest_InflectorService',
            'fos_rest.normalizer.camel_keys' => 'getFosRest_Normalizer_CamelKeysService',
            'fos_rest.normalizer.camel_keys_with_leading_underscore' => 'getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService',
            'fos_rest.request.param_fetcher' => 'getFosRest_Request_ParamFetcherService',
            'fos_rest.request.param_fetcher.reader' => 'getFosRest_Request_ParamFetcher_ReaderService',
            'fos_rest.serializer' => 'getFosRest_SerializerService',
            'fos_rest.serializer.jms_handler_registry' => 'getFosRest_Serializer_JmsHandlerRegistryService',
            'fos_rest.templating' => 'getFosRest_TemplatingService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'http_kernel' => 'getHttpKernelService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.accessor_strategy' => 'getJmsSerializer_AccessorStrategyService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.deserialization_context_factory' => 'getJmsSerializer_DeserializationContextFactoryService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.expression_evaluator' => 'getJmsSerializer_ExpressionEvaluatorService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.serialization_context_factory' => 'getJmsSerializer_SerializationContextFactoryService',
            'jms_serializer.stopwatch_subscriber' => 'getJmsSerializer_StopwatchSubscriberService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.twig_extension.serializer_runtime_helper' => 'getJmsSerializer_TwigExtension_SerializerRuntimeHelperService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'kernel.class_cache.cache_warmer' => 'getKernel_ClassCache_CacheWarmerService',
            'liip_theme.active_theme' => 'getLiipTheme_ActiveThemeService',
            'liip_theme.theme_auto_detect' => 'getLiipTheme_ThemeAutoDetectService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'monolog.activation_strategy.not_found' => 'getMonolog_ActivationStrategy_NotFoundService',
            'monolog.handler.console' => 'getMonolog_Handler_ConsoleService',
            'monolog.handler.fingers_crossed.error_level_activation_strategy' => 'getMonolog_Handler_FingersCrossed_ErrorLevelActivationStrategyService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.handler.null_internal' => 'getMonolog_Handler_NullInternalService',
            'monolog.logger.admin' => 'getMonolog_Logger_AdminService',
            'monolog.logger.cache' => 'getMonolog_Logger_CacheService',
            'monolog.logger.console' => 'getMonolog_Logger_ConsoleService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.event' => 'getMonolog_Logger_EventService',
            'monolog.logger.init' => 'getMonolog_Logger_InitService',
            'monolog.logger.payum' => 'getMonolog_Logger_PayumService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.pimcore' => 'getMonolog_Logger_PimcoreService',
            'monolog.logger.pimcore.maintenance' => 'getMonolog_Logger_Pimcore_MaintenanceService',
            'monolog.logger.pimcore_admin.session' => 'getMonolog_Logger_PimcoreAdmin_SessionService',
            'monolog.logger.pimcore_api' => 'getMonolog_Logger_PimcoreApiService',
            'monolog.logger.pimcore_ecommerce' => 'getMonolog_Logger_PimcoreEcommerceService',
            'monolog.logger.pimcore_ecommerce.installer' => 'getMonolog_Logger_PimcoreEcommerce_InstallerService',
            'monolog.logger.pimcore_ecommerce_es' => 'getMonolog_Logger_PimcoreEcommerceEsService',
            'monolog.logger.pimcore_ecommerce_factfinder' => 'getMonolog_Logger_PimcoreEcommerceFactfinderService',
            'monolog.logger.pimcore_ecommerce_findologic' => 'getMonolog_Logger_PimcoreEcommerceFindologicService',
            'monolog.logger.pimcore_ecommerce_indexupdater' => 'getMonolog_Logger_PimcoreEcommerceIndexupdaterService',
            'monolog.logger.pimcore_ecommerce_sql' => 'getMonolog_Logger_PimcoreEcommerceSqlService',
            'monolog.logger.profiler' => 'getMonolog_Logger_ProfilerService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.routing' => 'getMonolog_Logger_RoutingService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.session' => 'getMonolog_Logger_SessionService',
            'monolog.logger.templating' => 'getMonolog_Logger_TemplatingService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'monolog.processor.psr_log_message' => 'getMonolog_Processor_PsrLogMessageService',
            'payum' => 'getPayumService',
            'payum.action.get_http_request' => 'getPayum_Action_GetHttpRequestService',
            'payum.action.obtain_credit_card_builder' => 'getPayum_Action_ObtainCreditCardBuilderService',
            'payum.builder' => 'getPayum_BuilderService',
            'payum.converter.reply_to_http_response' => 'getPayum_Converter_ReplyToHttpResponseService',
            'payum.dynamic_gateways.config_storage' => 'getPayum_DynamicGateways_ConfigStorageService',
            'payum.dynamic_registry' => 'getPayum_DynamicRegistryService',
            'payum.extension.log_executed_actions' => 'getPayum_Extension_LogExecutedActionsService',
            'payum.extension.logger' => 'getPayum_Extension_LoggerService',
            'payum.extension.storage.coreshop_component_payment_model_payment' => 'getPayum_Extension_Storage_CoreshopComponentPaymentModelPaymentService',
            'payum.form.extension.gateway_factories_choice' => 'getPayum_Form_Extension_GatewayFactoriesChoiceService',
            'payum.form.type.credit_card' => 'getPayum_Form_Type_CreditCardService',
            'payum.form.type.credit_card_expiration_date' => 'getPayum_Form_Type_CreditCardExpirationDateService',
            'payum.form.type.gateway_config' => 'getPayum_Form_Type_GatewayConfigService',
            'payum.form.type.gateway_factories_choice' => 'getPayum_Form_Type_GatewayFactoriesChoiceService',
            'payum.listener.reply_to_http_response' => 'getPayum_Listener_ReplyToHttpResponseService',
            'payum.profiler.payum_collector' => 'getPayum_Profiler_PayumCollectorService',
            'payum.security.token_storage' => 'getPayum_Security_TokenStorageService',
            'payum.static_registry' => 'getPayum_StaticRegistryService',
            'payum.storage.coreshop_bundle_payumbundle_model_gatewayconfig' => 'getPayum_Storage_CoreshopBundlePayumbundleModelGatewayconfigService',
            'payum.storage.coreshop_bundle_payumbundle_model_paymentsecuritytoken' => 'getPayum_Storage_CoreshopBundlePayumbundleModelPaymentsecuritytokenService',
            'payum.storage.coreshop_component_payment_model_payment' => 'getPayum_Storage_CoreshopComponentPaymentModelPaymentService',
            'pimcore.bundle_locator' => 'getPimcore_BundleLocatorService',
            'pimcore.cache.core.handler' => 'getPimcore_Cache_Core_HandlerService',
            'pimcore.cache.core.pool.array' => 'getPimcore_Cache_Core_Pool_ArrayService',
            'pimcore.cache.core.pool.doctrine' => 'getPimcore_Cache_Core_Pool_DoctrineService',
            'pimcore.cache.core.pool.filesystem' => 'getPimcore_Cache_Core_Pool_FilesystemService',
            'pimcore.cache.core.pool.recorder' => 'getPimcore_Cache_Core_Pool_RecorderService',
            'pimcore.cache.core.symfony_adapter.array' => 'getPimcore_Cache_Core_SymfonyAdapter_ArrayService',
            'pimcore.cache.core.symfony_adapter.filesystem' => 'getPimcore_Cache_Core_SymfonyAdapter_FilesystemService',
            'pimcore.cache.core.write_lock' => 'getPimcore_Cache_Core_WriteLockService',
            'pimcore.custom_report.adapter.factories' => 'getPimcore_CustomReport_Adapter_FactoriesService',
            'pimcore.custom_report.adapter.factory.analytics' => 'getPimcore_CustomReport_Adapter_Factory_AnalyticsService',
            'pimcore.custom_report.adapter.factory.sql' => 'getPimcore_CustomReport_Adapter_Factory_SqlService',
            'pimcore.dao.object_manager' => 'getPimcore_Dao_ObjectManagerService',
            'pimcore.document.newsletter.factory.csv' => 'getPimcore_Document_Newsletter_Factory_CsvService',
            'pimcore.document.newsletter.factory.default' => 'getPimcore_Document_Newsletter_Factory_DefaultService',
            'pimcore.document.newsletter.factory.report' => 'getPimcore_Document_Newsletter_Factory_ReportService',
            'pimcore.document.tag.handler' => 'getPimcore_Document_Tag_HandlerService',
            'pimcore.document.tag.naming.migration.strategy.analyze' => 'getPimcore_Document_Tag_Naming_Migration_Strategy_AnalyzeService',
            'pimcore.document.tag.naming.migration.strategy.render' => 'getPimcore_Document_Tag_Naming_Migration_Strategy_RenderService',
            'pimcore.document.tag.naming.strategy.legacy' => 'getPimcore_Document_Tag_Naming_Strategy_LegacyService',
            'pimcore.document.tag.naming.strategy.nested' => 'getPimcore_Document_Tag_Naming_Strategy_NestedService',
            'pimcore.http_client' => 'getPimcore_HttpClientService',
            'pimcore.implementation_loader.document.tag' => 'getPimcore_ImplementationLoader_Document_TagService',
            'pimcore.implementation_loader.object.data' => 'getPimcore_ImplementationLoader_Object_DataService',
            'pimcore.implementation_loader.object.layout' => 'getPimcore_ImplementationLoader_Object_LayoutService',
            'pimcore.newsletter.address_source_adapter.factories' => 'getPimcore_Newsletter_AddressSourceAdapter_FactoriesService',
            'pimcore.routing.router.request_context' => 'getPimcore_Routing_Router_RequestContextService',
            'pimcore.service.context.pimcore_context_guesser' => 'getPimcore_Service_Context_PimcoreContextGuesserService',
            'pimcore.service.request_matcher_factory' => 'getPimcore_Service_RequestMatcherFactoryService',
            'pimcore.templating.action_renderer' => 'getPimcore_Templating_ActionRendererService',
            'pimcore.templating.engine.twig' => 'getPimcore_Templating_Engine_TwigService',
            'pimcore.templating.include_renderer' => 'getPimcore_Templating_IncludeRendererService',
            'pimcore.templating.tag_renderer' => 'getPimcore_Templating_TagRendererService',
            'pimcore.templating.view_helper.placeholder.container_service' => 'getPimcore_Templating_ViewHelper_Placeholder_ContainerServiceService',
            'pimcore.templating.view_helper.translate' => 'getPimcore_Templating_ViewHelper_TranslateService',
            'pimcore.templating.view_helper.translate_admin' => 'getPimcore_Templating_ViewHelper_TranslateAdminService',
            'pimcore.twig.extension.document_tag' => 'getPimcore_Twig_Extension_DocumentTagService',
            'pimcore.twig.extension.glossary' => 'getPimcore_Twig_Extension_GlossaryService',
            'pimcore.twig.extension.helpers' => 'getPimcore_Twig_Extension_HelpersService',
            'pimcore.twig.extension.navigation' => 'getPimcore_Twig_Extension_NavigationService',
            'pimcore.twig.extension.pimcore_object' => 'getPimcore_Twig_Extension_PimcoreObjectService',
            'pimcore.twig.extension.subrequest' => 'getPimcore_Twig_Extension_SubrequestService',
            'pimcore.twig.extension.templating_helper' => 'getPimcore_Twig_Extension_TemplatingHelperService',
            'pimcore.web_path_resolver' => 'getPimcore_WebPathResolverService',
            'pimcore_admin.security.admin_authenticator' => 'getPimcoreAdmin_Security_AdminAuthenticatorService',
            'pimcore_admin.security.bruteforce_protection_handler' => 'getPimcoreAdmin_Security_BruteforceProtectionHandlerService',
            'pimcore_admin.security.logout_success_handler' => 'getPimcoreAdmin_Security_LogoutSuccessHandlerService',
            'pimcore_admin.security.password_encoder_factory' => 'getPimcoreAdmin_Security_PasswordEncoderFactoryService',
            'pimcore_admin.security.webservice_authenticator' => 'getPimcoreAdmin_Security_WebserviceAuthenticatorService',
            'pimcore_admin.serializer' => 'getPimcoreAdmin_SerializerService',
            'pimcore_admin.serializer.encoder.json' => 'getPimcoreAdmin_Serializer_Encoder_JsonService',
            'pimcore_admin.serializer.normalizer.reference_loop' => 'getPimcoreAdmin_Serializer_Normalizer_ReferenceLoopService',
            'pimcore_admin.webservice.service' => 'getPimcoreAdmin_Webservice_ServiceService',
            'pimcore_ecommerce.availability_system.default' => 'getPimcoreEcommerce_AvailabilitySystem_DefaultService',
            'pimcore_ecommerce.cart_manager.default' => 'getPimcoreEcommerce_CartManager_DefaultService',
            'pimcore_ecommerce.checkout_manager.default.commit_order_processor' => 'getPimcoreEcommerce_CheckoutManager_Default_CommitOrderProcessorService',
            'pimcore_ecommerce.checkout_manager.default.factory' => 'getPimcoreEcommerce_CheckoutManager_Default_FactoryService',
            'pimcore_ecommerce.environment' => 'getPimcoreEcommerce_EnvironmentService',
            'pimcore_ecommerce.factory' => 'getPimcoreEcommerce_FactoryService',
            'pimcore_ecommerce.filter_service.default' => 'getPimcoreEcommerce_FilterService_DefaultService',
            'pimcore_ecommerce.index_service' => 'getPimcoreEcommerce_IndexServiceService',
            'pimcore_ecommerce.locator.availability_system' => 'getPimcoreEcommerce_Locator_AvailabilitySystemService',
            'pimcore_ecommerce.locator.cart_manager' => 'getPimcoreEcommerce_Locator_CartManagerService',
            'pimcore_ecommerce.locator.checkout_manager.commit_order_processor' => 'getPimcoreEcommerce_Locator_CheckoutManager_CommitOrderProcessorService',
            'pimcore_ecommerce.locator.checkout_manager.factory' => 'getPimcoreEcommerce_Locator_CheckoutManager_FactoryService',
            'pimcore_ecommerce.locator.filter_service' => 'getPimcoreEcommerce_Locator_FilterServiceService',
            'pimcore_ecommerce.locator.order_manager' => 'getPimcoreEcommerce_Locator_OrderManagerService',
            'pimcore_ecommerce.locator.price_system' => 'getPimcoreEcommerce_Locator_PriceSystemService',
            'pimcore_ecommerce.offer_tool' => 'getPimcoreEcommerce_OfferToolService',
            'pimcore_ecommerce.order_manager.default' => 'getPimcoreEcommerce_OrderManager_DefaultService',
            'pimcore_ecommerce.payment_manager' => 'getPimcoreEcommerce_PaymentManagerService',
            'pimcore_ecommerce.price_system.default' => 'getPimcoreEcommerce_PriceSystem_DefaultService',
            'pimcore_ecommerce.pricing_manager' => 'getPimcoreEcommerce_PricingManagerService',
            'pimcore_ecommerce.tracking.tracking_manager' => 'getPimcoreEcommerce_Tracking_TrackingManagerService',
            'pimcore_ecommerce.voucher_service' => 'getPimcoreEcommerce_VoucherServiceService',
            'pimcore_ecommerce.voucher_service.token_manager_factory' => 'getPimcoreEcommerce_VoucherService_TokenManagerFactoryService',
            'profiler' => 'getProfilerService',
            'profiler_listener' => 'getProfilerListenerService',
            'property_accessor' => 'getPropertyAccessorService',
            'request_stack' => 'getRequestStackService',
            'resolve_controller_name_subscriber' => 'getResolveControllerNameSubscriberService',
            'response_listener' => 'getResponseListenerService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.access.authenticated_voter' => 'getSecurity_Access_AuthenticatedVoterService',
            'security.access.expression_voter' => 'getSecurity_Access_ExpressionVoterService',
            'security.access.role_hierarchy_voter' => 'getSecurity_Access_RoleHierarchyVoterService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.authentication.guard_handler' => 'getSecurity_Authentication_GuardHandlerService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.provider.anonymous.admin' => 'getSecurity_Authentication_Provider_Anonymous_AdminService',
            'security.authentication.provider.anonymous.coreshop_frontend' => 'getSecurity_Authentication_Provider_Anonymous_CoreshopFrontendService',
            'security.authentication.provider.anonymous.demo_cms_fw' => 'getSecurity_Authentication_Provider_Anonymous_DemoCmsFwService',
            'security.authentication.provider.dao.admin_webdav' => 'getSecurity_Authentication_Provider_Dao_AdminWebdavService',
            'security.authentication.provider.dao.coreshop_frontend' => 'getSecurity_Authentication_Provider_Dao_CoreshopFrontendService',
            'security.authentication.provider.dao.demo_cms_fw' => 'getSecurity_Authentication_Provider_Dao_DemoCmsFwService',
            'security.authentication.provider.guard.admin' => 'getSecurity_Authentication_Provider_Guard_AdminService',
            'security.authentication.provider.guard.webservice' => 'getSecurity_Authentication_Provider_Guard_WebserviceService',
            'security.authentication.provider.rememberme.coreshop_frontend' => 'getSecurity_Authentication_Provider_Rememberme_CoreshopFrontendService',
            'security.authentication.session_strategy' => 'getSecurity_Authentication_SessionStrategyService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map' => 'getSecurity_Firewall_MapService',
            'security.firewall.map.context.admin' => 'getSecurity_Firewall_Map_Context_AdminService',
            'security.firewall.map.context.admin_webdav' => 'getSecurity_Firewall_Map_Context_AdminWebdavService',
            'security.firewall.map.context.coreshop_frontend' => 'getSecurity_Firewall_Map_Context_CoreshopFrontendService',
            'security.firewall.map.context.demo_cms_fw' => 'getSecurity_Firewall_Map_Context_DemoCmsFwService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.webservice' => 'getSecurity_Firewall_Map_Context_WebserviceService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d' => 'getSecurity_RequestMatcher_5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1dService',
            'security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc' => 'getSecurity_RequestMatcher_739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fcService',
            'security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e' => 'getSecurity_RequestMatcher_764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5eService',
            'security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b' => 'getSecurity_RequestMatcher_A50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39bService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user_checker' => 'getSecurity_UserCheckerService',
            'security.user_value_resolver' => 'getSecurity_UserValueResolverService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_distribution.security_checker' => 'getSensioDistribution_SecurityCheckerService',
            'sensio_distribution.security_checker.command' => 'getSensioDistribution_SecurityChecker_CommandService',
            'sensio_framework_extra.cache.listener' => 'getSensioFrameworkExtra_Cache_ListenerService',
            'sensio_framework_extra.controller.listener' => 'getSensioFrameworkExtra_Controller_ListenerService',
            'sensio_framework_extra.converter.datetime' => 'getSensioFrameworkExtra_Converter_DatetimeService',
            'sensio_framework_extra.converter.doctrine.orm' => 'getSensioFrameworkExtra_Converter_Doctrine_OrmService',
            'sensio_framework_extra.converter.listener' => 'getSensioFrameworkExtra_Converter_ListenerService',
            'sensio_framework_extra.converter.manager' => 'getSensioFrameworkExtra_Converter_ManagerService',
            'sensio_framework_extra.security.listener' => 'getSensioFrameworkExtra_Security_ListenerService',
            'sensio_framework_extra.view.guesser' => 'getSensioFrameworkExtra_View_GuesserService',
            'sensio_framework_extra.view.listener' => 'getSensioFrameworkExtra_View_ListenerService',
            'serializer' => 'getSerializerService',
            'serializer.mapping.cache.symfony' => 'getSerializer_Mapping_Cache_SymfonyService',
            'service_locator.1df818bdbc898e0ca4257f453525a80a' => 'getServiceLocator_1df818bdbc898e0ca4257f453525a80aService',
            'service_locator.38c73ce8067617f669e83e499e0bd337' => 'getServiceLocator_38c73ce8067617f669e83e499e0bd337Service',
            'service_locator.83603fcf2ec2e2d8755beebb160c60e0' => 'getServiceLocator_83603fcf2ec2e2d8755beebb160c60e0Service',
            'service_locator.8fbaea2dc9ce39bb09e046ce631ea329' => 'getServiceLocator_8fbaea2dc9ce39bb09e046ce631ea329Service',
            'service_locator.e64d23c3bf770e2cf44b71643280668d' => 'getServiceLocator_E64d23c3bf770e2cf44b71643280668dService',
            'service_locator.ecb3d2e49c7158cfbf629075292d1db0' => 'getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service',
            'service_locator.ef50b66065b1737465a2d74a13598afe' => 'getServiceLocator_Ef50b66065b1737465a2d74a13598afeService',
            'service_locator.f4349e8894d66f427f9ad72c699461b7' => 'getServiceLocator_F4349e8894d66f427f9ad72c699461b7Service',
            'session' => 'getSessionService',
            'session.handler' => 'getSession_HandlerService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'stof_doctrine_extensions.uploadable.manager' => 'getStofDoctrineExtensions_Uploadable_ManagerService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.newsletter_mailer' => 'getSwiftmailer_Mailer_NewsletterMailerService',
            'swiftmailer.mailer.newsletter_mailer.plugin.messagelogger' => 'getSwiftmailer_Mailer_NewsletterMailer_Plugin_MessageloggerService',
            'swiftmailer.mailer.newsletter_mailer.transport' => 'getSwiftmailer_Mailer_NewsletterMailer_TransportService',
            'swiftmailer.mailer.pimcore_mailer' => 'getSwiftmailer_Mailer_PimcoreMailerService',
            'swiftmailer.mailer.pimcore_mailer.plugin.messagelogger' => 'getSwiftmailer_Mailer_PimcoreMailer_Plugin_MessageloggerService',
            'swiftmailer.mailer.pimcore_mailer.transport' => 'getSwiftmailer_Mailer_PimcoreMailer_TransportService',
            'swiftmailer.plugin.redirecting' => 'getSwiftmailer_Plugin_RedirectingService',
            'swiftmailer.transport.mailinvoker' => 'getSwiftmailer_Transport_MailinvokerService',
            'templating.cache_warmer.template_paths' => 'getTemplating_CacheWarmer_TemplatePathsService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.finder' => 'getTemplating_FinderService',
            'templating.globals' => 'getTemplating_GlobalsService',
            'templating.helper.actions' => 'getTemplating_Helper_ActionsService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.code' => 'getTemplating_Helper_CodeService',
            'templating.helper.form' => 'getTemplating_Helper_FormService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.request' => 'getTemplating_Helper_RequestService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.helper.session' => 'getTemplating_Helper_SessionService',
            'templating.helper.slots' => 'getTemplating_Helper_SlotsService',
            'templating.helper.stopwatch' => 'getTemplating_Helper_StopwatchService',
            'templating.helper.translator' => 'getTemplating_Helper_TranslatorService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator.data_collector' => 'getTranslator_DataCollectorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.form.renderer' => 'getTwig_Form_RendererService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.runtime.httpkernel' => 'getTwig_Runtime_HttpkernelService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validate_request_listener' => 'getValidateRequestListenerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'var_dumper.cli_dumper' => 'getVarDumper_CliDumperService',
            'var_dumper.cloner' => 'getVarDumper_ClonerService',
            'web_profiler.controller.exception' => 'getWebProfiler_Controller_ExceptionService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
            'web_profiler.csp.handler' => 'getWebProfiler_Csp_HandlerService',
            'web_profiler.debug_toolbar' => 'getWebProfiler_DebugToolbarService',
            'website_demo.area.brick.blockquote' => 'getWebsiteDemo_Area_Brick_BlockquoteService',
            'website_demo.language_switcher' => 'getWebsiteDemo_LanguageSwitcherService',
            'website_demo.security.password_encoder_factory' => 'getWebsiteDemo_Security_PasswordEncoderFactoryService',
            'website_demo.security.user_provider' => 'getWebsiteDemo_Security_UserProviderService',
            'zurb_ink.inky' => 'getZurbInk_InkyService',
            'zurb_ink.inky.twig' => 'getZurbInk_Inky_TwigService',
            'zurb_ink.inlinecss' => 'getZurbInk_InlinecssService',
            'zurb_ink.inlinecss.twig' => 'getZurbInk_Inlinecss_TwigService',
            '‌coreshop.listeners.index.post_save' => 'get‌coreshop_Listeners_Index_PostSaveService',
            '‌coreshop.listeners.notification_rule.pre_create' => 'get‌coreshop_Listeners_NotificationRule_PreCreateService',
        );
        $this->privates = array(
            '1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' => true,
            '2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminAuthenticationDoubleCheckListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\AdminExceptionListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\BruteforceProtectionListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\HttpCacheListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\UsageStatisticsListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\EventListener\\UserPerspectiveListener' => true,
            'Pimcore\\Bundle\\AdminBundle\\Session\\AdminSessionBagConfigurator' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ControllerViewModelListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ElementTagsListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\EventedControllerListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\BlockStateListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ContentTemplateListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentFallbackListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\DocumentMetaDataListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\EditmodeListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\ElementListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FrontendRoutingListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleSearchConsoleVerificationListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\HardlinkCanonicalListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\InternalWysiwygHtmlAttributeFilterListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\LocaleListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\MaintenancePageListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreContextListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\PimcoreHeaderListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseExceptionListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\ResponseHeaderListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\SearchBackendListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\TemplateControllerListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\TranslationDebugListener' => true,
            'Pimcore\\Bundle\\CoreBundle\\EventListener\\UUIDListener' => true,
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\IndexUpdateListener' => true,
            'Pimcore\\Bundle\\EcommerceFrameworkBundle\\EventListener\\SystemEventsListener' => true,
            'Pimcore\\Controller\\ArgumentValueResolver\\DocumentValueResolver' => true,
            'Pimcore\\Controller\\ArgumentValueResolver\\EditmodeValueResolver' => true,
            'Pimcore\\Controller\\ArgumentValueResolver\\TemplateVarsValueResolver' => true,
            'Pimcore\\Controller\\ArgumentValueResolver\\ViewModelValueResolver' => true,
            'Pimcore\\Controller\\ArgumentValueResolver\\WebsiteConfigValueResolver' => true,
            'Pimcore\\Navigation\\Renderer\\Breadcrumbs' => true,
            'Pimcore\\Navigation\\Renderer\\Menu' => true,
            'Pimcore\\Routing\\Dynamic\\DocumentRouteHandler' => true,
            'annotations.reader' => true,
            'argument_resolver.default' => true,
            'argument_resolver.request' => true,
            'argument_resolver.request_attribute' => true,
            'argument_resolver.service' => true,
            'argument_resolver.session' => true,
            'argument_resolver.variadic' => true,
            'autowired.Pimcore\\Model\\DataObject\\AbstractObject' => true,
            'autowired.Pimcore\\Model\\DataObject\\Concrete' => true,
            'cache.annotations' => true,
            'cache.annotations.recorder_inner' => true,
            'cache.app.recorder_inner' => true,
            'cache.serializer' => true,
            'cache.serializer.recorder_inner' => true,
            'cache.system.recorder_inner' => true,
            'cache.validator' => true,
            'cache.validator.recorder_inner' => true,
            'console.error_listener' => true,
            'controller_name_converter' => true,
            'coreshop.resource_controller.event_dispatcher' => true,
            'coreshop.resource_controller.view_handler' => true,
            'coreshop.transformer.event_dispatcher' => true,
            'debug.file_link_formatter' => true,
            'debug.log_processor' => true,
            'debug.security.access.decision_manager' => true,
            'doctrine.dbal.logger.profiling.default' => true,
            'form.type.choice' => true,
            'form.type.form' => true,
            'form.type_extension.csrf' => true,
            'form.type_extension.form.data_collector' => true,
            'form.type_extension.form.http_foundation' => true,
            'form.type_extension.form.validator' => true,
            'form.type_extension.repeated.validator' => true,
            'form.type_extension.submit.validator' => true,
            'form.type_extension.upload.validator' => true,
            'form.type_guesser.validator' => true,
            'fos_rest.request.param_fetcher.reader' => true,
            'fos_rest.serializer.jms_handler_registry' => true,
            'monolog.processor.psr_log_message' => true,
            'pimcore_admin.serializer.encoder.json' => true,
            'pimcore_admin.serializer.normalizer.reference_loop' => true,
            'pimcore_ecommerce.checkout_manager.default.commit_order_processor' => true,
            'pimcore_ecommerce.checkout_manager.default.factory' => true,
            'pimcore_ecommerce.filter_service.default' => true,
            'resolve_controller_name_subscriber' => true,
            'security.access.authenticated_voter' => true,
            'security.access.expression_voter' => true,
            'security.access.role_hierarchy_voter' => true,
            'security.access_listener' => true,
            'security.access_map' => true,
            'security.authentication.manager' => true,
            'security.authentication.provider.anonymous.admin' => true,
            'security.authentication.provider.anonymous.coreshop_frontend' => true,
            'security.authentication.provider.anonymous.demo_cms_fw' => true,
            'security.authentication.provider.dao.admin_webdav' => true,
            'security.authentication.provider.dao.coreshop_frontend' => true,
            'security.authentication.provider.dao.demo_cms_fw' => true,
            'security.authentication.provider.guard.admin' => true,
            'security.authentication.provider.guard.webservice' => true,
            'security.authentication.provider.rememberme.coreshop_frontend' => true,
            'security.authentication.session_strategy' => true,
            'security.authentication.trust_resolver' => true,
            'security.channel_listener' => true,
            'security.firewall.map' => true,
            'security.http_utils' => true,
            'security.logout_url_generator' => true,
            'security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d' => true,
            'security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc' => true,
            'security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e' => true,
            'security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b' => true,
            'security.role_hierarchy' => true,
            'security.user_checker' => true,
            'security.user_value_resolver' => true,
            'service_locator.1df818bdbc898e0ca4257f453525a80a' => true,
            'service_locator.38c73ce8067617f669e83e499e0bd337' => true,
            'service_locator.83603fcf2ec2e2d8755beebb160c60e0' => true,
            'service_locator.8fbaea2dc9ce39bb09e046ce631ea329' => true,
            'service_locator.e64d23c3bf770e2cf44b71643280668d' => true,
            'service_locator.ecb3d2e49c7158cfbf629075292d1db0' => true,
            'service_locator.ef50b66065b1737465a2d74a13598afe' => true,
            'service_locator.f4349e8894d66f427f9ad72c699461b7' => true,
            'session.storage.metadata_bag' => true,
            'swiftmailer.transport.mailinvoker' => true,
            'templating.finder' => true,
            'translator.data_collector' => true,
            'web_profiler.csp.handler' => true,
        );
        $this->aliases = array(
            'JMS\\Serializer\\ArrayTransformerInterface' => 'jms_serializer',
            'JMS\\Serializer\\SerializerInterface' => 'jms_serializer',
            'Pimcore\\Db\\Connection' => 'doctrine.dbal.default_connection',
            'Pimcore\\Document\\Tag\\TagHandlerInterface' => 'pimcore.document.tag.handler',
            'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManagerInterface' => 'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManager',
            'Pimcore\\Kernel' => 'kernel',
            'cache.app_clearer' => 'cache.default_clearer',
            'coreshop.carrier.discovery' => 'coreshop.carrier.cart.store_based_processor',
            'coreshop.cart.discount_calculator' => 'coreshop.cart.discount_calculator.composite',
            'coreshop.cart_processor' => 'coreshop.cart_processor.composite',
            'coreshop.checkout_manager' => 'coreshop.checkout_manager.default',
            'coreshop.context.currency' => 'coreshop.context.currency.cached',
            'coreshop.manager.address' => 'pimcore.dao.object_manager',
            'coreshop.manager.carrier' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.cart' => 'pimcore.dao.object_manager',
            'coreshop.manager.cart_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.cart_price_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.cart_price_rule_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.cart_price_rule_voucher_code' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.category' => 'pimcore.dao.object_manager',
            'coreshop.manager.configuration' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.country' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.country_translation' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.currency' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.customer' => 'pimcore.dao.object_manager',
            'coreshop.manager.customer_group' => 'pimcore.dao.object_manager',
            'coreshop.manager.exchange_rate' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.filter' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.filter_condition' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.gateway_config' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.index' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.index_column' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.manufacturer' => 'pimcore.dao.object_manager',
            'coreshop.manager.notification_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.order' => 'pimcore.dao.object_manager',
            'coreshop.manager.order_invoice' => 'pimcore.dao.object_manager',
            'coreshop.manager.order_invoice_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.order_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.order_shipment' => 'pimcore.dao.object_manager',
            'coreshop.manager.order_shipment_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.payment' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.payment_provider' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.payment_provider_translation' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.payment_security_token' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.product' => 'pimcore.dao.object_manager',
            'coreshop.manager.product_price_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.product_specific_price_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.quote' => 'pimcore.dao.object_manager',
            'coreshop.manager.quote_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.rule_action' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.rule_condition' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.sequence' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.shipping_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.shipping_rule_group' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.state' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.state_translation' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.store' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.tax_item' => 'pimcore.dao.object_manager',
            'coreshop.manager.tax_rate' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.tax_rate_translation' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.tax_rule' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.tax_rule_group' => 'doctrine.orm.default_entity_manager',
            'coreshop.manager.zone' => 'doctrine.orm.default_entity_manager',
            'coreshop.order.number_generator.default' => 'coreshop.order.number_generator.prefix_suffix',
            'coreshop.order.transformer.cart_to_order' => 'coreshop.core.order.transformer.cart_to_order',
            'coreshop.order.transformer.cart_to_quote' => 'coreshop.core.order.transformer.cart_to_quote',
            'coreshop.order_invoice.number_generator.default' => 'coreshop.order_invoice.number_generator.prefix_suffix',
            'coreshop.order_shipment.number_generator.default' => 'coreshop.order_shipment.number_generator.prefix_suffix',
            'coreshop.product.price_calculator' => 'coreshop.product.price_calculator.composite',
            'coreshop.product.price_calculator.product_price_rules_fetcher' => 'coreshop.product.price_calculator.cached_product_price_rules_fetcher',
            'coreshop.product.price_calculator.product_specific_price_rules_fetcher' => 'coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher',
            'coreshop.product.price_calculator.property_price' => 'coreshop.core.product.price_calculator.store_price',
            'coreshop.quote.number_generator.default' => 'coreshop.quote.number_generator.prefix_suffix',
            'coreshop.renderer.order.pdf' => 'coreshop.renderer.order.pdf.asset',
            'coreshop.taxation.factory.tax_calculator' => 'coreshop.taxation.factory.cached_tax_calculator',
            'coreshop.tracking.item_builder' => 'coreshop.tracking.item_builder.decorated',
            'coreshop.translation_locale_provider' => 'coreshop.translation_locale_provider.pimcore',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'event_dispatcher' => 'debug.event_dispatcher',
            'fos_rest.router' => 'cmf_routing.router',
            'mailer' => 'swiftmailer.mailer.pimcore_mailer',
            'pimcore.app_logger' => 'Pimcore\\Log\\ApplicationLogger',
            'pimcore.app_logger.db_writer' => 'Pimcore\\Log\\Handler\\ApplicationLoggerDb',
            'pimcore.app_logger.default' => 'Pimcore\\Log\\ApplicationLogger',
            'pimcore.area.brick_manager' => 'Pimcore\\Extension\\Document\\Areabrick\\AreabrickManager',
            'pimcore.cache.core.pool' => 'pimcore.cache.core.pool.recorder',
            'pimcore.cache.runtime' => 'Pimcore\\Cache\\Runtime',
            'pimcore.controller.config.config_normalizer' => 'Pimcore\\Controller\\Config\\ConfigNormalizer',
            'pimcore.controller.config.controller_data_provider' => 'Pimcore\\Controller\\Config\\ControllerDataProvider',
            'pimcore.document.renderer' => 'Pimcore\\Document\\Renderer\\DocumentRenderer',
            'pimcore.document.tag.block_state_stack' => 'Pimcore\\Document\\Tag\\Block\\BlockStateStack',
            'pimcore.document.tag.naming.strategy' => 'pimcore.document.tag.naming.strategy.nested',
            'pimcore.document_service' => 'Pimcore\\Model\\Document\\Service',
            'pimcore.ecommerceframework.installer' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Tools\\Installer',
            'pimcore.event_listener.frontend.cookie_policy_notice' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\CookiePolicyNoticeListener',
            'pimcore.event_listener.frontend.full_page_cache' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\FullPageCacheListener',
            'pimcore.event_listener.frontend.google_analytics_code' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleAnalyticsCodeListener',
            'pimcore.event_listener.frontend.google_tag_manager' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\GoogleTagManagerListener',
            'pimcore.event_listener.frontend.tag_manager' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TagManagerListener',
            'pimcore.event_listener.frontend.targeting' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\Frontend\\TargetingListener',
            'pimcore.event_listener.workflow_management' => 'Pimcore\\Bundle\\CoreBundle\\EventListener\\WorkflowManagementListener',
            'pimcore.extension.bundle_manager' => 'Pimcore\\Extension\\Bundle\\PimcoreBundleManager',
            'pimcore.extension.config' => 'Pimcore\\Extension\\Config',
            'pimcore.http.request_helper' => 'Pimcore\\Http\\RequestHelper',
            'pimcore.http.response_helper' => 'Pimcore\\Http\\ResponseHelper',
            'pimcore.locale' => 'Pimcore\\Localization\\Locale',
            'pimcore.locale.intl_formatter' => 'Pimcore\\Localization\\IntlFormatter',
            'pimcore.maintenance.schedule_manager' => 'Pimcore\\Model\\Schedule\\Manager\\Procedural',
            'pimcore.model.factory' => 'Pimcore\\Model\\Factory',
            'pimcore.rest_client' => 'Pimcore\\Tool\\RestClient',
            'pimcore.service.request.document_resolver' => 'Pimcore\\Http\\Request\\Resolver\\DocumentResolver',
            'pimcore.service.request.editmode_resolver' => 'Pimcore\\Http\\Request\\Resolver\\EditmodeResolver',
            'pimcore.service.request.pimcore_context_resolver' => 'Pimcore\\Http\\Request\\Resolver\\PimcoreContextResolver',
            'pimcore.service.request.response_header_resolver' => 'Pimcore\\Http\\Request\\Resolver\\ResponseHeaderResolver',
            'pimcore.service.request.site_resolver' => 'Pimcore\\Http\\Request\\Resolver\\SiteResolver',
            'pimcore.service.request.template_resolver' => 'Pimcore\\Http\\Request\\Resolver\\TemplateResolver',
            'pimcore.service.request.template_vars_resolver' => 'Pimcore\\Http\\Request\\Resolver\\TemplateVarsResolver',
            'pimcore.service.request.view_model_resolver' => 'Pimcore\\Http\\Request\\Resolver\\ViewModelResolver',
            'pimcore.templating.engine.php' => 'debug.templating.engine.php',
            'pimcore.templating.view_helper.action' => 'Pimcore\\Templating\\Helper\\Action',
            'pimcore.templating.view_helper.cache' => 'Pimcore\\Templating\\Helper\\Cache',
            'pimcore.templating.view_helper.device' => 'Pimcore\\Templating\\Helper\\Device',
            'pimcore.templating.view_helper.get_all_params' => 'Pimcore\\Templating\\Helper\\GetAllParams',
            'pimcore.templating.view_helper.get_param' => 'Pimcore\\Templating\\Helper\\GetParam',
            'pimcore.templating.view_helper.glossary' => 'Pimcore\\Templating\\Helper\\Glossary',
            'pimcore.templating.view_helper.head_link' => 'Pimcore\\Templating\\Helper\\HeadLink',
            'pimcore.templating.view_helper.head_meta' => 'Pimcore\\Templating\\Helper\\HeadMeta',
            'pimcore.templating.view_helper.head_script' => 'Pimcore\\Templating\\Helper\\HeadScript',
            'pimcore.templating.view_helper.head_style' => 'Pimcore\\Templating\\Helper\\HeadStyle',
            'pimcore.templating.view_helper.head_title' => 'Pimcore\\Templating\\Helper\\HeadTitle',
            'pimcore.templating.view_helper.inc' => 'Pimcore\\Templating\\Helper\\Inc',
            'pimcore.templating.view_helper.inline_script' => 'Pimcore\\Templating\\Helper\\InlineScript',
            'pimcore.templating.view_helper.navigation' => 'Pimcore\\Templating\\Helper\\Navigation',
            'pimcore.templating.view_helper.pimcore_url' => 'Pimcore\\Templating\\Helper\\PimcoreUrl',
            'pimcore.templating.view_helper.placeholder' => 'Pimcore\\Templating\\Helper\\Placeholder',
            'pimcore.tool.assets_installer' => 'Pimcore\\Tool\\AssetsInstaller',
            'pimcore.translator' => 'Pimcore\\Translation\\Translator',
            'pimcore_admin.security.token_storage_user_resolver' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\TokenStorageUserResolver',
            'pimcore_admin.security.user_checker' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserChecker',
            'pimcore_admin.security.user_loader' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserLoader',
            'pimcore_admin.security.user_provider' => 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserProvider',
            'router' => 'cmf_routing.router',
            'session.storage' => 'session.storage.native',
            'swiftmailer.mailer' => 'swiftmailer.mailer.pimcore_mailer',
            'swiftmailer.plugin.messagelogger' => 'swiftmailer.mailer.pimcore_mailer.plugin.messagelogger',
            'swiftmailer.transport' => 'swiftmailer.mailer.pimcore_mailer.transport',
            'templating' => 'fos_rest.templating',
            'translator' => 'Pimcore\\Translation\\Translator',
        );
    }

    /**
     * {@inheritdoc}
     */
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    /**
     * {@inheritdoc}
     */
    public function isCompiled()
    {
        return true;
    }

    /**
     * {@inheritdoc}
     */
    public function isFrozen()
    {
        @trigger_error(sprintf('The %s() method is deprecated since version 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);

        return true;
    }

    /**
     * Gets the public 'AppBundle\Controller\AdvancedController' shared autowired service.
     *
     * @return \AppBundle\Controller\AdvancedController
     */
    protected function getAppBundle_Controller_AdvancedControllerService()
    {
        return $this->services['AppBundle\Controller\AdvancedController'] = new \AppBundle\Controller\AdvancedController();
    }

    /**
     * Gets the public 'AppBundle\Controller\BlogController' shared autowired service.
     *
     * @return \AppBundle\Controller\BlogController
     */
    protected function getAppBundle_Controller_BlogControllerService()
    {
        return $this->services['AppBundle\Controller\BlogController'] = new \AppBundle\Controller\BlogController();
    }

    /**
     * Gets the public 'AppBundle\Controller\Category\ExampleController' shared autowired service.
     *
     * @return \AppBundle\Controller\Category\ExampleController
     */
    protected function getAppBundle_Controller_Category_ExampleControllerService()
    {
        return $this->services['AppBundle\Controller\Category\ExampleController'] = new \AppBundle\Controller\Category\ExampleController();
    }

    /**
     * Gets the public 'AppBundle\Controller\ContentController' shared autowired service.
     *
     * @return \AppBundle\Controller\ContentController
     */
    protected function getAppBundle_Controller_ContentControllerService()
    {
        return $this->services['AppBundle\Controller\ContentController'] = new \AppBundle\Controller\ContentController();
    }

    /**
     * Gets the public 'AppBundle\Controller\DefaultController' shared autowired service.
     *
     * @return \AppBundle\Controller\DefaultController
     */
    protected function getAppBundle_Controller_DefaultControllerService()
    {
        return $this->services['AppBundle\Controller\DefaultController'] = new \AppBundle\Controller\DefaultController();
    }

    /**
     * Gets the public 'AppBundle\Controller\NewsController' shared autowired service.
     *
     * @return \AppBundle\Controller\NewsController
     */
    protected function getAppBundle_Controller_NewsControllerService()
    {
        return $this->services['AppBundle\Controller\NewsController'] = new \AppBundle\Controller\NewsController();
    }

    /**
     * Gets the public 'AppBundle\Controller\NewsletterController' shared autowired service.
     *
     * @return \AppBundle\Controller\NewsletterController
     */
    protected function getAppBundle_Controller_NewsletterControllerService()
    {
        return $this->services['AppBundle\Controller\NewsletterController'] = new \AppBundle\Controller\NewsletterController();
    }

    /**
     * Gets the public 'AppBundle\Controller\SecureController' shared autowired service.
     *
     * @return \AppBundle\Controller\SecureController
     */
    protected function getAppBundle_Controller_SecureControllerService()
    {
        return $this->services['AppBundle\Controller\SecureController'] = new \AppBundle\Controller\SecureController();
    }

    /**
     * Gets the public 'AppBundle\Controller\Web2printController' shared autowired service.
     *
     * @return \AppBundle\Controller\Web2printController
     */
    protected function getAppBundle_Controller_Web2printControllerService()
    {
        return $this->services['AppBundle\Controller\Web2printController'] = new \AppBundle\Controller\Web2printController();
    }

    /**
     * Gets the public 'CoreShop\Bundle\AdminBundle\Installer' shared autowired service.
     *
     * @return \CoreShop\Bundle\AdminBundle\Installer
     */
    protected function getCoreShop_Bundle_AdminBundle_InstallerService()
    {
        $a = ${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'};

        return $this->services['CoreShop\Bundle\AdminBundle\Installer'] = new \CoreShop\Bundle\AdminBundle\Installer(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}->getBundle("CoreShopAdminBundle"), $a, new \Pimcore\Migrations\MigrationManager($a, ${($_ = isset($this->services['Pimcore\Migrations\Configuration\ConfigurationFactory']) ? $this->services['Pimcore\Migrations\Configuration\ConfigurationFactory'] : $this->get('Pimcore\Migrations\Configuration\ConfigurationFactory')) && false ?: '_'}));
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\AssetController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\AssetController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_AssetControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\AssetController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\AssetController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\ClassController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\ClassController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_ClassControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\ClassController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\ClassController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\ClassificationstoreController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\ClassificationstoreController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_ClassificationstoreControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\ClassificationstoreController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\ClassificationstoreController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_DataObjectControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectHelperController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectHelperController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_DataObjectHelperControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectHelperController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\DataObjectHelperController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_DocumentControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentTag\RenderletController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentTag\RenderletController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_DocumentTag_RenderletControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentTag\RenderletController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\DocumentTag\RenderletController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\ElementController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\ElementController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_ElementControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\ElementController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\ElementController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\ElementControllerBase' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\ElementControllerBase
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_ElementControllerBaseService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\ElementControllerBase'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\ElementControllerBase();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\EmailController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\EmailController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_EmailControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\EmailController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\EmailController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\External\AdminerController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\External\AdminerController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_External_AdminerControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\External\AdminerController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\External\AdminerController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\External\LinfoController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\External\LinfoController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_External_LinfoControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\External\LinfoController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\External\LinfoController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\External\OpcacheController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\External\OpcacheController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_External_OpcacheControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\External\OpcacheController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\External\OpcacheController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\FolderController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\FolderController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_FolderControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\FolderController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\FolderController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\HardlinkController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\HardlinkController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_HardlinkControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\HardlinkController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\HardlinkController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\IndexController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\IndexController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_IndexControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\IndexController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\IndexController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\InstallController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\InstallController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_InstallControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\InstallController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\InstallController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\LinkController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\LinkController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_LinkControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\LinkController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\LinkController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\LogController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\LogController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_LogControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\LogController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\LogController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\LoginController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\LoginController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_LoginControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\LoginController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\LoginController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\MiscController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\MiscController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_MiscControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\MiscController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\MiscController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\NewsletterController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\NewsletterController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_NewsletterControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\NewsletterController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\NewsletterController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\PageController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\PageController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_PageControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\PageController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\PageController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\PortalController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\PortalController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_PortalControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\PortalController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\PortalController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\PrintcontainerController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintcontainerController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_PrintcontainerControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\PrintcontainerController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintcontainerController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_PrintpageControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageControllerBase' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageControllerBase
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_PrintpageControllerBaseService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageControllerBase'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\PrintpageControllerBase();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\QuantityValueController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\QuantityValueController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_QuantityValueControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\QuantityValueController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\QuantityValueController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\RecyclebinController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\RecyclebinController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_RecyclebinControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\RecyclebinController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\RecyclebinController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\SettingsController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\SettingsController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_SettingsControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\SettingsController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\SettingsController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\SnippetController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\SnippetController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_SnippetControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\SnippetController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\SnippetController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\TagsController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\TagsController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_TagsControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\TagsController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\TagsController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\TranslationController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\TranslationController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_TranslationControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\TranslationController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\TranslationController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\UserController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\UserController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_UserControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\UserController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\UserController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\VariantsController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\VariantsController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_VariantsControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\VariantsController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\VariantsController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Admin\WorkflowController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Admin\WorkflowController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Admin_WorkflowControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Admin\WorkflowController'] = new \Pimcore\Bundle\AdminBundle\Controller\Admin\WorkflowController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\ExtensionManager\ExtensionManagerController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\ExtensionManager\ExtensionManagerController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_ExtensionManager_ExtensionManagerControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\ExtensionManager\ExtensionManagerController'] = new \Pimcore\Bundle\AdminBundle\Controller\ExtensionManager\ExtensionManagerController(${($_ = isset($this->services['Pimcore\Extension\Bundle\PimcoreBundleManager']) ? $this->services['Pimcore\Extension\Bundle\PimcoreBundleManager'] : $this->get('Pimcore\Extension\Bundle\PimcoreBundleManager')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Extension\Document\Areabrick\AreabrickManager']) ? $this->services['Pimcore\Extension\Document\Areabrick\AreabrickManager'] : $this->get('Pimcore\Extension\Document\Areabrick\AreabrickManager')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\AnalyticsController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\AnalyticsController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_AnalyticsControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\AnalyticsController'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\AnalyticsController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\CustomReportController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\CustomReportController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_CustomReportControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\CustomReportController'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\CustomReportController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\QrcodeController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\QrcodeController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_QrcodeControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\QrcodeController'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\QrcodeController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\ReportsControllerBase' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\ReportsControllerBase
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_ReportsControllerBaseService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\ReportsControllerBase'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\ReportsControllerBase();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\SettingsController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\SettingsController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_SettingsControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\SettingsController'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\SettingsController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Reports\TargetingController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Reports\TargetingController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Reports_TargetingControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Reports\TargetingController'] = new \Pimcore\Bundle\AdminBundle\Controller\Reports\TargetingController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\ClassController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\ClassController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_ClassControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\ClassController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\ClassController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\Element\AssetController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\AssetController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_Element_AssetControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\Element\AssetController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\AssetController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DataObjectController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DataObjectController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_Element_DataObjectControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DataObjectController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DataObjectController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DocumentController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DocumentController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_Element_DocumentControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DocumentController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\DocumentController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\Element\TagController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\TagController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_Element_TagControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\Element\TagController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\Element\TagController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\ImageController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\ImageController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_ImageControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\ImageController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\ImageController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Rest\InfoController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Rest\InfoController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Rest_InfoControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Rest\InfoController'] = new \Pimcore\Bundle\AdminBundle\Controller\Rest\InfoController(${($_ = isset($this->services['pimcore_admin.webservice.service']) ? $this->services['pimcore_admin.webservice.service'] : $this->get('pimcore_admin.webservice.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Searchadmin\SearchController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Searchadmin\SearchController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Searchadmin_SearchControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Searchadmin\SearchController'] = new \Pimcore\Bundle\AdminBundle\Controller\Searchadmin\SearchController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Controller\Update\IndexController' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Controller\Update\IndexController
     */
    protected function getPimcore_Bundle_AdminBundle_Controller_Update_IndexControllerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Controller\Update\IndexController'] = new \Pimcore\Bundle\AdminBundle\Controller\Update\IndexController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver
     */
    protected function getPimcore_Bundle_AdminBundle_Security_User_TokenStorageUserResolverService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver'] = new \Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Security\User\UserChecker' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\User\UserChecker
     */
    protected function getPimcore_Bundle_AdminBundle_Security_User_UserCheckerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserChecker'] = new \Pimcore\Bundle\AdminBundle\Security\User\UserChecker();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Security\User\UserLoader' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\User\UserLoader
     */
    protected function getPimcore_Bundle_AdminBundle_Security_User_UserLoaderService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] = new \Pimcore\Bundle\AdminBundle\Security\User\UserLoader(${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Security\User\UserProvider' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\User\UserProvider
     */
    protected function getPimcore_Bundle_AdminBundle_Security_User_UserProviderService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] = new \Pimcore\Bundle\AdminBundle\Security\User\UserProvider();
    }

    /**
     * Gets the public 'Pimcore\Bundle\AdminBundle\Session\Handler\AdminSessionHandler' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Session\Handler\AdminSessionHandler
     */
    protected function getPimcore_Bundle_AdminBundle_Session_Handler_AdminSessionHandlerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\Session\Handler\AdminSessionHandler'] = $instance = new \Pimcore\Bundle\AdminBundle\Session\Handler\AdminSessionHandler(${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.pimcore_admin.session']) ? $this->services['monolog.logger.pimcore_admin.session'] : $this->get('monolog.logger.pimcore_admin.session')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\Controller\PublicServicesController' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\Controller\PublicServicesController
     */
    protected function getPimcore_Bundle_CoreBundle_Controller_PublicServicesControllerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\Controller\PublicServicesController'] = new \Pimcore\Bundle\CoreBundle\Controller\PublicServicesController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_CookiePolicyNoticeListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});

        $instance->loadTemplateFromResource('@PimcoreCoreBundle/Resources/misc/cookie-policy-default-template.html');
        $instance->setTranslator(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});
        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_FullPageCacheListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener();

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleAnalyticsCodeListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener();

        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleTagManagerListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener();

        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_TagManagerListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});
        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_TargetingListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});
        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_WorkflowManagementListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\AdminOrderController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\AdminOrderController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_AdminOrderControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\AdminOrderController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\AdminOrderController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\ConfigController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\ConfigController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_ConfigControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\ConfigController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\ConfigController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\FindologicController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\FindologicController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_FindologicControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\FindologicController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\FindologicController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\IndexController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\IndexController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_IndexControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\IndexController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\IndexController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\PricingController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\PricingController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_PricingControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\PricingController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\PricingController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Controller\VoucherController' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\VoucherController
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Controller_VoucherControllerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Controller\VoucherController'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Controller\VoucherController();
    }

    /**
     * Gets the public 'Pimcore\Bundle\EcommerceFrameworkBundle\Tools\Installer' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Tools\Installer
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_Tools_InstallerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\Tools\Installer'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Tools\Installer(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Controller\Config\ConfigNormalizer' shared autowired service.
     *
     * @return \Pimcore\Controller\Config\ConfigNormalizer
     */
    protected function getPimcore_Controller_Config_ConfigNormalizerService()
    {
        return $this->services['Pimcore\Controller\Config\ConfigNormalizer'] = new \Pimcore\Controller\Config\ConfigNormalizer(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Controller\Config\ControllerDataProvider' shared autowired service.
     *
     * @return \Pimcore\Controller\Config\ControllerDataProvider
     */
    protected function getPimcore_Controller_Config_ControllerDataProviderService()
    {
        return $this->services['Pimcore\Controller\Config\ControllerDataProvider'] = new \Pimcore\Controller\Config\ControllerDataProvider(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, array('AppBundle\\Controller\\AdvancedController' => 'AppBundle\\Controller\\AdvancedController', 'AppBundle\\Controller\\BlogController' => 'AppBundle\\Controller\\BlogController', 'AppBundle\\Controller\\Category\\ExampleController' => 'AppBundle\\Controller\\Category\\ExampleController', 'AppBundle\\Controller\\ContentController' => 'AppBundle\\Controller\\ContentController', 'AppBundle\\Controller\\DefaultController' => 'AppBundle\\Controller\\DefaultController', 'AppBundle\\Controller\\NewsController' => 'AppBundle\\Controller\\NewsController', 'AppBundle\\Controller\\NewsletterController' => 'AppBundle\\Controller\\NewsletterController', 'AppBundle\\Controller\\SecureController' => 'AppBundle\\Controller\\SecureController', 'AppBundle\\Controller\\Web2printController' => 'AppBundle\\Controller\\Web2printController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController', 'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController', 'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController' => 'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController', 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController', 'coreshop.admin_controller.carrier' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.cart_price_rule' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\CartPriceRuleController', 'coreshop.admin_controller.configuration' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ConfigurationController', 'coreshop.admin_controller.country' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.currency' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.exchange_rate' => 'CoreShop\\Bundle\\CurrencyBundle\\Controller\\ExchangeRateController', 'coreshop.admin_controller.filter' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\FilterController', 'coreshop.admin_controller.index' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\IndexController', 'coreshop.admin_controller.notification_rule' => 'CoreShop\\Bundle\\NotificationBundle\\Controller\\NotificationRuleController', 'coreshop.admin_controller.payment' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.payment_provider' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\PaymentProviderController', 'coreshop.admin_controller.product_price_rule' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductPriceRuleController', 'coreshop.admin_controller.product_specific_price_rule' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductSpecificPriceRuleController', 'coreshop.admin_controller.reports' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ReportsController', 'coreshop.admin_controller.resource_settings' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceSettingsController', 'coreshop.admin_controller.rule_action' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.rule_condition' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.sequence' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.settings' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\SettingsController', 'coreshop.admin_controller.shipping_rule' => 'CoreShop\\Bundle\\ShippingBundle\\Controller\\ShippingRuleController', 'coreshop.admin_controller.state' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.store' => 'CoreShop\\Bundle\\StoreBundle\\Controller\\StoreController', 'coreshop.admin_controller.tax_rate' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.admin_controller.tax_rule_group' => 'CoreShop\\Bundle\\TaxationBundle\\Controller\\TaxRuleGroupController', 'coreshop.admin_controller.zone' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'coreshop.frontend.controller.cart' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CartController', 'coreshop.frontend.controller.category' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CategoryController', 'coreshop.frontend.controller.checkout' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CheckoutController', 'coreshop.frontend.controller.currency' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CurrencyController', 'coreshop.frontend.controller.customer' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CustomerController', 'coreshop.frontend.controller.index' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\IndexController', 'coreshop.frontend.controller.language' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\LanguageController', 'coreshop.frontend.controller.payment' => 'CoreShop\\Bundle\\PayumBundle\\Controller\\PaymentController', 'coreshop.frontend.controller.product' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\ProductController', 'coreshop.frontend.controller.quote' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\QuoteController', 'coreshop.frontend.controller.register' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\RegisterController', 'coreshop.frontend.controller.search' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SearchController', 'coreshop.frontend.controller.security' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SecurityController', 'coreshop.frontend.controller.wishlist' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\WishlistController', 'coreshop.pimcore_controller.order' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderController', 'coreshop.pimcore_controller.order_creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderCreationController', 'coreshop.pimcore_controller.order_invoice' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderInvoiceController', 'coreshop.pimcore_controller.order_shipment' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderShipmentController', 'coreshop.pimcore_controller.quote' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\QuoteController', 'coreshop.pimcore_controller.quote_creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\QuoteCreationController'));
    }

    /**
     * Gets the public 'Pimcore\Document\Renderer\DocumentRenderer' shared autowired service.
     *
     * @return \Pimcore\Document\Renderer\DocumentRenderer
     */
    protected function getPimcore_Document_Renderer_DocumentRendererService()
    {
        return $this->services['Pimcore\Document\Renderer\DocumentRenderer'] = new \Pimcore\Document\Renderer\DocumentRenderer(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer')) && false ?: '_'}, ${($_ = isset($this->services['fragment.renderer.inline']) ? $this->services['fragment.renderer.inline'] : $this->get('fragment.renderer.inline')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler']) ? $this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler'] : $this->getPimcore_Routing_Dynamic_DocumentRouteHandlerService()) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Document\Tag\Block\BlockStateStack' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\Block\BlockStateStack
     */
    protected function getPimcore_Document_Tag_Block_BlockStateStackService()
    {
        return $this->services['Pimcore\Document\Tag\Block\BlockStateStack'] = new \Pimcore\Document\Tag\Block\BlockStateStack();
    }

    /**
     * Gets the public 'Pimcore\Extension\Bundle\PimcoreBundleManager' shared autowired service.
     *
     * @return \Pimcore\Extension\Bundle\PimcoreBundleManager
     */
    protected function getPimcore_Extension_Bundle_PimcoreBundleManagerService()
    {
        return $this->services['Pimcore\Extension\Bundle\PimcoreBundleManager'] = new \Pimcore\Extension\Bundle\PimcoreBundleManager(new \Pimcore\Extension\Bundle\Config\StateConfig(${($_ = isset($this->services['Pimcore\Extension\Config']) ? $this->services['Pimcore\Extension\Config'] : $this->get('Pimcore\Extension\Config')) && false ?: '_'}), new \Pimcore\Extension\Bundle\PimcoreBundleLocator(new \Pimcore\Composer\PackageInfo(), array(0 => 'src', 1 => 'pimcore/lib/Pimcore/Bundle')), ${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Extension\Document\Areabrick\AreabrickManager' shared autowired service.
     *
     * @return \Pimcore\Extension\Document\Areabrick\AreabrickManager
     */
    protected function getPimcore_Extension_Document_Areabrick_AreabrickManagerService()
    {
        $this->services['Pimcore\Extension\Document\Areabrick\AreabrickManager'] = $instance = new \Pimcore\Extension\Document\Areabrick\AreabrickManager(${($_ = isset($this->services['Pimcore\Extension\Config']) ? $this->services['Pimcore\Extension\Config'] : $this->get('Pimcore\Extension\Config')) && false ?: '_'}, $this);

        $instance->registerService('blockquote', 'website_demo.area.brick.blockquote');
        $instance->registerService('gallery-folder', 'app.area.brick.gallery_folder');
        $instance->registerService('featurette', 'app.area.brick.featurette');
        $instance->registerService('video', 'app.area.brick.video');
        $instance->registerService('pdf', 'app.area.brick.pdf');
        $instance->registerService('wysiwyg', 'app.area.brick.wysiwyg');
        $instance->registerService('tabbed-slider-text', 'app.area.brick.tabbed_slider_text');
        $instance->registerService('horizontal-line', 'app.area.brick.horizontal_line');
        $instance->registerService('gallery-single-images', 'app.area.brick.gallery_single_images');
        $instance->registerService('image-hotspot-marker', 'app.area.brick.image_hotspot_marker');
        $instance->registerService('standard-teaser-row', 'app.area.brick.standard_teaser_row');
        $instance->registerService('wysiwyg-with-images', 'app.area.brick.wysiwyg_with_images');
        $instance->registerService('headlines', 'app.area.brick.headlines');
        $instance->registerService('embed', 'app.area.brick.embed');
        $instance->registerService('image', 'app.area.brick.image');
        $instance->registerService('text-accordion', 'app.area.brick.text_accordion');
        $instance->registerService('icon-teaser-row', 'app.area.brick.icon_teaser_row');
        $instance->registerService('gallery-carousel', 'app.area.brick.gallery_carousel');

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Http\RequestHelper' shared autowired service.
     *
     * @return \Pimcore\Http\RequestHelper
     */
    protected function getPimcore_Http_RequestHelperService()
    {
        return $this->services['Pimcore\Http\RequestHelper'] = new \Pimcore\Http\RequestHelper(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\DocumentResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\DocumentResolver
     */
    protected function getPimcore_Http_Request_Resolver_DocumentResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] = new \Pimcore\Http\Request\Resolver\DocumentResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\EditmodeResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\EditmodeResolver
     */
    protected function getPimcore_Http_Request_Resolver_EditmodeResolverService()
    {
        $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] = $instance = new \Pimcore\Http\Request\Resolver\EditmodeResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserLoader')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.init']) ? $this->services['monolog.logger.init'] : $this->get('monolog.logger.init')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\PimcoreContextResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\PimcoreContextResolver
     */
    protected function getPimcore_Http_Request_Resolver_PimcoreContextResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] = new \Pimcore\Http\Request\Resolver\PimcoreContextResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.service.context.pimcore_context_guesser']) ? $this->services['pimcore.service.context.pimcore_context_guesser'] : $this->get('pimcore.service.context.pimcore_context_guesser')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\ResponseHeaderResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\ResponseHeaderResolver
     */
    protected function getPimcore_Http_Request_Resolver_ResponseHeaderResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\ResponseHeaderResolver'] = new \Pimcore\Http\Request\Resolver\ResponseHeaderResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\SiteResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\SiteResolver
     */
    protected function getPimcore_Http_Request_Resolver_SiteResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\SiteResolver'] = new \Pimcore\Http\Request\Resolver\SiteResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\TemplateResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\TemplateResolver
     */
    protected function getPimcore_Http_Request_Resolver_TemplateResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\TemplateResolver'] = new \Pimcore\Http\Request\Resolver\TemplateResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Controller\Config\ConfigNormalizer']) ? $this->services['Pimcore\Controller\Config\ConfigNormalizer'] : $this->get('Pimcore\Controller\Config\ConfigNormalizer')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\TemplateVarsResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\TemplateVarsResolver
     */
    protected function getPimcore_Http_Request_Resolver_TemplateVarsResolverService()
    {
        $this->services['Pimcore\Http\Request\Resolver\TemplateVarsResolver'] = $instance = new \Pimcore\Http\Request\Resolver\TemplateVarsResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});

        $instance->addProvider(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});
        $instance->addProvider(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Http\Request\Resolver\ViewModelResolver' shared autowired service.
     *
     * @return \Pimcore\Http\Request\Resolver\ViewModelResolver
     */
    protected function getPimcore_Http_Request_Resolver_ViewModelResolverService()
    {
        return $this->services['Pimcore\Http\Request\Resolver\ViewModelResolver'] = new \Pimcore\Http\Request\Resolver\ViewModelResolver(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\TemplateVarsResolver']) ? $this->services['Pimcore\Http\Request\Resolver\TemplateVarsResolver'] : $this->get('Pimcore\Http\Request\Resolver\TemplateVarsResolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Http\ResponseHelper' shared autowired service.
     *
     * @return \Pimcore\Http\ResponseHelper
     */
    protected function getPimcore_Http_ResponseHelperService()
    {
        return $this->services['Pimcore\Http\ResponseHelper'] = new \Pimcore\Http\ResponseHelper();
    }

    /**
     * Gets the public 'Pimcore\Localization\IntlFormatter' shared autowired service.
     *
     * @return \Pimcore\Localization\IntlFormatter
     */
    protected function getPimcore_Localization_IntlFormatterService()
    {
        return $this->services['Pimcore\Localization\IntlFormatter'] = new \Pimcore\Localization\IntlFormatter(${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Localization\Locale' shared autowired service.
     *
     * @return \Pimcore\Localization\Locale
     */
    protected function getPimcore_Localization_LocaleService()
    {
        return $this->services['Pimcore\Localization\Locale'] = new \Pimcore\Localization\Locale(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Log\ApplicationLogger' shared autowired service.
     *
     * @return \Pimcore\Log\ApplicationLogger
     */
    protected function getPimcore_Log_ApplicationLoggerService()
    {
        $this->services['Pimcore\Log\ApplicationLogger'] = $instance = new \Pimcore\Log\ApplicationLogger();

        $instance->addWriter(${($_ = isset($this->services['Pimcore\Log\Handler\ApplicationLoggerDb']) ? $this->services['Pimcore\Log\Handler\ApplicationLoggerDb'] : $this->get('Pimcore\Log\Handler\ApplicationLoggerDb')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Log\Handler\ApplicationLoggerDb' shared autowired service.
     *
     * @return \Pimcore\Log\Handler\ApplicationLoggerDb
     */
    protected function getPimcore_Log_Handler_ApplicationLoggerDbService()
    {
        return $this->services['Pimcore\Log\Handler\ApplicationLoggerDb'] = new \Pimcore\Log\Handler\ApplicationLoggerDb();
    }

    /**
     * Gets the public 'Pimcore\Migrations\Configuration\ConfigurationFactory' shared autowired service.
     *
     * @return \Pimcore\Migrations\Configuration\ConfigurationFactory
     */
    protected function getPimcore_Migrations_Configuration_ConfigurationFactoryService()
    {
        return $this->services['Pimcore\Migrations\Configuration\ConfigurationFactory'] = new \Pimcore\Migrations\Configuration\ConfigurationFactory($this, ($this->targetDirs[3].'/app'));
    }

    /**
     * Gets the public 'Pimcore\Model\Document\Service' shared autowired service.
     *
     * @return \Pimcore\Model\Document\Service
     */
    protected function getPimcore_Model_Document_ServiceService()
    {
        return $this->services['Pimcore\Model\Document\Service'] = new \Pimcore\Model\Document\Service();
    }

    /**
     * Gets the public 'Pimcore\Model\Factory' shared autowired service.
     *
     * @return \Pimcore\Model\Factory
     */
    protected function getPimcore_Model_FactoryService()
    {
        $this->services['Pimcore\Model\Factory'] = $instance = new \Pimcore\Model\Factory();

        $instance->addLoader(new \Pimcore\Model\Factory\FallbackBuilder());
        $instance->addLoader(new \Pimcore\Loader\ImplementationLoader\ClassMapLoader(array('Pimcore\\Model\\DataObject\\User' => 'AppBundle\\Model\\DataObject\\User')));

        return $instance;
    }

    /**
     * Gets the public 'Pimcore\Model\Schedule\Manager\Procedural' shared autowired service.
     *
     * @return \Pimcore\Model\Schedule\Manager\Procedural
     */
    protected function getPimcore_Model_Schedule_Manager_ProceduralService()
    {
        return $this->services['Pimcore\Model\Schedule\Manager\Procedural'] = new \Pimcore\Model\Schedule\Manager\Procedural('maintenance.pid', ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Action' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Action
     */
    protected function getPimcore_Templating_Helper_ActionService()
    {
        return $this->services['Pimcore\Templating\Helper\Action'] = new \Pimcore\Templating\Helper\Action(${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Cache' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Cache
     */
    protected function getPimcore_Templating_Helper_CacheService()
    {
        return $this->services['Pimcore\Templating\Helper\Cache'] = new \Pimcore\Templating\Helper\Cache(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Device' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Device
     */
    protected function getPimcore_Templating_Helper_DeviceService()
    {
        return $this->services['Pimcore\Templating\Helper\Device'] = new \Pimcore\Templating\Helper\Device();
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\GetAllParams' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\GetAllParams
     */
    protected function getPimcore_Templating_Helper_GetAllParamsService()
    {
        return $this->services['Pimcore\Templating\Helper\GetAllParams'] = new \Pimcore\Templating\Helper\GetAllParams(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\GetParam' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\GetParam
     */
    protected function getPimcore_Templating_Helper_GetParamService()
    {
        return $this->services['Pimcore\Templating\Helper\GetParam'] = new \Pimcore\Templating\Helper\GetParam(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Glossary' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Glossary
     */
    protected function getPimcore_Templating_Helper_GlossaryService()
    {
        return $this->services['Pimcore\Templating\Helper\Glossary'] = new \Pimcore\Templating\Helper\Glossary(new \Pimcore\Tool\Glossary\Processor(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'}));
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\HeadLink' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\HeadLink
     */
    protected function getPimcore_Templating_Helper_HeadLinkService()
    {
        return $this->services['Pimcore\Templating\Helper\HeadLink'] = new \Pimcore\Templating\Helper\HeadLink(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\HeadMeta' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\HeadMeta
     */
    protected function getPimcore_Templating_Helper_HeadMetaService()
    {
        return $this->services['Pimcore\Templating\Helper\HeadMeta'] = new \Pimcore\Templating\Helper\HeadMeta(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\HeadScript' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\HeadScript
     */
    protected function getPimcore_Templating_Helper_HeadScriptService()
    {
        return $this->services['Pimcore\Templating\Helper\HeadScript'] = new \Pimcore\Templating\Helper\HeadScript(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\HeadStyle' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\HeadStyle
     */
    protected function getPimcore_Templating_Helper_HeadStyleService()
    {
        return $this->services['Pimcore\Templating\Helper\HeadStyle'] = new \Pimcore\Templating\Helper\HeadStyle(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\HeadTitle' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\HeadTitle
     */
    protected function getPimcore_Templating_Helper_HeadTitleService()
    {
        return $this->services['Pimcore\Templating\Helper\HeadTitle'] = new \Pimcore\Templating\Helper\HeadTitle(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Inc' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Inc
     */
    protected function getPimcore_Templating_Helper_IncService()
    {
        return $this->services['Pimcore\Templating\Helper\Inc'] = new \Pimcore\Templating\Helper\Inc(${($_ = isset($this->services['pimcore.templating.include_renderer']) ? $this->services['pimcore.templating.include_renderer'] : $this->get('pimcore.templating.include_renderer')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\InlineScript' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\InlineScript
     */
    protected function getPimcore_Templating_Helper_InlineScriptService()
    {
        return $this->services['Pimcore\Templating\Helper\InlineScript'] = new \Pimcore\Templating\Helper\InlineScript(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Navigation' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Navigation
     */
    public function getPimcore_Templating_Helper_NavigationService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['Pimcore\Templating\Helper\Navigation'] = PimcoreTemplatingHelperNavigation_0000000051556a36000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getPimcore_Templating_Helper_NavigationService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Pimcore\Templating\Helper\Navigation(new \Pimcore\Navigation\Builder(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}), new \Symfony\Component\DependencyInjection\ServiceLocator(array('breadcrumbs' => function () {
            return ${($_ = isset($this->services['Pimcore\Navigation\Renderer\Breadcrumbs']) ? $this->services['Pimcore\Navigation\Renderer\Breadcrumbs'] : $this->getPimcore_Navigation_Renderer_BreadcrumbsService()) && false ?: '_'};
        }, 'menu' => function () {
            return ${($_ = isset($this->services['Pimcore\Navigation\Renderer\Menu']) ? $this->services['Pimcore\Navigation\Renderer\Menu'] : $this->getPimcore_Navigation_Renderer_MenuService()) && false ?: '_'};
        })));
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\PimcoreUrl' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\PimcoreUrl
     */
    protected function getPimcore_Templating_Helper_PimcoreUrlService()
    {
        return $this->services['Pimcore\Templating\Helper\PimcoreUrl'] = new \Pimcore\Templating\Helper\PimcoreUrl(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\Placeholder' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Placeholder
     */
    protected function getPimcore_Templating_Helper_PlaceholderService()
    {
        return $this->services['Pimcore\Templating\Helper\Placeholder'] = new \Pimcore\Templating\Helper\Placeholder(${($_ = isset($this->services['pimcore.templating.view_helper.placeholder.container_service']) ? $this->services['pimcore.templating.view_helper.placeholder.container_service'] : $this->get('pimcore.templating.view_helper.placeholder.container_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Templating\Helper\WebsiteConfig' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\WebsiteConfig
     */
    protected function getPimcore_Templating_Helper_WebsiteConfigService()
    {
        return $this->services['Pimcore\Templating\Helper\WebsiteConfig'] = new \Pimcore\Templating\Helper\WebsiteConfig();
    }

    /**
     * Gets the public 'Pimcore\Tool\AssetsInstaller' shared autowired service.
     *
     * @return \Pimcore\Tool\AssetsInstaller
     */
    protected function getPimcore_Tool_AssetsInstallerService()
    {
        return $this->services['Pimcore\Tool\AssetsInstaller'] = new \Pimcore\Tool\AssetsInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_admin.serializer']) ? $this->services['pimcore_admin.serializer'] : $this->get('pimcore_admin.serializer')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Tool\RestClient' shared autowired service.
     *
     * @return \Pimcore\Tool\RestClient
     */
    protected function getPimcore_Tool_RestClientService()
    {
        return $this->services['Pimcore\Tool\RestClient'] = new \Pimcore\Tool\RestClient(${($_ = isset($this->services['pimcore.http_client']) ? $this->services['pimcore.http_client'] : $this->get('pimcore.http_client')) && false ?: '_'});
    }

    /**
     * Gets the public 'Pimcore\Translation\Translator' shared autowired service.
     *
     * @return \Pimcore\Translation\Translator
     */
    protected function getPimcore_Translation_TranslatorService()
    {
        $this->services['Pimcore\Translation\Translator'] = $instance = new \Pimcore\Translation\Translator(${($_ = isset($this->services['translator.data_collector']) ? $this->services['translator.data_collector'] : $this->getTranslator_DataCollectorService()) && false ?: '_'});

        $instance->setKernel(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
        $instance->setAdminPath('@PimcoreCoreBundle/Resources/translations');

        return $instance;
    }

    /**
     * Gets the public 'annotation_reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\CachedReader
     */
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\CachedReader(${($_ = isset($this->services['annotations.reader']) ? $this->services['annotations.reader'] : $this->getAnnotations_ReaderService()) && false ?: '_'}, new \Symfony\Component\Cache\DoctrineProvider(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create((__DIR__.'/annotations.php'), ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'})), true);
    }

    /**
     * Gets the public 'app.area.brick.embed' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Embed
     */
    protected function getApp_Area_Brick_EmbedService()
    {
        $this->services['app.area.brick.embed'] = $instance = new \AppBundle\Document\Areabrick\Embed();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.featurette' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Featurette
     */
    protected function getApp_Area_Brick_FeaturetteService()
    {
        $this->services['app.area.brick.featurette'] = $instance = new \AppBundle\Document\Areabrick\Featurette();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.gallery_carousel' shared service.
     *
     * @return \AppBundle\Document\Areabrick\GalleryCarousel
     */
    protected function getApp_Area_Brick_GalleryCarouselService()
    {
        $this->services['app.area.brick.gallery_carousel'] = $instance = new \AppBundle\Document\Areabrick\GalleryCarousel();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.gallery_folder' shared service.
     *
     * @return \AppBundle\Document\Areabrick\GalleryFolder
     */
    protected function getApp_Area_Brick_GalleryFolderService()
    {
        $this->services['app.area.brick.gallery_folder'] = $instance = new \AppBundle\Document\Areabrick\GalleryFolder();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.gallery_single_images' shared service.
     *
     * @return \AppBundle\Document\Areabrick\GallerySingleImages
     */
    protected function getApp_Area_Brick_GallerySingleImagesService()
    {
        $this->services['app.area.brick.gallery_single_images'] = $instance = new \AppBundle\Document\Areabrick\GallerySingleImages();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.headlines' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Headlines
     */
    protected function getApp_Area_Brick_HeadlinesService()
    {
        $this->services['app.area.brick.headlines'] = $instance = new \AppBundle\Document\Areabrick\Headlines();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.horizontal_line' shared service.
     *
     * @return \AppBundle\Document\Areabrick\HorizontalLine
     */
    protected function getApp_Area_Brick_HorizontalLineService()
    {
        $this->services['app.area.brick.horizontal_line'] = $instance = new \AppBundle\Document\Areabrick\HorizontalLine();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.icon_teaser_row' shared service.
     *
     * @return \AppBundle\Document\Areabrick\IconTeaserRow
     */
    protected function getApp_Area_Brick_IconTeaserRowService()
    {
        $this->services['app.area.brick.icon_teaser_row'] = $instance = new \AppBundle\Document\Areabrick\IconTeaserRow();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.image' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Image
     */
    protected function getApp_Area_Brick_ImageService()
    {
        $this->services['app.area.brick.image'] = $instance = new \AppBundle\Document\Areabrick\Image();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.image_hotspot_marker' shared service.
     *
     * @return \AppBundle\Document\Areabrick\ImageHotspotMarker
     */
    protected function getApp_Area_Brick_ImageHotspotMarkerService()
    {
        $this->services['app.area.brick.image_hotspot_marker'] = $instance = new \AppBundle\Document\Areabrick\ImageHotspotMarker();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.pdf' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Pdf
     */
    protected function getApp_Area_Brick_PdfService()
    {
        $this->services['app.area.brick.pdf'] = $instance = new \AppBundle\Document\Areabrick\Pdf();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.standard_teaser_row' shared service.
     *
     * @return \AppBundle\Document\Areabrick\StandardTeaserRow
     */
    protected function getApp_Area_Brick_StandardTeaserRowService()
    {
        $this->services['app.area.brick.standard_teaser_row'] = $instance = new \AppBundle\Document\Areabrick\StandardTeaserRow();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.tabbed_slider_text' shared service.
     *
     * @return \AppBundle\Document\Areabrick\TabbedSliderText
     */
    protected function getApp_Area_Brick_TabbedSliderTextService()
    {
        $this->services['app.area.brick.tabbed_slider_text'] = $instance = new \AppBundle\Document\Areabrick\TabbedSliderText();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.text_accordion' shared service.
     *
     * @return \AppBundle\Document\Areabrick\TextAccordion
     */
    protected function getApp_Area_Brick_TextAccordionService()
    {
        $this->services['app.area.brick.text_accordion'] = $instance = new \AppBundle\Document\Areabrick\TextAccordion();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.video' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Video
     */
    protected function getApp_Area_Brick_VideoService()
    {
        $this->services['app.area.brick.video'] = $instance = new \AppBundle\Document\Areabrick\Video();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.wysiwyg' shared service.
     *
     * @return \AppBundle\Document\Areabrick\Wysiwyg
     */
    protected function getApp_Area_Brick_WysiwygService()
    {
        $this->services['app.area.brick.wysiwyg'] = $instance = new \AppBundle\Document\Areabrick\Wysiwyg();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'app.area.brick.wysiwyg_with_images' shared service.
     *
     * @return \AppBundle\Document\Areabrick\WysiwygWithImages
     */
    protected function getApp_Area_Brick_WysiwygWithImagesService()
    {
        $this->services['app.area.brick.wysiwyg_with_images'] = $instance = new \AppBundle\Document\Areabrick\WysiwygWithImages();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'assets.context' shared service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext
     */
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'assets.packages' shared service.
     *
     * @return \Symfony\Component\Asset\Packages
     */
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), ${($_ = isset($this->services['assets.context']) ? $this->services['assets.context'] : $this->get('assets.context')) && false ?: '_'}), array());
    }

    /**
     * Gets the public 'cache.app' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected function getCache_AppService()
    {
        return $this->services['cache.app'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(${($_ = isset($this->services['cache.app.recorder_inner']) ? $this->services['cache.app.recorder_inner'] : $this->getCache_App_RecorderInnerService()) && false ?: '_'});
    }

    /**
     * Gets the public 'cache.default_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_DefaultClearerService()
    {
        return $this->services['cache.default_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(array('cache.app' => ${($_ = isset($this->services['cache.app']) ? $this->services['cache.app'] : $this->get('cache.app')) && false ?: '_'}, 'cache.system' => ${($_ = isset($this->services['cache.system']) ? $this->services['cache.system'] : $this->get('cache.system')) && false ?: '_'}, 'cache.validator' => ${($_ = isset($this->services['cache.validator']) ? $this->services['cache.validator'] : $this->getCache_ValidatorService()) && false ?: '_'}, 'cache.serializer' => ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'}, 'cache.annotations' => ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'}));
    }

    /**
     * Gets the public 'cache.global_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer
     */
    protected function getCache_GlobalClearerService()
    {
        return $this->services['cache.global_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer(array('cache.app' => ${($_ = isset($this->services['cache.app']) ? $this->services['cache.app'] : $this->get('cache.app')) && false ?: '_'}, 'cache.system' => ${($_ = isset($this->services['cache.system']) ? $this->services['cache.system'] : $this->get('cache.system')) && false ?: '_'}, 'cache.validator' => ${($_ = isset($this->services['cache.validator']) ? $this->services['cache.validator'] : $this->getCache_ValidatorService()) && false ?: '_'}, 'cache.serializer' => ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'}, 'cache.annotations' => ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'}));
    }

    /**
     * Gets the public 'cache.system' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected function getCache_SystemService()
    {
        return $this->services['cache.system'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(${($_ = isset($this->services['cache.system.recorder_inner']) ? $this->services['cache.system.recorder_inner'] : $this->getCache_System_RecorderInnerService()) && false ?: '_'});
    }

    /**
     * Gets the public 'cache_clearer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer
     */
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array(0 => ${($_ = isset($this->services['cache.default_clearer']) ? $this->services['cache.default_clearer'] : $this->get('cache.default_clearer')) && false ?: '_'}));
    }

    /**
     * Gets the public 'cache_warmer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate
     */
    protected function getCacheWarmerService()
    {
        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer(${($_ = isset($this->services['validator.builder']) ? $this->services['validator.builder'] : $this->get('validator.builder')) && false ?: '_'}, (__DIR__.'/validation.php'), ${($_ = isset($this->services['cache.validator']) ? $this->services['cache.validator'] : $this->getCache_ValidatorService()) && false ?: '_'}), 1 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->get('translator.default')) && false ?: '_'}), 2 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}), 3 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer(${($_ = isset($this->services['annotations.reader']) ? $this->services['annotations.reader'] : $this->getAnnotations_ReaderService()) && false ?: '_'}, (__DIR__.'/annotations.php'), ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'}), 4 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer(array(), (__DIR__.'/serialization.php'), ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'}), 5 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer(new \Symfony\Component\DependencyInjection\ServiceLocator(array('twig' => function () {
            $f = function (\Twig\Environment $v) { return $v; }; return $f(${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'});
        })), ${($_ = isset($this->services['templating.finder']) ? $this->services['templating.finder'] : $this->getTemplating_FinderService()) && false ?: '_'}, array()), 6 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer($this, new \Symfony\Bundle\TwigBundle\TemplateIterator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ($this->targetDirs[3].'/app'), array())), 7 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'}), 8 => new \Pimcore\HttpKernel\CacheWarmer\MkdirCacheWarmer()));
    }

    /**
     * Gets the public 'cmf_routing.dynamic_router' shared service.
     *
     * @return \Symfony\Cmf\Bundle\RoutingBundle\Routing\DynamicRouter
     */
    protected function getCmfRouting_DynamicRouterService()
    {
        $this->services['cmf_routing.dynamic_router'] = $instance = new \Symfony\Cmf\Bundle\RoutingBundle\Routing\DynamicRouter(${($_ = isset($this->services['pimcore.routing.router.request_context']) ? $this->services['pimcore.routing.router.request_context'] : $this->get('pimcore.routing.router.request_context')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.nested_matcher']) ? $this->services['cmf_routing.nested_matcher'] : $this->get('cmf_routing.nested_matcher')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.generator']) ? $this->services['cmf_routing.generator'] : $this->get('cmf_routing.generator')) && false ?: '_'}, '', ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.route_provider']) ? $this->services['cmf_routing.route_provider'] : $this->get('cmf_routing.route_provider')) && false ?: '_'});

        $instance->setRequestStack(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
        $instance->addRouteEnhancer(${($_ = isset($this->services['cmf_routing.enhancer.route_content']) ? $this->services['cmf_routing.enhancer.route_content'] : $this->get('cmf_routing.enhancer.route_content')) && false ?: '_'}, 100);

        return $instance;
    }

    /**
     * Gets the public 'cmf_routing.enhancer.route_content' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\Enhancer\RouteContentEnhancer
     */
    protected function getCmfRouting_Enhancer_RouteContentService()
    {
        return $this->services['cmf_routing.enhancer.route_content'] = new \Symfony\Cmf\Component\Routing\Enhancer\RouteContentEnhancer('_route_object', '_content');
    }

    /**
     * Gets the public 'cmf_routing.final_matcher' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\NestedMatcher\UrlMatcher
     */
    protected function getCmfRouting_FinalMatcherService()
    {
        return $this->services['cmf_routing.final_matcher'] = new \Symfony\Cmf\Component\Routing\NestedMatcher\UrlMatcher(new \Symfony\Component\Routing\RouteCollection(), new \Symfony\Component\Routing\RequestContext());
    }

    /**
     * Gets the public 'cmf_routing.generator' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\ContentAwareGenerator
     */
    protected function getCmfRouting_GeneratorService()
    {
        return $this->services['cmf_routing.generator'] = new \Symfony\Cmf\Component\Routing\ContentAwareGenerator(${($_ = isset($this->services['cmf_routing.route_provider']) ? $this->services['cmf_routing.route_provider'] : $this->get('cmf_routing.route_provider')) && false ?: '_'}, ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'cmf_routing.nested_matcher' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher
     */
    protected function getCmfRouting_NestedMatcherService()
    {
        return $this->services['cmf_routing.nested_matcher'] = new \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher(${($_ = isset($this->services['cmf_routing.route_provider']) ? $this->services['cmf_routing.route_provider'] : $this->get('cmf_routing.route_provider')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.final_matcher']) ? $this->services['cmf_routing.final_matcher'] : $this->get('cmf_routing.final_matcher')) && false ?: '_'});
    }

    /**
     * Gets the public 'cmf_routing.persistence.doctrine.route_condition_metadata_listener' shared service.
     *
     * @return \Symfony\Cmf\Bundle\RoutingBundle\Doctrine\RouteConditionMetadataListener
     */
    protected function getCmfRouting_Persistence_Doctrine_RouteConditionMetadataListenerService()
    {
        return $this->services['cmf_routing.persistence.doctrine.route_condition_metadata_listener'] = new \Symfony\Cmf\Bundle\RoutingBundle\Doctrine\RouteConditionMetadataListener();
    }

    /**
     * Gets the public 'cmf_routing.redirect_controller' shared service.
     *
     * @return \Symfony\Cmf\Bundle\RoutingBundle\Controller\RedirectController
     */
    protected function getCmfRouting_RedirectControllerService()
    {
        return $this->services['cmf_routing.redirect_controller'] = new \Symfony\Cmf\Bundle\RoutingBundle\Controller\RedirectController(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'});
    }

    /**
     * Gets the public 'cmf_routing.route_provider' shared autowired service.
     *
     * @return \Pimcore\Routing\DynamicRouteProvider
     */
    protected function getCmfRouting_RouteProviderService()
    {
        $this->services['cmf_routing.route_provider'] = $instance = new \Pimcore\Routing\DynamicRouteProvider(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\SiteResolver']) ? $this->services['Pimcore\Http\Request\Resolver\SiteResolver'] : $this->get('Pimcore\Http\Request\Resolver\SiteResolver')) && false ?: '_'});

        $instance->addHandler(${($_ = isset($this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler']) ? $this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler'] : $this->getPimcore_Routing_Dynamic_DocumentRouteHandlerService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'cmf_routing.route_type_form_type' shared service.
     *
     * @return \Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType
     */
    protected function getCmfRouting_RouteTypeFormTypeService()
    {
        return $this->services['cmf_routing.route_type_form_type'] = new \Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType();
    }

    /**
     * Gets the public 'cmf_routing.router' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\ChainRouter
     */
    protected function getCmfRouting_RouterService()
    {
        $a = ${($_ = isset($this->services['pimcore.routing.router.request_context']) ? $this->services['pimcore.routing.router.request_context'] : $this->get('pimcore.routing.router.request_context')) && false ?: '_'};

        $b = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, ($this->targetDirs[3].'/app/config/routing_dev.yml'), array('cache_dir' => __DIR__, 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appDevDebugProjectContainerUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appDevDebugProjectContainerUrlMatcher', 'strict_requirements' => true), $a, ${($_ = isset($this->services['monolog.logger.router']) ? $this->services['monolog.logger.router'] : $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        $b->setConfigCacheFactory(${($_ = isset($this->services['config_cache_factory']) ? $this->services['config_cache_factory'] : $this->get('config_cache_factory')) && false ?: '_'});

        $c = new \Pimcore\Routing\Staticroute\Router($a, ${($_ = isset($this->services['Pimcore\Controller\Config\ConfigNormalizer']) ? $this->services['Pimcore\Controller\Config\ConfigNormalizer'] : $this->get('Pimcore\Controller\Config\ConfigNormalizer')) && false ?: '_'});
        $c->setLocaleParams(array());
        $c->setLogger(${($_ = isset($this->services['monolog.logger.routing']) ? $this->services['monolog.logger.routing'] : $this->get('monolog.logger.routing')) && false ?: '_'});

        $this->services['cmf_routing.router'] = $instance = new \Symfony\Cmf\Component\Routing\ChainRouter(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});

        $instance->setContext($a);
        $instance->add($b, '300');
        $instance->add(${($_ = isset($this->services['cmf_routing.dynamic_router']) ? $this->services['cmf_routing.dynamic_router'] : $this->get('cmf_routing.dynamic_router')) && false ?: '_'}, '200');
        $instance->add($c, 100);

        return $instance;
    }

    /**
     * Gets the public 'cmf_routing.validator.route_defaults' shared service.
     *
     * @return \Symfony\Cmf\Bundle\RoutingBundle\Validator\Constraints\RouteDefaultsTemplatingValidator
     */
    protected function getCmfRouting_Validator_RouteDefaultsService()
    {
        $a = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());
        $a->addEngine(${($_ = isset($this->services['debug.templating.engine.php']) ? $this->services['debug.templating.engine.php'] : $this->get('debug.templating.engine.php')) && false ?: '_'});
        $a->addEngine(${($_ = isset($this->services['pimcore.templating.engine.twig']) ? $this->services['pimcore.templating.engine.twig'] : $this->get('pimcore.templating.engine.twig')) && false ?: '_'});

        return $this->services['cmf_routing.validator.route_defaults'] = new \Symfony\Cmf\Bundle\RoutingBundle\Validator\Constraints\RouteDefaultsTemplatingValidator(${($_ = isset($this->services['debug.controller_resolver']) ? $this->services['debug.controller_resolver'] : $this->get('debug.controller_resolver')) && false ?: '_'}, $a);
    }

    /**
     * Gets the public 'config_cache_factory' shared service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory
     */
    protected function getConfigCacheFactoryService()
    {
        return $this->services['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e']) ? $this->services['1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e'] : $this->get113bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e']) ? $this->services['2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e'] : $this->get213bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService()) && false ?: '_'};
        }, 2));
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_executecommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\ExecuteCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandExecutecommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_executecommand'] = new \Pimcore\Migrations\Command\ExecuteCommand();
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_generatecommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\GenerateCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandGeneratecommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_generatecommand'] = new \Pimcore\Migrations\Command\GenerateCommand();
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_latestcommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\LatestCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandLatestcommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_latestcommand'] = new \Pimcore\Migrations\Command\LatestCommand();
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_migratecommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\MigrateCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandMigratecommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_migratecommand'] = new \Pimcore\Migrations\Command\MigrateCommand();
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_statuscommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\StatusCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandStatuscommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_statuscommand'] = new \Pimcore\Migrations\Command\StatusCommand();
    }

    /**
     * Gets the public 'console.command.pimcore_migrations_command_versioncommand' shared autowired service.
     *
     * @return \Pimcore\Migrations\Command\VersionCommand
     */
    protected function getConsole_Command_PimcoreMigrationsCommandVersioncommandService()
    {
        return $this->services['console.command.pimcore_migrations_command_versioncommand'] = new \Pimcore\Migrations\Command\VersionCommand();
    }

    /**
     * Gets the public 'console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand
     */
    protected function getConsole_Command_SymfonyBundleSecuritybundleCommandUserpasswordencodercommandService()
    {
        return $this->services['console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand'] = new \Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand(${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'}, array());
    }

    /**
     * Gets the public 'coreshop.address.formatter' shared service.
     *
     * @return \CoreShop\Component\Address\Formatter\AddressFormatter
     */
    protected function getCoreshop_Address_FormatterService()
    {
        return $this->services['coreshop.address.formatter'] = new \CoreShop\Component\Address\Formatter\AddressFormatter();
    }

    /**
     * Gets the public 'coreshop.admin_controller.carrier' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_CarrierService()
    {
        $this->services['coreshop.admin_controller.carrier'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.carrier'), ${($_ = isset($this->services['coreshop.repository.carrier']) ? $this->services['coreshop.repository.carrier'] : $this->get('coreshop.repository.carrier')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.carrier']) ? $this->services['coreshop.factory.carrier'] : $this->get('coreshop.factory.carrier')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.cart_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Controller\CartPriceRuleController
     */
    protected function getCoreshop_AdminController_CartPriceRuleService()
    {
        $this->services['coreshop.admin_controller.cart_price_rule'] = $instance = new \CoreShop\Bundle\OrderBundle\Controller\CartPriceRuleController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.cart_price_rule'), ${($_ = isset($this->services['coreshop.repository.cart_price_rule']) ? $this->services['coreshop.repository.cart_price_rule'] : $this->get('coreshop.repository.cart_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.cart_price_rule']) ? $this->services['coreshop.factory.cart_price_rule'] : $this->get('coreshop.factory.cart_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.configuration' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\ConfigurationController
     */
    protected function getCoreshop_AdminController_ConfigurationService()
    {
        $this->services['coreshop.admin_controller.configuration'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\ConfigurationController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.configuration'), ${($_ = isset($this->services['coreshop.repository.configuration']) ? $this->services['coreshop.repository.configuration'] : $this->get('coreshop.repository.configuration')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.configuration']) ? $this->services['coreshop.factory.configuration'] : $this->get('coreshop.factory.configuration')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.country' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_CountryService()
    {
        $this->services['coreshop.admin_controller.country'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.country'), ${($_ = isset($this->services['coreshop.repository.country']) ? $this->services['coreshop.repository.country'] : $this->get('coreshop.repository.country')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.country']) ? $this->services['coreshop.factory.country'] : $this->get('coreshop.factory.country')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.currency' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_CurrencyService()
    {
        $this->services['coreshop.admin_controller.currency'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.currency'), ${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.currency']) ? $this->services['coreshop.factory.currency'] : $this->get('coreshop.factory.currency')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.exchange_rate' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Controller\ExchangeRateController
     */
    protected function getCoreshop_AdminController_ExchangeRateService()
    {
        $this->services['coreshop.admin_controller.exchange_rate'] = $instance = new \CoreShop\Bundle\CurrencyBundle\Controller\ExchangeRateController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.exchange_rate'), ${($_ = isset($this->services['coreshop.repository.exchange_rate']) ? $this->services['coreshop.repository.exchange_rate'] : $this->get('coreshop.repository.exchange_rate')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.exchange_rate']) ? $this->services['coreshop.factory.exchange_rate'] : $this->get('coreshop.factory.exchange_rate')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.filter' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Controller\FilterController
     */
    protected function getCoreshop_AdminController_FilterService()
    {
        $this->services['coreshop.admin_controller.filter'] = $instance = new \CoreShop\Bundle\IndexBundle\Controller\FilterController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.filter'), ${($_ = isset($this->services['coreshop.repository.filter']) ? $this->services['coreshop.repository.filter'] : $this->get('coreshop.repository.filter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.filter']) ? $this->services['coreshop.factory.filter'] : $this->get('coreshop.factory.filter')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.index' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Controller\IndexController
     */
    protected function getCoreshop_AdminController_IndexService()
    {
        $this->services['coreshop.admin_controller.index'] = $instance = new \CoreShop\Bundle\IndexBundle\Controller\IndexController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.index'), ${($_ = isset($this->services['coreshop.repository.index']) ? $this->services['coreshop.repository.index'] : $this->get('coreshop.repository.index')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.index']) ? $this->services['coreshop.factory.index'] : $this->get('coreshop.factory.index')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.notification_rule' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Controller\NotificationRuleController
     */
    protected function getCoreshop_AdminController_NotificationRuleService()
    {
        $this->services['coreshop.admin_controller.notification_rule'] = $instance = new \CoreShop\Bundle\NotificationBundle\Controller\NotificationRuleController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.notification_rule'), ${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.notification_rule']) ? $this->services['coreshop.factory.notification_rule'] : $this->get('coreshop.factory.notification_rule')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.payment' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_PaymentService()
    {
        $this->services['coreshop.admin_controller.payment'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.payment'), ${($_ = isset($this->services['coreshop.repository.payment']) ? $this->services['coreshop.repository.payment'] : $this->get('coreshop.repository.payment')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.payment']) ? $this->services['coreshop.factory.payment'] : $this->get('coreshop.factory.payment')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.payment_provider' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\PaymentProviderController
     */
    protected function getCoreshop_AdminController_PaymentProviderService()
    {
        $this->services['coreshop.admin_controller.payment_provider'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\PaymentProviderController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.payment_provider'), ${($_ = isset($this->services['coreshop.repository.payment_provider']) ? $this->services['coreshop.repository.payment_provider'] : $this->get('coreshop.repository.payment_provider')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.payment_provider']) ? $this->services['coreshop.factory.payment_provider'] : $this->get('coreshop.factory.payment_provider')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.product_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Controller\ProductPriceRuleController
     */
    protected function getCoreshop_AdminController_ProductPriceRuleService()
    {
        $this->services['coreshop.admin_controller.product_price_rule'] = $instance = new \CoreShop\Bundle\ProductBundle\Controller\ProductPriceRuleController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.product_price_rule'), ${($_ = isset($this->services['coreshop.repository.product_price_rule']) ? $this->services['coreshop.repository.product_price_rule'] : $this->get('coreshop.repository.product_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.product_price_rule']) ? $this->services['coreshop.factory.product_price_rule'] : $this->get('coreshop.factory.product_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.product_specific_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Controller\ProductSpecificPriceRuleController
     */
    protected function getCoreshop_AdminController_ProductSpecificPriceRuleService()
    {
        $this->services['coreshop.admin_controller.product_specific_price_rule'] = $instance = new \CoreShop\Bundle\ProductBundle\Controller\ProductSpecificPriceRuleController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.product_specific_price_rule'), ${($_ = isset($this->services['coreshop.repository.product_specific_price_rule']) ? $this->services['coreshop.repository.product_specific_price_rule'] : $this->get('coreshop.repository.product_specific_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.product_specific_price_rule']) ? $this->services['coreshop.factory.product_specific_price_rule'] : $this->get('coreshop.factory.product_specific_price_rule')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.reports' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\ReportsController
     */
    protected function getCoreshop_AdminController_ReportsService()
    {
        $this->services['coreshop.admin_controller.reports'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\ReportsController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.resource_settings' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceSettingsController
     */
    protected function getCoreshop_AdminController_ResourceSettingsService()
    {
        $this->services['coreshop.admin_controller.resource_settings'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceSettingsController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_RuleActionService()
    {
        $this->services['coreshop.admin_controller.rule_action'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.rule_action'), ${($_ = isset($this->services['coreshop.repository.rule_action']) ? $this->services['coreshop.repository.rule_action'] : $this->get('coreshop.repository.rule_action')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.rule_action']) ? $this->services['coreshop.factory.rule_action'] : $this->get('coreshop.factory.rule_action')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_RuleConditionService()
    {
        $this->services['coreshop.admin_controller.rule_condition'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.rule_condition'), ${($_ = isset($this->services['coreshop.repository.rule_condition']) ? $this->services['coreshop.repository.rule_condition'] : $this->get('coreshop.repository.rule_condition')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.rule_condition']) ? $this->services['coreshop.factory.rule_condition'] : $this->get('coreshop.factory.rule_condition')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.sequence' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_SequenceService()
    {
        $this->services['coreshop.admin_controller.sequence'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.sequence'), ${($_ = isset($this->services['coreshop.repository.sequence']) ? $this->services['coreshop.repository.sequence'] : $this->get('coreshop.repository.sequence')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.sequence']) ? $this->services['coreshop.factory.sequence'] : $this->get('coreshop.factory.sequence')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.settings' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\SettingsController
     */
    protected function getCoreshop_AdminController_SettingsService()
    {
        $this->services['coreshop.admin_controller.settings'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\SettingsController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.shipping_rule' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Controller\ShippingRuleController
     */
    protected function getCoreshop_AdminController_ShippingRuleService()
    {
        $this->services['coreshop.admin_controller.shipping_rule'] = $instance = new \CoreShop\Bundle\ShippingBundle\Controller\ShippingRuleController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.shipping_rule'), ${($_ = isset($this->services['coreshop.repository.shipping_rule']) ? $this->services['coreshop.repository.shipping_rule'] : $this->get('coreshop.repository.shipping_rule')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.shipping_rule']) ? $this->services['coreshop.factory.shipping_rule'] : $this->get('coreshop.factory.shipping_rule')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.state' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_StateService()
    {
        $this->services['coreshop.admin_controller.state'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.state'), ${($_ = isset($this->services['coreshop.repository.state']) ? $this->services['coreshop.repository.state'] : $this->get('coreshop.repository.state')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.state']) ? $this->services['coreshop.factory.state'] : $this->get('coreshop.factory.state')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.store' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Controller\StoreController
     */
    protected function getCoreshop_AdminController_StoreService()
    {
        $this->services['coreshop.admin_controller.store'] = $instance = new \CoreShop\Bundle\StoreBundle\Controller\StoreController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.store'), ${($_ = isset($this->services['coreshop.repository.store']) ? $this->services['coreshop.repository.store'] : $this->get('coreshop.repository.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.store']) ? $this->services['coreshop.factory.store'] : $this->get('coreshop.factory.store')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.tax_rate' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_TaxRateService()
    {
        $this->services['coreshop.admin_controller.tax_rate'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.tax_rate'), ${($_ = isset($this->services['coreshop.repository.tax_rate']) ? $this->services['coreshop.repository.tax_rate'] : $this->get('coreshop.repository.tax_rate')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_rate']) ? $this->services['coreshop.factory.tax_rate'] : $this->get('coreshop.factory.tax_rate')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.tax_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Controller\TaxRuleGroupController
     */
    protected function getCoreshop_AdminController_TaxRuleGroupService()
    {
        $this->services['coreshop.admin_controller.tax_rule_group'] = $instance = new \CoreShop\Bundle\TaxationBundle\Controller\TaxRuleGroupController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.tax_rule_group'), ${($_ = isset($this->services['coreshop.repository.tax_rule_group']) ? $this->services['coreshop.repository.tax_rule_group'] : $this->get('coreshop.repository.tax_rule_group')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_rule_group']) ? $this->services['coreshop.factory.tax_rule_group'] : $this->get('coreshop.factory.tax_rule_group')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.admin_controller.zone' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceController
     */
    protected function getCoreshop_AdminController_ZoneService()
    {
        $this->services['coreshop.admin_controller.zone'] = $instance = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.zone'), ${($_ = isset($this->services['coreshop.repository.zone']) ? $this->services['coreshop.repository.zone'] : $this->get('coreshop.repository.zone')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.zone']) ? $this->services['coreshop.factory.zone'] : $this->get('coreshop.factory.zone')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.view_handler']) ? $this->services['coreshop.resource_controller.view_handler'] : $this->getCoreshop_ResourceController_ViewHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.event_dispatcher']) ? $this->services['coreshop.resource_controller.event_dispatcher'] : $this->getCoreshop_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource_controller.form_factory']) ? $this->services['coreshop.resource_controller.form_factory'] : $this->get('coreshop.resource_controller.form_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.resource.helper.form_error_serializer']) ? $this->services['coreshop.resource.helper.form_error_serializer'] : $this->get('coreshop.resource.helper.form_error_serializer')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.carrier.cart.store_based_processor' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Shipping\Discover\StoreBasedShippableCarriersDiscovery
     */
    protected function getCoreshop_Carrier_Cart_StoreBasedProcessorService()
    {
        return $this->services['coreshop.carrier.cart.store_based_processor'] = new \CoreShop\Bundle\CoreBundle\Shipping\Discover\StoreBasedShippableCarriersDiscovery(${($_ = isset($this->services['coreshop.repository.carrier']) ? $this->services['coreshop.repository.carrier'] : $this->get('coreshop.repository.carrier')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.shipping.carrier.validator']) ? $this->services['coreshop.shipping.carrier.validator'] : $this->get('coreshop.shipping.carrier.validator')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.carrier.price_calculator' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Calculator\CarrierPriceCalculator
     */
    protected function getCoreshop_Carrier_PriceCalculatorService()
    {
        return $this->services['coreshop.carrier.price_calculator'] = new \CoreShop\Bundle\ShippingBundle\Calculator\CarrierPriceCalculator(${($_ = isset($this->services['coreshop.registry.shipping.price_calculators']) ? $this->services['coreshop.registry.shipping.price_calculators'] : $this->get('coreshop.registry.shipping.price_calculators')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.carrier.price_calculator.default' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Calculator\CompositePriceCalculator
     */
    protected function getCoreshop_Carrier_PriceCalculator_DefaultService()
    {
        return $this->services['coreshop.carrier.price_calculator.default'] = new \CoreShop\Bundle\ShippingBundle\Calculator\CompositePriceCalculator(array(0 => ${($_ = isset($this->services['coreshop.carrier.price_calculator']) ? $this->services['coreshop.carrier.price_calculator'] : $this->get('coreshop.carrier.price_calculator')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.carrier.price_calculator.free_shipping_rule' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Shipping\Calculator\FreeShippingPriceRuleActionCalculator
     */
    protected function getCoreshop_Carrier_PriceCalculator_FreeShippingRuleService()
    {
        return $this->services['coreshop.carrier.price_calculator.free_shipping_rule'] = new \CoreShop\Bundle\CoreBundle\Shipping\Calculator\FreeShippingPriceRuleActionCalculator();
    }

    /**
     * Gets the public 'coreshop.carrier.price_calculator.shipping_rules' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Calculator\CarrierShippingRulePriceCalculator
     */
    protected function getCoreshop_Carrier_PriceCalculator_ShippingRulesService()
    {
        return $this->services['coreshop.carrier.price_calculator.shipping_rules'] = new \CoreShop\Bundle\ShippingBundle\Calculator\CarrierShippingRulePriceCalculator(${($_ = isset($this->services['coreshop.carrier.shipping_rule.checker']) ? $this->services['coreshop.carrier.shipping_rule.checker'] : $this->get('coreshop.carrier.shipping_rule.checker')) && false ?: '_'}, new \CoreShop\Bundle\ShippingBundle\Processor\ShippingRuleActionProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.actions']) ? $this->services['coreshop.registry.shipping_rule.actions'] : $this->get('coreshop.registry.shipping_rule.actions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.carrier.price_calculator.taxed' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Shipping\Calculator\TaxedCarrierPriceRuleCalculator
     */
    protected function getCoreshop_Carrier_PriceCalculator_TaxedService()
    {
        return $this->services['coreshop.carrier.price_calculator.taxed'] = new \CoreShop\Bundle\CoreBundle\Shipping\Calculator\TaxedCarrierPriceRuleCalculator(${($_ = isset($this->services['coreshop.carrier.price_calculator.default']) ? $this->services['coreshop.carrier.price_calculator.default'] : $this->get('coreshop.carrier.price_calculator.default')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.taxation.factory.cached_tax_calculator']) ? $this->services['coreshop.taxation.factory.cached_tax_calculator'] : $this->get('coreshop.taxation.factory.cached_tax_calculator')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.carrier.processor.shipping_rules' service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Processor\ShippingRuleActionProcessor
     */
    protected function getCoreshop_Carrier_Processor_ShippingRulesService()
    {
        return new \CoreShop\Bundle\ShippingBundle\Processor\ShippingRuleActionProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.actions']) ? $this->services['coreshop.registry.shipping_rule.actions'] : $this->get('coreshop.registry.shipping_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.carrier.shipping_rule.checker' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Checker\CarrierShippingRuleChecker
     */
    protected function getCoreshop_Carrier_ShippingRule_CheckerService()
    {
        return $this->services['coreshop.carrier.shipping_rule.checker'] = new \CoreShop\Bundle\ShippingBundle\Checker\CarrierShippingRuleChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'})));
    }

    /**
     * Gets the public 'coreshop.cart.cleanup' service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Maintenance\Cleanup
     */
    protected function getCoreshop_Cart_CleanupService()
    {
        return new \CoreShop\Bundle\OrderBundle\Cart\Maintenance\Cleanup(${($_ = isset($this->services['coreshop.repository.cart']) ? $this->services['coreshop.repository.cart'] : $this->get('coreshop.repository.cart')) && false ?: '_'}, NULL, true, true);
    }

    /**
     * Gets the public 'coreshop.cart.cleanup.maintenance_listener' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\CartCleanerMaintenanceManagerListener
     */
    protected function getCoreshop_Cart_Cleanup_MaintenanceListenerService()
    {
        return $this->services['coreshop.cart.cleanup.maintenance_listener'] = new \CoreShop\Bundle\CoreBundle\EventListener\CartCleanerMaintenanceManagerListener(${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, new \CoreShop\Bundle\OrderBundle\Cart\Maintenance\Cleanup(${($_ = isset($this->services['coreshop.repository.cart']) ? $this->services['coreshop.repository.cart'] : $this->get('coreshop.repository.cart')) && false ?: '_'}, NULL, true, true));
    }

    /**
     * Gets the public 'coreshop.cart.discount_calculator.composite' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Calculator\CompositeCartDiscountCalculator
     */
    protected function getCoreshop_Cart_DiscountCalculator_CompositeService()
    {
        return $this->services['coreshop.cart.discount_calculator.composite'] = new \CoreShop\Bundle\OrderBundle\Cart\Calculator\CompositeCartDiscountCalculator(array(0 => ${($_ = isset($this->services['coreshop.cart.discount_calculator.price_rules']) ? $this->services['coreshop.cart.discount_calculator.price_rules'] : $this->get('coreshop.cart.discount_calculator.price_rules')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.cart.discount_calculator.price_rules' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Calculator\CartPriceRuleCalculator
     */
    protected function getCoreshop_Cart_DiscountCalculator_PriceRulesService()
    {
        return $this->services['coreshop.cart.discount_calculator.price_rules'] = new \CoreShop\Bundle\OrderBundle\Cart\Calculator\CartPriceRuleCalculator(${($_ = isset($this->services['coreshop.registry.cart_price_rule.actions']) ? $this->services['coreshop.registry.cart_price_rule.actions'] : $this->get('coreshop.registry.cart_price_rule.actions')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.cart_price_rule.rule_validation.processor']) ? $this->services['coreshop.cart_price_rule.rule_validation.processor'] : $this->get('coreshop.cart_price_rule.rule_validation.processor')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart.manager' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Manager\CartManager
     */
    protected function getCoreshop_Cart_ManagerService()
    {
        return $this->services['coreshop.cart.manager'] = new \CoreShop\Bundle\OrderBundle\Manager\CartManager(${($_ = isset($this->services['coreshop.repository.cart']) ? $this->services['coreshop.repository.cart'] : $this->get('coreshop.repository.cart')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.cart']) ? $this->services['coreshop.factory.cart'] : $this->get('coreshop.factory.cart')) && false ?: '_'}, ${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.customer']) ? $this->services['coreshop.context.customer'] : $this->get('coreshop.context.customer')) && false ?: '_'}, 'coreshop/carts');
    }

    /**
     * Gets the public 'coreshop.cart.modifier' shared service.
     *
     * @return \CoreShop\Component\Order\Cart\CartModifier
     */
    protected function getCoreshop_Cart_ModifierService()
    {
        return $this->services['coreshop.cart.modifier'] = new \CoreShop\Component\Order\Cart\CartModifier(${($_ = isset($this->services['coreshop.cart.manager']) ? $this->services['coreshop.cart.manager'] : $this->get('coreshop.cart.manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.cart_item']) ? $this->services['coreshop.factory.cart_item'] : $this->get('coreshop.factory.cart_item')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.action.discount_amount' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Rule\Action\DiscountAmountActionProcessor
     */
    protected function getCoreshop_CartPriceRule_Action_DiscountAmountService()
    {
        return $this->services['coreshop.cart_price_rule.action.discount_amount'] = new \CoreShop\Bundle\OrderBundle\Cart\Rule\Action\DiscountAmountActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.action.discount_percent' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Rule\Action\DiscountPercentActionProcessor
     */
    protected function getCoreshop_CartPriceRule_Action_DiscountPercentService()
    {
        return $this->services['coreshop.cart_price_rule.action.discount_percent'] = new \CoreShop\Bundle\OrderBundle\Cart\Rule\Action\DiscountPercentActionProcessor();
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.condition.amount' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Rule\Condition\AmountConditionChecker
     */
    protected function getCoreshop_CartPriceRule_Condition_AmountService()
    {
        return $this->services['coreshop.cart_price_rule.condition.amount'] = new \CoreShop\Bundle\OrderBundle\Cart\Rule\Condition\AmountConditionChecker();
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.condition.categories' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CategoriesConditionChecker
     */
    protected function getCoreshop_CartPriceRule_Condition_CategoriesService()
    {
        return $this->services['coreshop.cart_price_rule.condition.categories'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CategoriesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.condition.nested' shared service.
     *
     * @return \CoreShop\Component\Rule\Condition\NestedConditionChecker
     */
    protected function getCoreshop_CartPriceRule_Condition_NestedService()
    {
        return $this->services['coreshop.cart_price_rule.condition.nested'] = new \CoreShop\Component\Rule\Condition\NestedConditionChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.cart_price_rule.conditions']) ? $this->services['coreshop.registry.cart_price_rule.conditions'] : $this->get('coreshop.registry.cart_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.condition.products' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\ProductsConditionChecker
     */
    protected function getCoreshop_CartPriceRule_Condition_ProductsService()
    {
        return $this->services['coreshop.cart_price_rule.condition.products'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\ProductsConditionChecker();
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.condition.timespan' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Cart\Rule\Condition\TimeSpanConditionChecker
     */
    protected function getCoreshop_CartPriceRule_Condition_TimespanService()
    {
        return $this->services['coreshop.cart_price_rule.condition.timespan'] = new \CoreShop\Bundle\OrderBundle\Cart\Rule\Condition\TimeSpanConditionChecker();
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.conditions.validation.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor
     */
    protected function getCoreshop_CartPriceRule_Conditions_Validation_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.cart_price_rule.conditions']) ? $this->services['coreshop.registry.cart_price_rule.conditions'] : $this->get('coreshop.registry.cart_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.order.processor' shared service.
     *
     * @return \CoreShop\Component\Order\Cart\Rule\CartPriceRuleOrderProcessor
     */
    protected function getCoreshop_CartPriceRule_Order_ProcessorService()
    {
        return $this->services['coreshop.cart_price_rule.order.processor'] = new \CoreShop\Component\Order\Cart\Rule\CartPriceRuleOrderProcessor(${($_ = isset($this->services['coreshop.repository.cart_price_rule_voucher_code']) ? $this->services['coreshop.repository.cart_price_rule_voucher_code'] : $this->get('coreshop.repository.cart_price_rule_voucher_code')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.cart_price_rule.actions']) ? $this->services['coreshop.registry.cart_price_rule.actions'] : $this->get('coreshop.registry.cart_price_rule.actions')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.cart_price_rule_item']) ? $this->services['coreshop.factory.cart_price_rule_item'] : $this->get('coreshop.factory.cart_price_rule_item')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.processor' shared service.
     *
     * @return \CoreShop\Component\Order\Cart\Rule\CartPriceRuleProcessor
     */
    protected function getCoreshop_CartPriceRule_ProcessorService()
    {
        return $this->services['coreshop.cart_price_rule.processor'] = new \CoreShop\Component\Order\Cart\Rule\CartPriceRuleProcessor(${($_ = isset($this->services['coreshop.cart_price_rule.rule_validation.processor']) ? $this->services['coreshop.cart_price_rule.rule_validation.processor'] : $this->get('coreshop.cart_price_rule.rule_validation.processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.cart_price_rule_item']) ? $this->services['coreshop.factory.cart_price_rule_item'] : $this->get('coreshop.factory.cart_price_rule_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.cart_price_rule.actions']) ? $this->services['coreshop.registry.cart_price_rule.actions'] : $this->get('coreshop.registry.cart_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.rule_validation.processor' shared service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor
     */
    protected function getCoreshop_CartPriceRule_RuleValidation_ProcessorService()
    {
        return $this->services['coreshop.cart_price_rule.rule_validation.processor'] = new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.cart_price_rule.conditions']) ? $this->services['coreshop.registry.cart_price_rule.conditions'] : $this->get('coreshop.registry.cart_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.cart_price_rule.un_processor' shared service.
     *
     * @return \CoreShop\Component\Order\Cart\Rule\CartPriceRuleUnProcessor
     */
    protected function getCoreshop_CartPriceRule_UnProcessorService()
    {
        return $this->services['coreshop.cart_price_rule.un_processor'] = new \CoreShop\Component\Order\Cart\Rule\CartPriceRuleUnProcessor(${($_ = isset($this->services['coreshop.registry.cart_price_rule.actions']) ? $this->services['coreshop.registry.cart_price_rule.actions'] : $this->get('coreshop.registry.cart_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_processor.composite' shared service.
     *
     * @return \CoreShop\Component\Order\Processor\CompositeCartProcessor
     */
    protected function getCoreshop_CartProcessor_CompositeService()
    {
        $this->services['coreshop.cart_processor.composite'] = $instance = new \CoreShop\Component\Order\Processor\CompositeCartProcessor();

        $instance->addProcessor(${($_ = isset($this->services['coreshop.cart_processor.items']) ? $this->services['coreshop.cart_processor.items'] : $this->get('coreshop.cart_processor.items')) && false ?: '_'}, 500);
        $instance->addProcessor(${($_ = isset($this->services['coreshop.cart_processor.discount']) ? $this->services['coreshop.cart_processor.discount'] : $this->get('coreshop.cart_processor.discount')) && false ?: '_'}, 450);
        $instance->addProcessor(${($_ = isset($this->services['coreshop.cart_processor.item_taxes']) ? $this->services['coreshop.cart_processor.item_taxes'] : $this->get('coreshop.cart_processor.item_taxes')) && false ?: '_'}, 400);
        $instance->addProcessor(${($_ = isset($this->services['coreshop.cart_processor.taxes']) ? $this->services['coreshop.cart_processor.taxes'] : $this->get('coreshop.cart_processor.taxes')) && false ?: '_'}, 350);
        $instance->addProcessor(${($_ = isset($this->services['coreshop.cart_processor.shipping']) ? $this->services['coreshop.cart_processor.shipping'] : $this->get('coreshop.cart_processor.shipping')) && false ?: '_'}, 300);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.cart_processor.discount' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Processor\CartDiscountProcessor
     */
    protected function getCoreshop_CartProcessor_DiscountService()
    {
        return $this->services['coreshop.cart_processor.discount'] = new \CoreShop\Component\Core\Order\Processor\CartDiscountProcessor(${($_ = isset($this->services['coreshop.cart.discount_calculator.composite']) ? $this->services['coreshop.cart.discount_calculator.composite'] : $this->get('coreshop.cart.discount_calculator.composite')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_processor.item_taxes' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Processor\CartItemTaxProcessor
     */
    protected function getCoreshop_CartProcessor_ItemTaxesService()
    {
        return $this->services['coreshop.cart_processor.item_taxes'] = new \CoreShop\Component\Core\Order\Processor\CartItemTaxProcessor(${($_ = isset($this->services['coreshop.product.tax_factory']) ? $this->services['coreshop.product.tax_factory'] : $this->get('coreshop.product.tax_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.collector.taxes']) ? $this->services['coreshop.collector.taxes'] : $this->get('coreshop.collector.taxes')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_processor.items' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Processor\CartItemProcessor
     */
    protected function getCoreshop_CartProcessor_ItemsService()
    {
        return $this->services['coreshop.cart_processor.items'] = new \CoreShop\Component\Core\Order\Processor\CartItemProcessor(${($_ = isset($this->services['coreshop.product.taxed_price_calculator']) ? $this->services['coreshop.product.taxed_price_calculator'] : $this->get('coreshop.product.taxed_price_calculator')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_processor.shipping' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Processor\CartShippingProcessor
     */
    protected function getCoreshop_CartProcessor_ShippingService()
    {
        return $this->services['coreshop.cart_processor.shipping'] = new \CoreShop\Component\Core\Order\Processor\CartShippingProcessor(${($_ = isset($this->services['coreshop.carrier.price_calculator.taxed']) ? $this->services['coreshop.carrier.price_calculator.taxed'] : $this->get('coreshop.carrier.price_calculator.taxed')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.taxation.factory.cached_tax_calculator']) ? $this->services['coreshop.taxation.factory.cached_tax_calculator'] : $this->get('coreshop.taxation.factory.cached_tax_calculator')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.collector.taxes']) ? $this->services['coreshop.collector.taxes'] : $this->get('coreshop.collector.taxes')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.cart_processor.taxes' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Processor\CartTaxProcessor
     */
    protected function getCoreshop_CartProcessor_TaxesService()
    {
        return $this->services['coreshop.cart_processor.taxes'] = new \CoreShop\Component\Core\Order\Processor\CartTaxProcessor(${($_ = isset($this->services['coreshop.collector.taxes']) ? $this->services['coreshop.collector.taxes'] : $this->get('coreshop.collector.taxes')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.checkout.step.address' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\AddressCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_AddressService()
    {
        return $this->services['coreshop.checkout.step.address'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\AddressCheckoutStep(${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.checkout.step.cart' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\CartCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_CartService()
    {
        return $this->services['coreshop.checkout.step.cart'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\CartCheckoutStep();
    }

    /**
     * Gets the public 'coreshop.checkout.step.customer' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\CustomerCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_CustomerService()
    {
        return $this->services['coreshop.checkout.step.customer'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\CustomerCheckoutStep(${($_ = isset($this->services['coreshop.context.customer']) ? $this->services['coreshop.context.customer'] : $this->get('coreshop.context.customer')) && false ?: '_'}, ${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.customer.registration_service']) ? $this->services['coreshop.customer.registration_service'] : $this->get('coreshop.customer.registration_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.checkout.step.payment' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\PaymentCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_PaymentService()
    {
        return $this->services['coreshop.checkout.step.payment'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\PaymentCheckoutStep(${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.checkout.step.shipping' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\ShippingCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_ShippingService()
    {
        return $this->services['coreshop.checkout.step.shipping'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\ShippingCheckoutStep(${($_ = isset($this->services['coreshop.carrier.cart.store_based_processor']) ? $this->services['coreshop.carrier.cart.store_based_processor'] : $this->get('coreshop.carrier.cart.store_based_processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.carrier.price_calculator.taxed']) ? $this->services['coreshop.carrier.price_calculator.taxed'] : $this->get('coreshop.carrier.price_calculator.taxed')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.shipping.carrier.validator']) ? $this->services['coreshop.shipping.carrier.validator'] : $this->get('coreshop.shipping.carrier.validator')) && false ?: '_'}, ${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.checkout.step.summary' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\Step\SummaryCheckoutStep
     */
    protected function getCoreshop_Checkout_Step_SummaryService()
    {
        return $this->services['coreshop.checkout.step.summary'] = new \CoreShop\Bundle\CoreBundle\Checkout\Step\SummaryCheckoutStep();
    }

    /**
     * Gets the public 'coreshop.checkout_manager.default' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Checkout\CheckoutManager
     */
    protected function getCoreshop_CheckoutManager_DefaultService()
    {
        $this->services['coreshop.checkout_manager.default'] = $instance = new \CoreShop\Bundle\CoreBundle\Checkout\CheckoutManager();

        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.cart']) ? $this->services['coreshop.checkout.step.cart'] : $this->get('coreshop.checkout.step.cart')) && false ?: '_'}, 10);
        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.customer']) ? $this->services['coreshop.checkout.step.customer'] : $this->get('coreshop.checkout.step.customer')) && false ?: '_'}, 20);
        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.address']) ? $this->services['coreshop.checkout.step.address'] : $this->get('coreshop.checkout.step.address')) && false ?: '_'}, 30);
        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.shipping']) ? $this->services['coreshop.checkout.step.shipping'] : $this->get('coreshop.checkout.step.shipping')) && false ?: '_'}, 40);
        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.payment']) ? $this->services['coreshop.checkout.step.payment'] : $this->get('coreshop.checkout.step.payment')) && false ?: '_'}, 50);
        $instance->addCheckoutStep(${($_ = isset($this->services['coreshop.checkout.step.summary']) ? $this->services['coreshop.checkout.step.summary'] : $this->get('coreshop.checkout.step.summary')) && false ?: '_'}, 60);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.collector.taxes' shared service.
     *
     * @return \CoreShop\Component\Taxation\Collector\TaxCollector
     */
    protected function getCoreshop_Collector_TaxesService()
    {
        return $this->services['coreshop.collector.taxes'] = new \CoreShop\Component\Taxation\Collector\TaxCollector(${($_ = isset($this->services['coreshop.repository.tax_rate']) ? $this->services['coreshop.repository.tax_rate'] : $this->get('coreshop.repository.tax_rate')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_item']) ? $this->services['coreshop.factory.tax_item'] : $this->get('coreshop.factory.tax_item')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.commands_provider.database_setup' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Installer\Provider\DatabaseSetupCommandsProvider
     */
    protected function getCoreshop_CommandsProvider_DatabaseSetupService()
    {
        return $this->services['coreshop.commands_provider.database_setup'] = new \CoreShop\Bundle\CoreBundle\Installer\Provider\DatabaseSetupCommandsProvider(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.configuration.service' shared service.
     *
     * @return \CoreShop\Component\Core\Configuration\ConfigurationService
     */
    protected function getCoreshop_Configuration_ServiceService()
    {
        return $this->services['coreshop.configuration.service'] = new \CoreShop\Component\Core\Configuration\ConfigurationService(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.configuration']) ? $this->services['coreshop.repository.configuration'] : $this->get('coreshop.repository.configuration')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.configuration']) ? $this->services['coreshop.factory.configuration'] : $this->get('coreshop.factory.configuration')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.country' shared service.
     *
     * @return \CoreShop\Component\Address\Context\CompositeCountryContext
     */
    protected function getCoreshop_Context_CountryService()
    {
        $this->services['coreshop.context.country'] = $instance = new \CoreShop\Component\Address\Context\CompositeCountryContext();

        $instance->addContext(new \CoreShop\Component\Address\Context\RequestBased\CountryContext(${($_ = isset($this->services['coreshop.context.country.request_based.resolver']) ? $this->services['coreshop.context.country.request_based.resolver'] : $this->get('coreshop.context.country.request_based.resolver')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}));
        $instance->addContext(${($_ = isset($this->services['coreshop.context.country.fixed']) ? $this->services['coreshop.context.country.fixed'] : $this->get('coreshop.context.country.fixed')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.country.fixed' shared service.
     *
     * @return \CoreShop\Component\Address\Context\FixedCountryContext
     */
    protected function getCoreshop_Context_Country_FixedService()
    {
        return $this->services['coreshop.context.country.fixed'] = new \CoreShop\Component\Address\Context\FixedCountryContext();
    }

    /**
     * Gets the public 'coreshop.context.country.request_based.resolver' shared service.
     *
     * @return \CoreShop\Component\Address\Context\RequestBased\CompositeRequestResolver
     */
    protected function getCoreshop_Context_Country_RequestBased_ResolverService()
    {
        $this->services['coreshop.context.country.request_based.resolver'] = $instance = new \CoreShop\Component\Address\Context\RequestBased\CompositeRequestResolver();

        $instance->addResolver(new \CoreShop\Component\Address\Context\RequestBased\GeoLiteBasedRequestResolver(${($_ = isset($this->services['coreshop.repository.country']) ? $this->services['coreshop.repository.country'] : $this->get('coreshop.repository.country')) && false ?: '_'}), 10);
        $instance->addResolver(new \CoreShop\Component\Core\Context\StoreBasedCountryResolver(${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}), 100);
        $instance->addResolver(new \CoreShop\Component\Core\Context\CartBasedCountryResolver(${($_ = isset($this->services['coreshop.cart.manager']) ? $this->services['coreshop.cart.manager'] : $this->get('coreshop.cart.manager')) && false ?: '_'}), 1);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.currency.cached' shared service.
     *
     * @return \CoreShop\Component\Currency\Context\CachedCurrencyContext
     */
    protected function getCoreshop_Context_Currency_CachedService()
    {
        return $this->services['coreshop.context.currency.cached'] = new \CoreShop\Component\Currency\Context\CachedCurrencyContext(${($_ = isset($this->services['coreshop.context.currency.store_aware']) ? $this->services['coreshop.context.currency.store_aware'] : $this->get('coreshop.context.currency.store_aware')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.currency.fixed' shared service.
     *
     * @return \CoreShop\Component\Currency\Context\FixedCurrencyContext
     */
    protected function getCoreshop_Context_Currency_FixedService()
    {
        return $this->services['coreshop.context.currency.fixed'] = new \CoreShop\Component\Currency\Context\FixedCurrencyContext();
    }

    /**
     * Gets the public 'coreshop.context.currency.storage_based' shared service.
     *
     * @return \CoreShop\Component\Core\Currency\Context\StorageBasedCurrencyContext
     */
    protected function getCoreshop_Context_Currency_StorageBasedService()
    {
        return $this->services['coreshop.context.currency.storage_based'] = new \CoreShop\Component\Core\Currency\Context\StorageBasedCurrencyContext(${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.storage.currency']) ? $this->services['coreshop.storage.currency'] : $this->get('coreshop.storage.currency')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.currency.store_aware' shared service.
     *
     * @return \CoreShop\Component\Core\Currency\Context\StoreAwareCurrencyContext
     */
    protected function getCoreshop_Context_Currency_StoreAwareService()
    {
        $a = new \CoreShop\Component\Currency\Context\CompositeCurrencyContext();
        $a->addContext(${($_ = isset($this->services['coreshop.context.currency.fixed']) ? $this->services['coreshop.context.currency.fixed'] : $this->get('coreshop.context.currency.fixed')) && false ?: '_'});
        $a->addContext(${($_ = isset($this->services['coreshop.context.currency.storage_based']) ? $this->services['coreshop.context.currency.storage_based'] : $this->get('coreshop.context.currency.storage_based')) && false ?: '_'});

        return $this->services['coreshop.context.currency.store_aware'] = new \CoreShop\Component\Core\Currency\Context\StoreAwareCurrencyContext($a, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.customer' shared service.
     *
     * @return \CoreShop\Component\Customer\Context\CompositeCustomerContext
     */
    protected function getCoreshop_Context_CustomerService()
    {
        $this->services['coreshop.context.customer'] = $instance = new \CoreShop\Component\Customer\Context\CompositeCustomerContext();

        $instance->addContext(new \CoreShop\Component\Customer\Context\RequestBased\CustomerContext(${($_ = isset($this->services['coreshop.context.customer.request_based.resolver']) ? $this->services['coreshop.context.customer.request_based.resolver'] : $this->get('coreshop.context.customer.request_based.resolver')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}));
        $instance->addContext(${($_ = isset($this->services['coreshop.context.customer.fixed']) ? $this->services['coreshop.context.customer.fixed'] : $this->get('coreshop.context.customer.fixed')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.customer.fixed' shared service.
     *
     * @return \CoreShop\Component\Customer\Context\FixedCustomerContext
     */
    protected function getCoreshop_Context_Customer_FixedService()
    {
        return $this->services['coreshop.context.customer.fixed'] = new \CoreShop\Component\Customer\Context\FixedCustomerContext();
    }

    /**
     * Gets the public 'coreshop.context.customer.request_based.resolver' shared service.
     *
     * @return \CoreShop\Component\Customer\Context\RequestBased\CompositeRequestResolver
     */
    protected function getCoreshop_Context_Customer_RequestBased_ResolverService()
    {
        $this->services['coreshop.context.customer.request_based.resolver'] = $instance = new \CoreShop\Component\Customer\Context\RequestBased\CompositeRequestResolver();

        $instance->addResolver(new \CoreShop\Component\Customer\Context\RequestBased\TokenBasedRequestResolver(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}));

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.locale' shared service.
     *
     * @return \CoreShop\Component\Locale\Context\CompositeLocaleContext
     */
    protected function getCoreshop_Context_LocaleService()
    {
        $this->services['coreshop.context.locale'] = $instance = new \CoreShop\Component\Locale\Context\CompositeLocaleContext();

        $instance->addContext(${($_ = isset($this->services['coreshop.context.locale.pimcore']) ? $this->services['coreshop.context.locale.pimcore'] : $this->get('coreshop.context.locale.pimcore')) && false ?: '_'});
        $instance->addContext(${($_ = isset($this->services['coreshop.context.locale.fixed']) ? $this->services['coreshop.context.locale.fixed'] : $this->get('coreshop.context.locale.fixed')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.locale.fixed' shared service.
     *
     * @return \CoreShop\Component\Locale\Context\FixedLocaleContext
     */
    protected function getCoreshop_Context_Locale_FixedService()
    {
        return $this->services['coreshop.context.locale.fixed'] = new \CoreShop\Component\Locale\Context\FixedLocaleContext();
    }

    /**
     * Gets the public 'coreshop.context.locale.pimcore' shared service.
     *
     * @return \CoreShop\Component\Locale\Context\PimcoreLocaleContext
     */
    protected function getCoreshop_Context_Locale_PimcoreService()
    {
        return $this->services['coreshop.context.locale.pimcore'] = new \CoreShop\Component\Locale\Context\PimcoreLocaleContext(${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.shopper' shared service.
     *
     * @return \CoreShop\Component\Core\Context\ShopperContext
     */
    public function getCoreshop_Context_ShopperService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['coreshop.context.shopper'] = CoreShopComponentCoreContextShopperContext_0000000051557c49000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCoreshop_Context_ShopperService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \CoreShop\Component\Core\Context\ShopperContext(${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.locale']) ? $this->services['coreshop.context.locale'] : $this->get('coreshop.context.locale')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.country']) ? $this->services['coreshop.context.country'] : $this->get('coreshop.context.country')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.customer']) ? $this->services['coreshop.context.customer'] : $this->get('coreshop.context.customer')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.context.store' shared service.
     *
     * @return \CoreShop\Component\Store\Context\CompositeStoreContext
     */
    protected function getCoreshop_Context_StoreService()
    {
        $this->services['coreshop.context.store'] = $instance = new \CoreShop\Component\Store\Context\CompositeStoreContext();

        $instance->addContext(${($_ = isset($this->services['coreshop.context.store.request_based.cached']) ? $this->services['coreshop.context.store.request_based.cached'] : $this->get('coreshop.context.store.request_based.cached')) && false ?: '_'}, 1);
        $instance->addContext(${($_ = isset($this->services['coreshop.context.store.fixed']) ? $this->services['coreshop.context.store.fixed'] : $this->get('coreshop.context.store.fixed')) && false ?: '_'}, 2);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.context.store.fixed' shared service.
     *
     * @return \CoreShop\Component\Store\Context\FixedStoreContext
     */
    protected function getCoreshop_Context_Store_FixedService()
    {
        return $this->services['coreshop.context.store.fixed'] = new \CoreShop\Component\Store\Context\FixedStoreContext();
    }

    /**
     * Gets the public 'coreshop.context.store.request_based.cached' shared service.
     *
     * @return \CoreShop\Component\Store\Context\RequestBased\CachedStoreContext
     */
    protected function getCoreshop_Context_Store_RequestBased_CachedService()
    {
        return $this->services['coreshop.context.store.request_based.cached'] = new \CoreShop\Component\Store\Context\RequestBased\CachedStoreContext(new \CoreShop\Component\Store\Context\RequestBased\StoreContext(${($_ = isset($this->services['coreshop.context.store.request_based.resolver']) ? $this->services['coreshop.context.store.request_based.resolver'] : $this->get('coreshop.context.store.request_based.resolver')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.context.store.request_based.resolver' shared service.
     *
     * @return \CoreShop\Component\Store\Context\RequestBased\CompositeRequestResolver
     */
    protected function getCoreshop_Context_Store_RequestBased_ResolverService()
    {
        $a = ${($_ = isset($this->services['coreshop.repository.store']) ? $this->services['coreshop.repository.store'] : $this->get('coreshop.repository.store')) && false ?: '_'};

        $this->services['coreshop.context.store.request_based.resolver'] = $instance = new \CoreShop\Component\Store\Context\RequestBased\CompositeRequestResolver();

        $instance->addResolver(new \CoreShop\Component\Store\Context\RequestBased\PimcoreAdminSiteBasedRequestResolver($a, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Model\Document\Service']) ? $this->services['Pimcore\Model\Document\Service'] : $this->get('Pimcore\Model\Document\Service')) && false ?: '_'}), 200);
        $instance->addResolver(new \CoreShop\Component\Store\Context\RequestBased\SiteBasedRequestResolver($a), 100);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.core.key_transformer' shared service.
     *
     * @return \CoreShop\Component\Core\Transformer\PimcoreKeyTransformer
     */
    protected function getCoreshop_Core_KeyTransformerService()
    {
        return $this->services['coreshop.core.key_transformer'] = new \CoreShop\Component\Core\Transformer\PimcoreKeyTransformer();
    }

    /**
     * Gets the public 'coreshop.core.order.transformer.cart_to_order' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Order\Transformer\CartToSaleTransformer
     */
    protected function getCoreshop_Core_Order_Transformer_CartToOrderService()
    {
        $a = ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'};

        return $this->services['coreshop.core.order.transformer.cart_to_order'] = new \CoreShop\Bundle\CoreBundle\Order\Transformer\CartToSaleTransformer(new \CoreShop\Bundle\OrderBundle\Transformer\CartToOrderTransformer(${($_ = isset($this->services['coreshop.order.transformer.cart_item_to_order_item']) ? $this->services['coreshop.order.transformer.cart_item_to_order_item'] : $this->get('coreshop.order.transformer.cart_item_to_order_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.core.key_transformer']) ? $this->services['coreshop.core.key_transformer'] : $this->get('coreshop.core.key_transformer')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.order.number_generator.prefix_suffix']) ? $this->services['coreshop.order.number_generator.prefix_suffix'] : $this->get('coreshop.order.number_generator.prefix_suffix')) && false ?: '_'}, 'coreshop/orders', ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.locale']) ? $this->services['coreshop.context.locale'] : $this->get('coreshop.context.locale')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order_item']) ? $this->services['coreshop.factory.order_item'] : $this->get('coreshop.factory.order_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.cart_price_rule.order.processor']) ? $this->services['coreshop.cart_price_rule.order.processor'] : $this->get('coreshop.cart_price_rule.order.processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, $a, ${($_ = isset($this->services['coreshop.resource.object_cloner']) ? $this->services['coreshop.resource.object_cloner'] : $this->get('coreshop.resource.object_cloner')) && false ?: '_'}), $a);
    }

    /**
     * Gets the public 'coreshop.core.order.transformer.cart_to_quote' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Order\Transformer\CartToSaleTransformer
     */
    protected function getCoreshop_Core_Order_Transformer_CartToQuoteService()
    {
        $a = ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'};

        return $this->services['coreshop.core.order.transformer.cart_to_quote'] = new \CoreShop\Bundle\CoreBundle\Order\Transformer\CartToSaleTransformer(new \CoreShop\Bundle\OrderBundle\Transformer\CartToQuoteTransformer(${($_ = isset($this->services['coreshop.order.transformer.cart_item_to_quote_item']) ? $this->services['coreshop.order.transformer.cart_item_to_quote_item'] : $this->get('coreshop.order.transformer.cart_item_to_quote_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.core.key_transformer']) ? $this->services['coreshop.core.key_transformer'] : $this->get('coreshop.core.key_transformer')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.quote.number_generator.prefix_suffix']) ? $this->services['coreshop.quote.number_generator.prefix_suffix'] : $this->get('coreshop.quote.number_generator.prefix_suffix')) && false ?: '_'}, 'coreshop/quotes', ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.locale']) ? $this->services['coreshop.context.locale'] : $this->get('coreshop.context.locale')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.quote_item']) ? $this->services['coreshop.factory.quote_item'] : $this->get('coreshop.factory.quote_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.cart_price_rule.order.processor']) ? $this->services['coreshop.cart_price_rule.order.processor'] : $this->get('coreshop.cart_price_rule.order.processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, $a, ${($_ = isset($this->services['coreshop.resource.object_cloner']) ? $this->services['coreshop.resource.object_cloner'] : $this->get('coreshop.resource.object_cloner')) && false ?: '_'}), $a);
    }

    /**
     * Gets the public 'coreshop.core.product.price_calculator.store_price' shared service.
     *
     * @return \CoreShop\Component\Core\Product\Calculator\StoreProductPriceCalculator
     */
    protected function getCoreshop_Core_Product_PriceCalculator_StorePriceService()
    {
        return $this->services['coreshop.core.product.price_calculator.store_price'] = new \CoreShop\Component\Core\Product\Calculator\StoreProductPriceCalculator(${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.country_collector' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Collector\CountryCollector
     */
    protected function getCoreshop_CountryCollectorService()
    {
        return $this->services['coreshop.country_collector'] = new \CoreShop\Bundle\AddressBundle\Collector\CountryCollector(${($_ = isset($this->services['coreshop.context.country']) ? $this->services['coreshop.context.country'] : $this->get('coreshop.context.country')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'coreshop.currency_collector' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Collector\CurrencyCollector
     */
    protected function getCoreshop_CurrencyCollectorService()
    {
        return $this->services['coreshop.currency_collector'] = new \CoreShop\Bundle\CoreBundle\Collector\CurrencyCollector(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'coreshop.currency_converter' shared service.
     *
     * @return \CoreShop\Component\Currency\Converter\CurrencyConverter
     */
    protected function getCoreshop_CurrencyConverterService()
    {
        return $this->services['coreshop.currency_converter'] = new \CoreShop\Component\Currency\Converter\CurrencyConverter(${($_ = isset($this->services['coreshop.repository.exchange_rate']) ? $this->services['coreshop.repository.exchange_rate'] : $this->get('coreshop.repository.exchange_rate')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.customer.registration_service' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Customer\RegistrationService
     */
    protected function getCoreshop_Customer_RegistrationServiceService()
    {
        return $this->services['coreshop.customer.registration_service'] = new \CoreShop\Bundle\CoreBundle\Customer\RegistrationService(${($_ = isset($this->services['coreshop.repository.customer']) ? $this->services['coreshop.repository.customer'] : $this->get('coreshop.repository.customer')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, 'coreshop/customers', 'coreshop/guests', 'addresses');
    }

    /**
     * Gets the public 'coreshop.doctrine.cache.pimcore' shared service.
     *
     * @return \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache
     */
    protected function getCoreshop_Doctrine_Cache_PimcoreService()
    {
        return $this->services['coreshop.doctrine.cache.pimcore'] = new \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache();
    }

    /**
     * Gets the public 'coreshop.event_listener.cart' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\EventListener\CartRecalculationUpdate
     */
    protected function getCoreshop_EventListener_CartService()
    {
        return $this->services['coreshop.event_listener.cart'] = new \CoreShop\Bundle\OrderBundle\EventListener\CartRecalculationUpdate(${($_ = isset($this->services['coreshop.cart_processor.composite']) ? $this->services['coreshop.cart_processor.composite'] : $this->get('coreshop.cart_processor.composite')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.event_listener.clear_cached_rules' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\EventListener\ClearCachedPriceRulesListener
     */
    protected function getCoreshop_EventListener_ClearCachedRulesService()
    {
        return $this->services['coreshop.event_listener.clear_cached_rules'] = new \CoreShop\Bundle\ProductBundle\EventListener\ClearCachedPriceRulesListener();
    }

    /**
     * Gets the public 'coreshop.event_listener.price_rule_update' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\PriceRuleUpdateEventListener
     */
    protected function getCoreshop_EventListener_PriceRuleUpdateService()
    {
        return $this->services['coreshop.event_listener.price_rule_update'] = new \CoreShop\Bundle\CoreBundle\EventListener\PriceRuleUpdateEventListener(${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.event_listener.product_update' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\ProductUpdateEventListener
     */
    protected function getCoreshop_EventListener_ProductUpdateService()
    {
        return $this->services['coreshop.event_listener.product_update'] = new \CoreShop\Bundle\CoreBundle\EventListener\ProductUpdateEventListener(${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.event_listener.update_cart' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\RequestCartRecalculation
     */
    protected function getCoreshop_EventListener_UpdateCartService()
    {
        return $this->services['coreshop.event_listener.update_cart'] = new \CoreShop\Bundle\CoreBundle\EventListener\RequestCartRecalculation(${($_ = isset($this->services['coreshop.cart.manager']) ? $this->services['coreshop.cart.manager'] : $this->get('coreshop.cart.manager')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.event_subscriber.orm_mapped_super_class' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber
     */
    protected function getCoreshop_EventSubscriber_OrmMappedSuperClassService()
    {
        return $this->services['coreshop.event_subscriber.orm_mapped_super_class'] = new \CoreShop\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.event_subscriber.orm_repository_class' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber
     */
    protected function getCoreshop_EventSubscriber_OrmRepositoryClassService()
    {
        return $this->services['coreshop.event_subscriber.orm_repository_class'] = new \CoreShop\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.address' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_AddressService()
    {
        return $this->services['coreshop.factory.address'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopAddress');
    }

    /**
     * Gets the public 'coreshop.factory.carrier' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_CarrierService()
    {
        return $this->services['coreshop.factory.carrier'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\Carrier');
    }

    /**
     * Gets the public 'coreshop.factory.cart' shared service.
     *
     * @return \CoreShop\Component\Order\Factory\CartFactory
     */
    protected function getCoreshop_Factory_CartService()
    {
        return $this->services['coreshop.factory.cart'] = new \CoreShop\Component\Order\Factory\CartFactory('Pimcore\\Model\\DataObject\\CoreShopCart', ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.cart_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_CartItemService()
    {
        return $this->services['coreshop.factory.cart_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopCartItem');
    }

    /**
     * Gets the public 'coreshop.factory.cart_price_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_CartPriceRuleService()
    {
        return $this->services['coreshop.factory.cart_price_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Order\\Model\\CartPriceRule');
    }

    /**
     * Gets the public 'coreshop.factory.cart_price_rule_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_CartPriceRuleItemService()
    {
        return $this->services['coreshop.factory.cart_price_rule_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopProposalCartPriceRuleItem');
    }

    /**
     * Gets the public 'coreshop.factory.cart_price_rule_voucher_code' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_CartPriceRuleVoucherCodeService()
    {
        return $this->services['coreshop.factory.cart_price_rule_voucher_code'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode');
    }

    /**
     * Gets the public 'coreshop.factory.category' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_CategoryService()
    {
        return $this->services['coreshop.factory.category'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopCategory');
    }

    /**
     * Gets the public 'coreshop.factory.configuration' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ConfigurationService()
    {
        return $this->services['coreshop.factory.configuration'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\Configuration');
    }

    /**
     * Gets the public 'coreshop.factory.country' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\TranslatableFactory
     */
    protected function getCoreshop_Factory_CountryService()
    {
        return $this->services['coreshop.factory.country'] = new \CoreShop\Component\Resource\Factory\TranslatableFactory(new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\Country'), ${($_ = isset($this->services['coreshop.translation_locale_provider.pimcore']) ? $this->services['coreshop.translation_locale_provider.pimcore'] : $this->get('coreshop.translation_locale_provider.pimcore')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.country_translation' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_CountryTranslationService()
    {
        return $this->services['coreshop.factory.country_translation'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Address\\Model\\CountryTranslation');
    }

    /**
     * Gets the public 'coreshop.factory.currency' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_CurrencyService()
    {
        return $this->services['coreshop.factory.currency'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\Currency');
    }

    /**
     * Gets the public 'coreshop.factory.customer' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_CustomerService()
    {
        return $this->services['coreshop.factory.customer'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopCustomer');
    }

    /**
     * Gets the public 'coreshop.factory.customer_group' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_CustomerGroupService()
    {
        return $this->services['coreshop.factory.customer_group'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopCustomerGroup');
    }

    /**
     * Gets the public 'coreshop.factory.exchange_rate' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ExchangeRateService()
    {
        return $this->services['coreshop.factory.exchange_rate'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Currency\\Model\\ExchangeRate');
    }

    /**
     * Gets the public 'coreshop.factory.filter' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_FilterService()
    {
        return $this->services['coreshop.factory.filter'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Index\\Model\\Filter');
    }

    /**
     * Gets the public 'coreshop.factory.filter.list' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Factory\FilteredListingFactory
     */
    protected function getCoreshop_Factory_Filter_ListService()
    {
        return $this->services['coreshop.factory.filter.list'] = new \CoreShop\Bundle\IndexBundle\Factory\FilteredListingFactory(${($_ = isset($this->services['coreshop.factory.index.list']) ? $this->services['coreshop.factory.index.list'] : $this->get('coreshop.factory.index.list')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.filter.processor']) ? $this->services['coreshop.filter.processor'] : $this->get('coreshop.filter.processor')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.filter_condition' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_FilterConditionService()
    {
        return $this->services['coreshop.factory.filter_condition'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Index\\Model\\FilterCondition');
    }

    /**
     * Gets the public 'coreshop.factory.gateway_config' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_GatewayConfigService()
    {
        return $this->services['coreshop.factory.gateway_config'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the public 'coreshop.factory.index' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_IndexService()
    {
        return $this->services['coreshop.factory.index'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Index\\Model\\Index');
    }

    /**
     * Gets the public 'coreshop.factory.index.list' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Factory\ListingFactory
     */
    protected function getCoreshop_Factory_Index_ListService()
    {
        return $this->services['coreshop.factory.index.list'] = new \CoreShop\Bundle\IndexBundle\Factory\ListingFactory(${($_ = isset($this->services['coreshop.registry.index.worker']) ? $this->services['coreshop.registry.index.worker'] : $this->get('coreshop.registry.index.worker')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.index_column' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_IndexColumnService()
    {
        return $this->services['coreshop.factory.index_column'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Index\\Model\\IndexColumn');
    }

    /**
     * Gets the public 'coreshop.factory.manufacturer' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_ManufacturerService()
    {
        return $this->services['coreshop.factory.manufacturer'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopManufacturer');
    }

    /**
     * Gets the public 'coreshop.factory.notification_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_NotificationRuleService()
    {
        return $this->services['coreshop.factory.notification_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Notification\\Model\\NotificationRule');
    }

    /**
     * Gets the public 'coreshop.factory.order' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderService()
    {
        return $this->services['coreshop.factory.order'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrder');
    }

    /**
     * Gets the public 'coreshop.factory.order_invoice' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderInvoiceService()
    {
        return $this->services['coreshop.factory.order_invoice'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrderInvoice');
    }

    /**
     * Gets the public 'coreshop.factory.order_invoice_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderInvoiceItemService()
    {
        return $this->services['coreshop.factory.order_invoice_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrderInvoiceItem');
    }

    /**
     * Gets the public 'coreshop.factory.order_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderItemService()
    {
        return $this->services['coreshop.factory.order_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrderItem');
    }

    /**
     * Gets the public 'coreshop.factory.order_shipment' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderShipmentService()
    {
        return $this->services['coreshop.factory.order_shipment'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrderShipment');
    }

    /**
     * Gets the public 'coreshop.factory.order_shipment_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_OrderShipmentItemService()
    {
        return $this->services['coreshop.factory.order_shipment_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopOrderShipmentItem');
    }

    /**
     * Gets the public 'coreshop.factory.payment' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_PaymentService()
    {
        return $this->services['coreshop.factory.payment'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Payment\\Model\\Payment');
    }

    /**
     * Gets the public 'coreshop.factory.payment_provider' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\TranslatableFactory
     */
    protected function getCoreshop_Factory_PaymentProviderService()
    {
        return $this->services['coreshop.factory.payment_provider'] = new \CoreShop\Component\Resource\Factory\TranslatableFactory(new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\PaymentProvider'), ${($_ = isset($this->services['coreshop.translation_locale_provider.pimcore']) ? $this->services['coreshop.translation_locale_provider.pimcore'] : $this->get('coreshop.translation_locale_provider.pimcore')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.payment_provider_translation' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_PaymentProviderTranslationService()
    {
        return $this->services['coreshop.factory.payment_provider_translation'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation');
    }

    /**
     * Gets the public 'coreshop.factory.payment_security_token' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_PaymentSecurityTokenService()
    {
        return $this->services['coreshop.factory.payment_security_token'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the public 'coreshop.factory.product' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_ProductService()
    {
        return $this->services['coreshop.factory.product'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopProduct');
    }

    /**
     * Gets the public 'coreshop.factory.product_price_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ProductPriceRuleService()
    {
        return $this->services['coreshop.factory.product_price_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Product\\Model\\ProductPriceRule');
    }

    /**
     * Gets the public 'coreshop.factory.product_specific_price_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ProductSpecificPriceRuleService()
    {
        return $this->services['coreshop.factory.product_specific_price_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule');
    }

    /**
     * Gets the public 'coreshop.factory.quote' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_QuoteService()
    {
        return $this->services['coreshop.factory.quote'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopQuote');
    }

    /**
     * Gets the public 'coreshop.factory.quote_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_QuoteItemService()
    {
        return $this->services['coreshop.factory.quote_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\CoreShopQuoteItem');
    }

    /**
     * Gets the public 'coreshop.factory.rule_action' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_RuleActionService()
    {
        return $this->services['coreshop.factory.rule_action'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Rule\\Model\\Action');
    }

    /**
     * Gets the public 'coreshop.factory.rule_condition' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_RuleConditionService()
    {
        return $this->services['coreshop.factory.rule_condition'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Rule\\Model\\Condition');
    }

    /**
     * Gets the public 'coreshop.factory.sequence' shared service.
     *
     * @return \CoreShop\Component\Sequence\Factory\SequenceFactory
     */
    protected function getCoreshop_Factory_SequenceService()
    {
        return $this->services['coreshop.factory.sequence'] = new \CoreShop\Component\Sequence\Factory\SequenceFactory('CoreShop\\Component\\Sequence\\Model\\Sequence');
    }

    /**
     * Gets the public 'coreshop.factory.shipping_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ShippingRuleService()
    {
        return $this->services['coreshop.factory.shipping_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Shipping\\Model\\ShippingRule');
    }

    /**
     * Gets the public 'coreshop.factory.shipping_rule_group' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ShippingRuleGroupService()
    {
        return $this->services['coreshop.factory.shipping_rule_group'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup');
    }

    /**
     * Gets the public 'coreshop.factory.state' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\TranslatableFactory
     */
    protected function getCoreshop_Factory_StateService()
    {
        return $this->services['coreshop.factory.state'] = new \CoreShop\Component\Resource\Factory\TranslatableFactory(new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Address\\Model\\State'), ${($_ = isset($this->services['coreshop.translation_locale_provider.pimcore']) ? $this->services['coreshop.translation_locale_provider.pimcore'] : $this->get('coreshop.translation_locale_provider.pimcore')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.state_translation' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_StateTranslationService()
    {
        return $this->services['coreshop.factory.state_translation'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Address\\Model\\StateTranslation');
    }

    /**
     * Gets the public 'coreshop.factory.store' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_StoreService()
    {
        return $this->services['coreshop.factory.store'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\Store');
    }

    /**
     * Gets the public 'coreshop.factory.tax_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\PimcoreFactory
     */
    protected function getCoreshop_Factory_TaxItemService()
    {
        return $this->services['coreshop.factory.tax_item'] = new \CoreShop\Component\Resource\Factory\PimcoreFactory('Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopTaxItem');
    }

    /**
     * Gets the public 'coreshop.factory.tax_rate' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\TranslatableFactory
     */
    protected function getCoreshop_Factory_TaxRateService()
    {
        return $this->services['coreshop.factory.tax_rate'] = new \CoreShop\Component\Resource\Factory\TranslatableFactory(new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Taxation\\Model\\TaxRate'), ${($_ = isset($this->services['coreshop.translation_locale_provider.pimcore']) ? $this->services['coreshop.translation_locale_provider.pimcore'] : $this->get('coreshop.translation_locale_provider.pimcore')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.factory.tax_rate_translation' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_TaxRateTranslationService()
    {
        return $this->services['coreshop.factory.tax_rate_translation'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation');
    }

    /**
     * Gets the public 'coreshop.factory.tax_rule' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_TaxRuleService()
    {
        return $this->services['coreshop.factory.tax_rule'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\TaxRule');
    }

    /**
     * Gets the public 'coreshop.factory.tax_rule_group' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_TaxRuleGroupService()
    {
        return $this->services['coreshop.factory.tax_rule_group'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Core\\Model\\TaxRuleGroup');
    }

    /**
     * Gets the public 'coreshop.factory.wishlist' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_WishlistService()
    {
        return $this->services['coreshop.factory.wishlist'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\StorageList\\Model\\StorageList');
    }

    /**
     * Gets the public 'coreshop.factory.wishlist_item' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_WishlistItemService()
    {
        return $this->services['coreshop.factory.wishlist_item'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\StorageList\\Model\\StorageListItem');
    }

    /**
     * Gets the public 'coreshop.factory.zone' shared service.
     *
     * @return \CoreShop\Component\Resource\Factory\Factory
     */
    protected function getCoreshop_Factory_ZoneService()
    {
        return $this->services['coreshop.factory.zone'] = new \CoreShop\Component\Resource\Factory\Factory('CoreShop\\Component\\Address\\Model\\Zone');
    }

    /**
     * Gets the public 'coreshop.filter.condition_type.boolean' shared service.
     *
     * @return \CoreShop\Component\Index\Filter\BooleanFilterConditionProcessor
     */
    protected function getCoreshop_Filter_ConditionType_BooleanService()
    {
        return $this->services['coreshop.filter.condition_type.boolean'] = new \CoreShop\Component\Index\Filter\BooleanFilterConditionProcessor();
    }

    /**
     * Gets the public 'coreshop.filter.condition_type.multiselect' shared service.
     *
     * @return \CoreShop\Component\Index\Filter\MultiselectFilterConditionProcessor
     */
    protected function getCoreshop_Filter_ConditionType_MultiselectService()
    {
        return $this->services['coreshop.filter.condition_type.multiselect'] = new \CoreShop\Component\Index\Filter\MultiselectFilterConditionProcessor();
    }

    /**
     * Gets the public 'coreshop.filter.condition_type.range' shared service.
     *
     * @return \CoreShop\Component\Index\Filter\RangeFilterConditionProcessor
     */
    protected function getCoreshop_Filter_ConditionType_RangeService()
    {
        return $this->services['coreshop.filter.condition_type.range'] = new \CoreShop\Component\Index\Filter\RangeFilterConditionProcessor();
    }

    /**
     * Gets the public 'coreshop.filter.condition_type.select' shared service.
     *
     * @return \CoreShop\Component\Index\Filter\SelectFilterConditionProcessor
     */
    protected function getCoreshop_Filter_ConditionType_SelectService()
    {
        return $this->services['coreshop.filter.condition_type.select'] = new \CoreShop\Component\Index\Filter\SelectFilterConditionProcessor();
    }

    /**
     * Gets the public 'coreshop.filter.processor' shared service.
     *
     * @return \CoreShop\Component\Index\Filter\FilterProcessor
     */
    protected function getCoreshop_Filter_ProcessorService()
    {
        return $this->services['coreshop.filter.processor'] = new \CoreShop\Component\Index\Filter\FilterProcessor(${($_ = isset($this->services['coreshop.registry.filter.condition_types']) ? $this->services['coreshop.registry.filter.condition_types'] : $this->get('coreshop.registry.filter.condition_types')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.fixture.data.executor' shared service.
     *
     * @return \CoreShop\Bundle\FixtureBundle\Fixture\DataFixturesExecutor
     */
    protected function getCoreshop_Fixture_Data_ExecutorService()
    {
        return $this->services['coreshop.fixture.data.executor'] = new \CoreShop\Bundle\FixtureBundle\Fixture\DataFixturesExecutor(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.fixture.data.loader' shared service.
     *
     * @return \CoreShop\Bundle\FixtureBundle\Fixture\Loader\DataFixturesLoader
     */
    protected function getCoreshop_Fixture_Data_LoaderService()
    {
        return $this->services['coreshop.fixture.data.loader'] = new \CoreShop\Bundle\FixtureBundle\Fixture\Loader\DataFixturesLoader(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, $this);
    }

    /**
     * Gets the public 'coreshop.form.cart_price_rule.type.rule_action.collection' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionCollectionType
     */
    protected function getCoreshop_Form_CartPriceRule_Type_RuleAction_CollectionService()
    {
        return $this->services['coreshop.form.cart_price_rule.type.rule_action.collection'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionCollectionType(${($_ = isset($this->services['coreshop.registry.cart_price_rule.actions']) ? $this->services['coreshop.registry.cart_price_rule.actions'] : $this->get('coreshop.registry.cart_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.cart_price_rule.type.rule_action_choice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionChoiceType
     */
    protected function getCoreshop_Form_CartPriceRule_Type_RuleActionChoiceService()
    {
        return $this->services['coreshop.form.cart_price_rule.type.rule_action_choice'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionChoiceType(array('discountAmount' => 'discountAmount', 'discountPercent' => 'discountPercent', 'freeShipping' => 'freeShipping', 'giftProduct' => 'giftProduct'));
    }

    /**
     * Gets the public 'coreshop.form.cart_price_rule.type.rule_condition.collection' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionCollectionType
     */
    protected function getCoreshop_Form_CartPriceRule_Type_RuleCondition_CollectionService()
    {
        return $this->services['coreshop.form.cart_price_rule.type.rule_condition.collection'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionCollectionType(${($_ = isset($this->services['coreshop.registry.cart_price_rule.conditions']) ? $this->services['coreshop.registry.cart_price_rule.conditions'] : $this->get('coreshop.registry.cart_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.cart_price_rule.type.rule_condition_choice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionChoiceType
     */
    protected function getCoreshop_Form_CartPriceRule_Type_RuleConditionChoiceService()
    {
        return $this->services['coreshop.form.cart_price_rule.type.rule_condition_choice'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionChoiceType(array('nested' => 'nested', 'timespan' => 'timespan', 'amount' => 'amount', 'customers' => 'customers', 'customerGroups' => 'customerGroups', 'countries' => 'countries', 'zones' => 'zones', 'stores' => 'stores', 'currencies' => 'currencies', 'carriers' => 'carriers', 'products' => 'products', 'categories' => 'categories'));
    }

    /**
     * Gets the public 'coreshop.form.cart_rule.type.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionType
     */
    protected function getCoreshop_Form_CartRule_Type_RuleConditionService()
    {
        return $this->services['coreshop.form.cart_rule.type.rule_condition'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleConditionType('CoreShop\\Component\\Rule\\Model\\Condition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.cart_price_rule.conditions']) ? $this->services['coreshop.form_registry.cart_price_rule.conditions'] : $this->get('coreshop.form_registry.cart_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.extension.type.carrier' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\CarrierTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_CarrierService()
    {
        return $this->services['coreshop.form.extension.type.carrier'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\CarrierTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.country' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\CountryTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_CountryService()
    {
        return $this->services['coreshop.form.extension.type.country'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\CountryTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.order_shipment_creation' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\OrderShipmentCreationTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_OrderShipmentCreationService()
    {
        return $this->services['coreshop.form.extension.type.order_shipment_creation'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\OrderShipmentCreationTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.payment_provider' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\PaymentProviderTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_PaymentProviderService()
    {
        return $this->services['coreshop.form.extension.type.payment_provider'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\PaymentProviderTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.store' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\StoreTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_StoreService()
    {
        return $this->services['coreshop.form.extension.type.store'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\StoreTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.tax_rule' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\TaxRuleTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_TaxRuleService()
    {
        return $this->services['coreshop.form.extension.type.tax_rule'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\TaxRuleTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.extension.type.tax_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Extension\TaxRuleGroupTypeExtension
     */
    protected function getCoreshop_Form_Extension_Type_TaxRuleGroupService()
    {
        return $this->services['coreshop.form.extension.type.tax_rule_group'] = new \CoreShop\Bundle\CoreBundle\Form\Extension\TaxRuleGroupTypeExtension();
    }

    /**
     * Gets the public 'coreshop.form.notification_rule.type.rule_action.collection' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionCollectionType
     */
    protected function getCoreshop_Form_NotificationRule_Type_RuleAction_CollectionService()
    {
        return $this->services['coreshop.form.notification_rule.type.rule_action.collection'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionCollectionType(${($_ = isset($this->services['coreshop.registry.notification_rule.actions']) ? $this->services['coreshop.registry.notification_rule.actions'] : $this->get('coreshop.registry.notification_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.notification_rule.type.rule_action_choice' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionChoiceType
     */
    protected function getCoreshop_Form_NotificationRule_Type_RuleActionChoiceService()
    {
        return $this->services['coreshop.form.notification_rule.type.rule_action_choice'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionChoiceType(array('order.orderMail' => 'order.orderMail', 'invoice.orderMail' => 'invoice.orderMail', 'shipment.orderMail' => 'shipment.orderMail', 'order.mail' => 'order.mail', 'invoice.mail' => 'invoice.mail', 'shipment.mail' => 'shipment.mail', 'user.mail' => 'user.mail', 'payment.mail' => 'payment.mail', 'quote.mail' => 'quote.mail'));
    }

    /**
     * Gets the public 'coreshop.form.notification_rule.type.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionType
     */
    protected function getCoreshop_Form_NotificationRule_Type_RuleConditionService()
    {
        return $this->services['coreshop.form.notification_rule.type.rule_condition'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionType('CoreShop\\Component\\Rule\\Model\\Condition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.notification_rule.conditions']) ? $this->services['coreshop.form_registry.notification_rule.conditions'] : $this->get('coreshop.form_registry.notification_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.notification_rule.type.rule_condition.collection' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionCollectionType
     */
    protected function getCoreshop_Form_NotificationRule_Type_RuleCondition_CollectionService()
    {
        return $this->services['coreshop.form.notification_rule.type.rule_condition.collection'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionCollectionType(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.notification_rule.type.rule_condition_choice' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionChoiceType
     */
    protected function getCoreshop_Form_NotificationRule_Type_RuleConditionChoiceService()
    {
        return $this->services['coreshop.form.notification_rule.type.rule_condition_choice'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleConditionChoiceType(array('order.invoiceState' => 'order.invoiceState', 'order.shipmentState' => 'order.shipmentState', 'order.orderState' => 'order.orderState', 'order.paymentState' => 'order.paymentState', 'order.carriers' => 'order.carriers', 'quote.carriers' => 'quote.carriers', 'invoice.invoiceState' => 'invoice.invoiceState', 'shipment.shipmentState' => 'shipment.shipmentState', 'payment.paymentState' => 'payment.paymentState', 'user.userType' => 'user.userType'));
    }

    /**
     * Gets the public 'coreshop.form.notification_rule_type.type_choice' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleTypeChoiceType
     */
    protected function getCoreshop_Form_NotificationRuleType_TypeChoiceService()
    {
        return $this->services['coreshop.form.notification_rule_type.type_choice'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleTypeChoiceType(array(0 => 'order', 1 => 'invoice', 2 => 'shipment', 3 => 'user', 4 => 'payment', 5 => 'quote'));
    }

    /**
     * Gets the public 'coreshop.form.product_price_rule.type.rule_action.collection' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionCollectionType
     */
    protected function getCoreshop_Form_ProductPriceRule_Type_RuleAction_CollectionService()
    {
        return $this->services['coreshop.form.product_price_rule.type.rule_action.collection'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionCollectionType(${($_ = isset($this->services['coreshop.registry.product_price_rule.actions']) ? $this->services['coreshop.registry.product_price_rule.actions'] : $this->get('coreshop.registry.product_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_price_rule.type.rule_action_choice' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionChoiceType
     */
    protected function getCoreshop_Form_ProductPriceRule_Type_RuleActionChoiceService()
    {
        return $this->services['coreshop.form.product_price_rule.type.rule_action_choice'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionChoiceType(array('price' => 'price', 'discountAmount' => 'discountAmount', 'discountPercent' => 'discountPercent'));
    }

    /**
     * Gets the public 'coreshop.form.product_price_rule.type.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionType
     */
    protected function getCoreshop_Form_ProductPriceRule_Type_RuleConditionService()
    {
        return $this->services['coreshop.form.product_price_rule.type.rule_condition'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionType('CoreShop\\Component\\Rule\\Model\\Condition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.product_price_rule.conditions']) ? $this->services['coreshop.form_registry.product_price_rule.conditions'] : $this->get('coreshop.form_registry.product_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_price_rule.type.rule_condition.collection' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionCollectionType
     */
    protected function getCoreshop_Form_ProductPriceRule_Type_RuleCondition_CollectionService()
    {
        return $this->services['coreshop.form.product_price_rule.type.rule_condition.collection'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionCollectionType(${($_ = isset($this->services['coreshop.registry.product_price_rule.conditions']) ? $this->services['coreshop.registry.product_price_rule.conditions'] : $this->get('coreshop.registry.product_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_price_rule.type.rule_condition_choice' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionChoiceType
     */
    protected function getCoreshop_Form_ProductPriceRule_Type_RuleConditionChoiceService()
    {
        return $this->services['coreshop.form.product_price_rule.type.rule_condition_choice'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleConditionChoiceType(array('products' => 'products', 'nested' => 'nested', 'categories' => 'categories', 'timespan' => 'timespan', 'quantity' => 'quantity', 'customers' => 'customers', 'customerGroups' => 'customerGroups', 'countries' => 'countries', 'zones' => 'zones', 'stores' => 'stores', 'currencies' => 'currencies'));
    }

    /**
     * Gets the public 'coreshop.form.product_specific_price_rule.type.rule_action.collection' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionCollectionType
     */
    protected function getCoreshop_Form_ProductSpecificPriceRule_Type_RuleAction_CollectionService()
    {
        return $this->services['coreshop.form.product_specific_price_rule.type.rule_action.collection'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionCollectionType(${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.actions']) ? $this->services['coreshop.registry.product_specific_price_rule.actions'] : $this->get('coreshop.registry.product_specific_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_specific_price_rule.type.rule_action_choice' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionChoiceType
     */
    protected function getCoreshop_Form_ProductSpecificPriceRule_Type_RuleActionChoiceService()
    {
        return $this->services['coreshop.form.product_specific_price_rule.type.rule_action_choice'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionChoiceType(array('price' => 'price', 'discountAmount' => 'discountAmount', 'discountPercent' => 'discountPercent'));
    }

    /**
     * Gets the public 'coreshop.form.product_specific_price_rule.type.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionType
     */
    protected function getCoreshop_Form_ProductSpecificPriceRule_Type_RuleConditionService()
    {
        return $this->services['coreshop.form.product_specific_price_rule.type.rule_condition'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionType('CoreShop\\Component\\Rule\\Model\\Condition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.product_specific_price_rule.conditions']) ? $this->services['coreshop.form_registry.product_specific_price_rule.conditions'] : $this->get('coreshop.form_registry.product_specific_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_specific_price_rule.type.rule_condition.collection' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionCollectionType
     */
    protected function getCoreshop_Form_ProductSpecificPriceRule_Type_RuleCondition_CollectionService()
    {
        return $this->services['coreshop.form.product_specific_price_rule.type.rule_condition.collection'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionCollectionType(${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.conditions']) ? $this->services['coreshop.registry.product_specific_price_rule.conditions'] : $this->get('coreshop.registry.product_specific_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.product_specific_price_rule.type.rule_condition_choice' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionChoiceType
     */
    protected function getCoreshop_Form_ProductSpecificPriceRule_Type_RuleConditionChoiceService()
    {
        return $this->services['coreshop.form.product_specific_price_rule.type.rule_condition_choice'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleConditionChoiceType(array('nested' => 'nested', 'timespan' => 'timespan', 'customers' => 'customers', 'customerGroups' => 'customerGroups', 'countries' => 'countries', 'zones' => 'zones', 'stores' => 'stores', 'currencies' => 'currencies'));
    }

    /**
     * Gets the public 'coreshop.form.shipping_rule.type.rule_action.collection' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionCollectionType
     */
    protected function getCoreshop_Form_ShippingRule_Type_RuleAction_CollectionService()
    {
        return $this->services['coreshop.form.shipping_rule.type.rule_action.collection'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionCollectionType(${($_ = isset($this->services['coreshop.registry.shipping_rule.actions']) ? $this->services['coreshop.registry.shipping_rule.actions'] : $this->get('coreshop.registry.shipping_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.shipping_rule.type.rule_action_choice' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionChoiceType
     */
    protected function getCoreshop_Form_ShippingRule_Type_RuleActionChoiceService()
    {
        return $this->services['coreshop.form.shipping_rule.type.rule_action_choice'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionChoiceType(array('price' => 'price', 'additionAmount' => 'additionAmount', 'discountAmount' => 'discountAmount', 'additionPercent' => 'additionPercent', 'discountPercent' => 'discountPercent', 'shippingRule' => 'shippingRule'));
    }

    /**
     * Gets the public 'coreshop.form.shipping_rule.type.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionType
     */
    protected function getCoreshop_Form_ShippingRule_Type_RuleConditionService()
    {
        return $this->services['coreshop.form.shipping_rule.type.rule_condition'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionType('CoreShop\\Component\\Rule\\Model\\Condition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.shipping_rule.conditions']) ? $this->services['coreshop.form_registry.shipping_rule.conditions'] : $this->get('coreshop.form_registry.shipping_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.shipping_rule.type.rule_condition.collection' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionCollectionType
     */
    protected function getCoreshop_Form_ShippingRule_Type_RuleCondition_CollectionService()
    {
        return $this->services['coreshop.form.shipping_rule.type.rule_condition.collection'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionCollectionType(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.shipping_rule.type.rule_condition_choice' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionChoiceType
     */
    protected function getCoreshop_Form_ShippingRule_Type_RuleConditionChoiceService()
    {
        return $this->services['coreshop.form.shipping_rule.type.rule_condition_choice'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleConditionChoiceType(array('amount' => 'amount', 'postcodes' => 'postcodes', 'weight' => 'weight', 'dimension' => 'dimension', 'nested' => 'nested', 'shippingRule' => 'shippingRule', 'categories' => 'categories', 'products' => 'products', 'countries' => 'countries', 'customers' => 'customers', 'customerGroups' => 'customerGroups', 'zones' => 'zones', 'stores' => 'stores', 'currencies' => 'currencies'));
    }

    /**
     * Gets the public 'coreshop.form.type.address' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\AddressType
     */
    protected function getCoreshop_Form_Type_AddressService()
    {
        return $this->services['coreshop.form.type.address'] = new \CoreShop\Bundle\AddressBundle\Form\Type\AddressType('Pimcore\\Model\\DataObject\\CoreShopAddress', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.address_choice' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Type\AddressChoiceType
     */
    protected function getCoreshop_Form_Type_AddressChoiceService()
    {
        return $this->services['coreshop.form.type.address_choice'] = new \CoreShop\Bundle\CoreBundle\Form\Type\AddressChoiceType(${($_ = isset($this->services['coreshop.repository.customer']) ? $this->services['coreshop.repository.customer'] : $this->get('coreshop.repository.customer')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.carrier' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\CarrierType
     */
    protected function getCoreshop_Form_Type_CarrierService()
    {
        return $this->services['coreshop.form.type.carrier'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\CarrierType('CoreShop\\Component\\Core\\Model\\Carrier', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.carrier_choice' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\CarrierChoiceType
     */
    protected function getCoreshop_Form_Type_CarrierChoiceService()
    {
        return $this->services['coreshop.form.type.carrier_choice'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\CarrierChoiceType(${($_ = isset($this->services['coreshop.repository.carrier']) ? $this->services['coreshop.repository.carrier'] : $this->get('coreshop.repository.carrier')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.cart_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleType
     */
    protected function getCoreshop_Form_Type_CartPriceRuleService()
    {
        return $this->services['coreshop.form.type.cart_price_rule'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleType('CoreShop\\Component\\Order\\Model\\CartPriceRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.cart_price_rule.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionType
     */
    protected function getCoreshop_Form_Type_CartPriceRule_RuleActionService()
    {
        return $this->services['coreshop.form.type.cart_price_rule.rule_action'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleActionType('CoreShop\\Component\\Rule\\Model\\Action', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.cart_price_rule.actions']) ? $this->services['coreshop.form_registry.cart_price_rule.actions'] : $this->get('coreshop.form_registry.cart_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.cart_price_rule_generator' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleGeneratorType
     */
    protected function getCoreshop_Form_Type_CartPriceRuleGeneratorService()
    {
        return $this->services['coreshop.form.type.cart_price_rule_generator'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleGeneratorType('CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherGenerator', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.checkout_address' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Type\Checkout\AddressType
     */
    protected function getCoreshop_Form_Type_CheckoutAddressService()
    {
        return $this->services['coreshop.form.type.checkout_address'] = new \CoreShop\Bundle\CoreBundle\Form\Type\Checkout\AddressType();
    }

    /**
     * Gets the public 'coreshop.form.type.checkout_payment' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Type\Checkout\PaymentType
     */
    protected function getCoreshop_Form_Type_CheckoutPaymentService()
    {
        return $this->services['coreshop.form.type.checkout_payment'] = new \CoreShop\Bundle\CoreBundle\Form\Type\Checkout\PaymentType();
    }

    /**
     * Gets the public 'coreshop.form.type.configuration' shared service.
     *
     * @return \CoreShop\Bundle\ConfigurationBundle\Form\Type\ConfigurationType
     */
    protected function getCoreshop_Form_Type_ConfigurationService()
    {
        return $this->services['coreshop.form.type.configuration'] = new \CoreShop\Bundle\ConfigurationBundle\Form\Type\ConfigurationType('CoreShop\\Component\\Core\\Model\\Configuration', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.configuration.collection' shared service.
     *
     * @return \CoreShop\Bundle\ConfigurationBundle\Form\Type\ConfigurationCollectionType
     */
    protected function getCoreshop_Form_Type_Configuration_CollectionService()
    {
        return $this->services['coreshop.form.type.configuration.collection'] = new \CoreShop\Bundle\ConfigurationBundle\Form\Type\ConfigurationCollectionType();
    }

    /**
     * Gets the public 'coreshop.form.type.country' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\CountryType
     */
    protected function getCoreshop_Form_Type_CountryService()
    {
        return $this->services['coreshop.form.type.country'] = new \CoreShop\Bundle\AddressBundle\Form\Type\CountryType('CoreShop\\Component\\Core\\Model\\Country', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.country_choice' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\CountryChoiceType
     */
    protected function getCoreshop_Form_Type_CountryChoiceService()
    {
        return $this->services['coreshop.form.type.country_choice'] = new \CoreShop\Bundle\AddressBundle\Form\Type\CountryChoiceType(${($_ = isset($this->services['coreshop.repository.country']) ? $this->services['coreshop.repository.country'] : $this->get('coreshop.repository.country')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.country_translation' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\CountryTranslationType
     */
    protected function getCoreshop_Form_Type_CountryTranslationService()
    {
        return $this->services['coreshop.form.type.country_translation'] = new \CoreShop\Bundle\AddressBundle\Form\Type\CountryTranslationType('CoreShop\\Component\\Address\\Model\\CountryTranslation', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.currency' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Form\Type\CurrencyType
     */
    protected function getCoreshop_Form_Type_CurrencyService()
    {
        return $this->services['coreshop.form.type.currency'] = new \CoreShop\Bundle\CurrencyBundle\Form\Type\CurrencyType('CoreShop\\Component\\Core\\Model\\Currency', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.currency_choice' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Form\Type\CurrencyChoiceType
     */
    protected function getCoreshop_Form_Type_CurrencyChoiceService()
    {
        return $this->services['coreshop.form.type.currency_choice'] = new \CoreShop\Bundle\CurrencyBundle\Form\Type\CurrencyChoiceType(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.customer' shared service.
     *
     * @return \CoreShop\Bundle\CustomerBundle\Form\Type\CustomerType
     */
    protected function getCoreshop_Form_Type_CustomerService()
    {
        return $this->services['coreshop.form.type.customer'] = new \CoreShop\Bundle\CustomerBundle\Form\Type\CustomerType('Pimcore\\Model\\DataObject\\CoreShopCustomer', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.customer_registration' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Type\CustomerRegistrationType
     */
    protected function getCoreshop_Form_Type_CustomerRegistrationService()
    {
        return $this->services['coreshop.form.type.customer_registration'] = new \CoreShop\Bundle\CoreBundle\Form\Type\CustomerRegistrationType();
    }

    /**
     * Gets the public 'coreshop.form.type.exchange_rate' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Form\Type\ExchangeRateType
     */
    protected function getCoreshop_Form_Type_ExchangeRateService()
    {
        return $this->services['coreshop.form.type.exchange_rate'] = new \CoreShop\Bundle\CurrencyBundle\Form\Type\ExchangeRateType('CoreShop\\Component\\Currency\\Model\\ExchangeRate', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.filter' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\FilterType
     */
    protected function getCoreshop_Form_Type_FilterService()
    {
        return $this->services['coreshop.form.type.filter'] = new \CoreShop\Bundle\IndexBundle\Form\Type\FilterType('CoreShop\\Component\\Index\\Model\\Filter', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.filter.condition_choice_type' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionChoiceType
     */
    protected function getCoreshop_Form_Type_Filter_ConditionChoiceTypeService()
    {
        return $this->services['coreshop.form.type.filter.condition_choice_type'] = new \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionChoiceType(array('select' => 'select', 'range' => 'range', 'multiselect' => 'multiselect', 'boolean' => 'boolean'));
    }

    /**
     * Gets the public 'coreshop.form.type.filter.condition_type' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionType
     */
    protected function getCoreshop_Form_Type_Filter_ConditionTypeService()
    {
        return $this->services['coreshop.form.type.filter.condition_type'] = new \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionType('CoreShop\\Component\\Index\\Model\\FilterCondition', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.filter.condition_types']) ? $this->services['coreshop.form_registry.filter.condition_types'] : $this->get('coreshop.form_registry.filter.condition_types')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.filter.condition_type_collection' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionCollectionType
     */
    protected function getCoreshop_Form_Type_Filter_ConditionTypeCollectionService()
    {
        return $this->services['coreshop.form.type.filter.condition_type_collection'] = new \CoreShop\Bundle\IndexBundle\Form\Type\FilterConditionCollectionType(${($_ = isset($this->services['coreshop.registry.filter.condition_types']) ? $this->services['coreshop.registry.filter.condition_types'] : $this->get('coreshop.registry.filter.condition_types')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.gateway.config' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Form\Type\GatewayConfigType
     */
    protected function getCoreshop_Form_Type_Gateway_ConfigService()
    {
        return $this->services['coreshop.form.type.gateway.config'] = new \CoreShop\Bundle\PayumBundle\Form\Type\GatewayConfigType('CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.payum_gateway_config']) ? $this->services['coreshop.form_registry.payum_gateway_config'] : $this->get('coreshop.form_registry.payum_gateway_config')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.gateway_configuration.paypal' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Form\Type\PaypalGatewayConfigurationType
     */
    protected function getCoreshop_Form_Type_GatewayConfiguration_PaypalService()
    {
        return $this->services['coreshop.form.type.gateway_configuration.paypal'] = new \CoreShop\Bundle\PayumBundle\Form\Type\PaypalGatewayConfigurationType();
    }

    /**
     * Gets the public 'coreshop.form.type.gateway_configuration.sofort' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Form\Type\SofortGatewayConfigurationType
     */
    protected function getCoreshop_Form_Type_GatewayConfiguration_SofortService()
    {
        return $this->services['coreshop.form.type.gateway_configuration.sofort'] = new \CoreShop\Bundle\PayumBundle\Form\Type\SofortGatewayConfigurationType();
    }

    /**
     * Gets the public 'coreshop.form.type.guest_registration' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Form\Type\GuestRegistrationType
     */
    protected function getCoreshop_Form_Type_GuestRegistrationService()
    {
        return $this->services['coreshop.form.type.guest_registration'] = new \CoreShop\Bundle\CoreBundle\Form\Type\GuestRegistrationType();
    }

    /**
     * Gets the public 'coreshop.form.type.index' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexType
     */
    protected function getCoreshop_Form_Type_IndexService()
    {
        return $this->services['coreshop.form.type.index'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexType('CoreShop\\Component\\Index\\Model\\Index', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.index.worker']) ? $this->services['coreshop.form_registry.index.worker'] : $this->get('coreshop.form_registry.index.worker')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.index.getter_choice' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnGetterChoiceType
     */
    protected function getCoreshop_Form_Type_Index_GetterChoiceService()
    {
        return $this->services['coreshop.form.type.index.getter_choice'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnGetterChoiceType(array('brick' => 'brick', 'classificationstore' => 'classificationstore', 'fieldcollection' => 'fieldcollection', 'localizedfield' => 'localizedfield'));
    }

    /**
     * Gets the public 'coreshop.form.type.index.index_column_choice' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnChoiceType
     */
    protected function getCoreshop_Form_Type_Index_IndexColumnChoiceService()
    {
        return $this->services['coreshop.form.type.index.index_column_choice'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnChoiceType(array('classificationstore' => 'classificationstore', 'fieldcollection' => 'fieldcollection', 'localizedfields' => 'localizedfields', 'objectbrick' => 'objectbrick', 'object' => 'object'));
    }

    /**
     * Gets the public 'coreshop.form.type.index.interpter_choice' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnInterpreterChoiceType
     */
    protected function getCoreshop_Form_Type_Index_InterpterChoiceService()
    {
        return $this->services['coreshop.form.type.index.interpter_choice'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnInterpreterChoiceType(array('soundex' => 'soundex', 'objectId' => 'objectId', 'objectIdSum' => 'objectIdSum', 'object' => 'object', 'objectProperty' => 'objectProperty'));
    }

    /**
     * Gets the public 'coreshop.form.type.index.worker_choice' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexWorkerChoiceType
     */
    protected function getCoreshop_Form_Type_Index_WorkerChoiceService()
    {
        return $this->services['coreshop.form.type.index.worker_choice'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexWorkerChoiceType(array('mysql' => 'mysql'));
    }

    /**
     * Gets the public 'coreshop.form.type.index_choice' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexChoiceType
     */
    protected function getCoreshop_Form_Type_IndexChoiceService()
    {
        return $this->services['coreshop.form.type.index_choice'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexChoiceType(${($_ = isset($this->services['coreshop.repository.index']) ? $this->services['coreshop.repository.index'] : $this->get('coreshop.repository.index')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.index_column' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnType
     */
    protected function getCoreshop_Form_Type_IndexColumnService()
    {
        return $this->services['coreshop.form.type.index_column'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnType('CoreShop\\Component\\Index\\Model\\IndexColumn', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.index_column_types']) ? $this->services['coreshop.form_registry.index_column_types'] : $this->get('coreshop.form_registry.index_column_types')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.form_registry.index.getter']) ? $this->services['coreshop.form_registry.index.getter'] : $this->get('coreshop.form_registry.index.getter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.form_registry.index.interpreter']) ? $this->services['coreshop.form_registry.index.interpreter'] : $this->get('coreshop.form_registry.index.interpreter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.index_column.type_collection' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnCollectionType
     */
    protected function getCoreshop_Form_Type_IndexColumn_TypeCollectionService()
    {
        return $this->services['coreshop.form.type.index_column.type_collection'] = new \CoreShop\Bundle\IndexBundle\Form\Type\IndexColumnCollectionType(${($_ = isset($this->services['coreshop.registry.index.column_types']) ? $this->services['coreshop.registry.index.column_types'] : $this->get('coreshop.registry.index.column_types')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.money' shared service.
     *
     * @return \CoreShop\Bundle\MoneyBundle\Form\Type\MoneyType
     */
    protected function getCoreshop_Form_Type_MoneyService()
    {
        return $this->services['coreshop.form.type.money'] = new \CoreShop\Bundle\MoneyBundle\Form\Type\MoneyType();
    }

    /**
     * Gets the public 'coreshop.form.type.notification_rule' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleType
     */
    protected function getCoreshop_Form_Type_NotificationRuleService()
    {
        return $this->services['coreshop.form.type.notification_rule'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleType('CoreShop\\Component\\Notification\\Model\\NotificationRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.notification_rule.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionType
     */
    protected function getCoreshop_Form_Type_NotificationRule_RuleActionService()
    {
        return $this->services['coreshop.form.type.notification_rule.rule_action'] = new \CoreShop\Bundle\NotificationBundle\Form\Type\NotificationRuleActionType('CoreShop\\Component\\Rule\\Model\\Action', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.notification_rule.actions']) ? $this->services['coreshop.form_registry.notification_rule.actions'] : $this->get('coreshop.form_registry.notification_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.order_document_items' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\OrderDocumentCreationItemsType
     */
    protected function getCoreshop_Form_Type_OrderDocumentItemsService()
    {
        return $this->services['coreshop.form.type.order_document_items'] = new \CoreShop\Bundle\OrderBundle\Form\Type\OrderDocumentCreationItemsType();
    }

    /**
     * Gets the public 'coreshop.form.type.payment_provider' shared service.
     *
     * @return \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderType
     */
    protected function getCoreshop_Form_Type_PaymentProviderService()
    {
        return $this->services['coreshop.form.type.payment_provider'] = new \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderType('CoreShop\\Component\\Core\\Model\\PaymentProvider', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.payment_provider_choice' shared service.
     *
     * @return \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderChoiceType
     */
    protected function getCoreshop_Form_Type_PaymentProviderChoiceService()
    {
        return $this->services['coreshop.form.type.payment_provider_choice'] = new \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderChoiceType(${($_ = isset($this->services['coreshop.repository.payment_provider']) ? $this->services['coreshop.repository.payment_provider'] : $this->get('coreshop.repository.payment_provider')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.payment_provider_translation' shared service.
     *
     * @return \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderTranslationType
     */
    protected function getCoreshop_Form_Type_PaymentProviderTranslationService()
    {
        return $this->services['coreshop.form.type.payment_provider_translation'] = new \CoreShop\Bundle\PaymentBundle\Form\Type\PaymentProviderTranslationType('CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.pimcore_class_choice' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Type\PimcoreClassChoiceType
     */
    protected function getCoreshop_Form_Type_PimcoreClassChoiceService()
    {
        return $this->services['coreshop.form.type.pimcore_class_choice'] = new \CoreShop\Bundle\ResourceBundle\Form\Type\PimcoreClassChoiceType();
    }

    /**
     * Gets the public 'coreshop.form.type.product_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleType
     */
    protected function getCoreshop_Form_Type_ProductPriceRuleService()
    {
        return $this->services['coreshop.form.type.product_price_rule'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleType('CoreShop\\Component\\Product\\Model\\ProductPriceRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.product_price_rule.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionType
     */
    protected function getCoreshop_Form_Type_ProductPriceRule_RuleActionService()
    {
        return $this->services['coreshop.form.type.product_price_rule.rule_action'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductPriceRuleActionType('CoreShop\\Component\\Rule\\Model\\Action', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.product_price_rule.actions']) ? $this->services['coreshop.form_registry.product_price_rule.actions'] : $this->get('coreshop.form_registry.product_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.product_specific_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleType
     */
    protected function getCoreshop_Form_Type_ProductSpecificPriceRuleService()
    {
        return $this->services['coreshop.form.type.product_specific_price_rule'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleType('CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.product_specific_price_rule.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionType
     */
    protected function getCoreshop_Form_Type_ProductSpecificPriceRule_RuleActionService()
    {
        return $this->services['coreshop.form.type.product_specific_price_rule.rule_action'] = new \CoreShop\Bundle\ProductBundle\Form\Type\ProductSpecificPriceRuleActionType('CoreShop\\Component\\Rule\\Model\\Action', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.product_specific_price_rule.actions']) ? $this->services['coreshop.form_registry.product_specific_price_rule.actions'] : $this->get('coreshop.form_registry.product_specific_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.request_reset_password' shared service.
     *
     * @return \CoreShop\Bundle\CustomerBundle\Form\Type\RequestResetPasswordType
     */
    protected function getCoreshop_Form_Type_RequestResetPasswordService()
    {
        return $this->services['coreshop.form.type.request_reset_password'] = new \CoreShop\Bundle\CustomerBundle\Form\Type\RequestResetPasswordType();
    }

    /**
     * Gets the public 'coreshop.form.type.reset_password' shared service.
     *
     * @return \CoreShop\Bundle\CustomerBundle\Form\Type\ResetPasswordType
     */
    protected function getCoreshop_Form_Type_ResetPasswordService()
    {
        return $this->services['coreshop.form.type.reset_password'] = new \CoreShop\Bundle\CustomerBundle\Form\Type\ResetPasswordType();
    }

    /**
     * Gets the public 'coreshop.form.type.resource_translations' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType
     */
    protected function getCoreshop_Form_Type_ResourceTranslationsService()
    {
        return $this->services['coreshop.form.type.resource_translations'] = new \CoreShop\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType(${($_ = isset($this->services['coreshop.translation_locale_provider.pimcore']) ? $this->services['coreshop.translation_locale_provider.pimcore'] : $this->get('coreshop.translation_locale_provider.pimcore')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.shipment_creation' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\OrderShipmentCreationType
     */
    protected function getCoreshop_Form_Type_ShipmentCreationService()
    {
        return $this->services['coreshop.form.type.shipment_creation'] = new \CoreShop\Bundle\OrderBundle\Form\Type\OrderShipmentCreationType();
    }

    /**
     * Gets the public 'coreshop.form.type.shipping_rule' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleType
     */
    protected function getCoreshop_Form_Type_ShippingRuleService()
    {
        return $this->services['coreshop.form.type.shipping_rule'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleType('CoreShop\\Component\\Shipping\\Model\\ShippingRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.shipping_rule.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionType
     */
    protected function getCoreshop_Form_Type_ShippingRule_RuleActionService()
    {
        return $this->services['coreshop.form.type.shipping_rule.rule_action'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleActionType('CoreShop\\Component\\Rule\\Model\\Action', array(0 => 'coreshop'), ${($_ = isset($this->services['coreshop.form_registry.shipping_rule.actions']) ? $this->services['coreshop.form_registry.shipping_rule.actions'] : $this->get('coreshop.form_registry.shipping_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.shipping_rule_choice' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleChoiceType
     */
    protected function getCoreshop_Form_Type_ShippingRuleChoiceService()
    {
        return $this->services['coreshop.form.type.shipping_rule_choice'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleChoiceType(${($_ = isset($this->services['coreshop.repository.shipping_rule']) ? $this->services['coreshop.repository.shipping_rule'] : $this->get('coreshop.repository.shipping_rule')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.shipping_rule_chollection' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleGroupCollectionType
     */
    protected function getCoreshop_Form_Type_ShippingRuleChollectionService()
    {
        return $this->services['coreshop.form.type.shipping_rule_chollection'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleGroupCollectionType();
    }

    /**
     * Gets the public 'coreshop.form.type.shipping_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleGroupType
     */
    protected function getCoreshop_Form_Type_ShippingRuleGroupService()
    {
        return $this->services['coreshop.form.type.shipping_rule_group'] = new \CoreShop\Bundle\ShippingBundle\Form\Type\ShippingRuleGroupType('CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.state' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\StateType
     */
    protected function getCoreshop_Form_Type_StateService()
    {
        return $this->services['coreshop.form.type.state'] = new \CoreShop\Bundle\AddressBundle\Form\Type\StateType('CoreShop\\Component\\Address\\Model\\State', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.state_choice' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\StateChoiceType
     */
    protected function getCoreshop_Form_Type_StateChoiceService()
    {
        return $this->services['coreshop.form.type.state_choice'] = new \CoreShop\Bundle\AddressBundle\Form\Type\StateChoiceType(${($_ = isset($this->services['coreshop.repository.state']) ? $this->services['coreshop.repository.state'] : $this->get('coreshop.repository.state')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.state_translation' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\StateTranslationType
     */
    protected function getCoreshop_Form_Type_StateTranslationService()
    {
        return $this->services['coreshop.form.type.state_translation'] = new \CoreShop\Bundle\AddressBundle\Form\Type\StateTranslationType('CoreShop\\Component\\Address\\Model\\StateTranslation', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.store' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Form\Type\StoreType
     */
    protected function getCoreshop_Form_Type_StoreService()
    {
        return $this->services['coreshop.form.type.store'] = new \CoreShop\Bundle\StoreBundle\Form\Type\StoreType('CoreShop\\Component\\Core\\Model\\Store', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.store_choice' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Form\Type\StoreChoiceType
     */
    protected function getCoreshop_Form_Type_StoreChoiceService()
    {
        return $this->services['coreshop.form.type.store_choice'] = new \CoreShop\Bundle\StoreBundle\Form\Type\StoreChoiceType(${($_ = isset($this->services['coreshop.repository.store']) ? $this->services['coreshop.repository.store'] : $this->get('coreshop.repository.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rate' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateType
     */
    protected function getCoreshop_Form_Type_TaxRateService()
    {
        return $this->services['coreshop.form.type.tax_rate'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateType('CoreShop\\Component\\Taxation\\Model\\TaxRate', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rate_translation' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateTranslationType
     */
    protected function getCoreshop_Form_Type_TaxRateTranslationService()
    {
        return $this->services['coreshop.form.type.tax_rate_translation'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateTranslationType('CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rule' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleType
     */
    protected function getCoreshop_Form_Type_TaxRuleService()
    {
        return $this->services['coreshop.form.type.tax_rule'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleType('CoreShop\\Component\\Core\\Model\\TaxRule', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rule_choice' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateChoiceType
     */
    protected function getCoreshop_Form_Type_TaxRuleChoiceService()
    {
        return $this->services['coreshop.form.type.tax_rule_choice'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRateChoiceType(${($_ = isset($this->services['coreshop.repository.tax_rate']) ? $this->services['coreshop.repository.tax_rate'] : $this->get('coreshop.repository.tax_rate')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleGroupType
     */
    protected function getCoreshop_Form_Type_TaxRuleGroupService()
    {
        return $this->services['coreshop.form.type.tax_rule_group'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleGroupType('CoreShop\\Component\\Core\\Model\\TaxRuleGroup', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.tax_rule_group_choice' shared service.
     *
     * @return \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleGroupChoiceType
     */
    protected function getCoreshop_Form_Type_TaxRuleGroupChoiceService()
    {
        return $this->services['coreshop.form.type.tax_rule_group_choice'] = new \CoreShop\Bundle\TaxationBundle\Form\Type\TaxRuleGroupChoiceType(${($_ = isset($this->services['coreshop.repository.tax_rule_group']) ? $this->services['coreshop.repository.tax_rule_group'] : $this->get('coreshop.repository.tax_rule_group')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type.zone' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\ZoneType
     */
    protected function getCoreshop_Form_Type_ZoneService()
    {
        return $this->services['coreshop.form.type.zone'] = new \CoreShop\Bundle\AddressBundle\Form\Type\ZoneType('CoreShop\\Component\\Address\\Model\\Zone', array(0 => 'coreshop'));
    }

    /**
     * Gets the public 'coreshop.form.type.zone_choice' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Form\Type\ZoneChoiceType
     */
    protected function getCoreshop_Form_Type_ZoneChoiceService()
    {
        return $this->services['coreshop.form.type.zone_choice'] = new \CoreShop\Bundle\AddressBundle\Form\Type\ZoneChoiceType(${($_ = isset($this->services['coreshop.repository.zone']) ? $this->services['coreshop.repository.zone'] : $this->get('coreshop.repository.zone')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form.type_cart_price_rule_choice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleChoiceType
     */
    protected function getCoreshop_Form_TypeCartPriceRuleChoiceService()
    {
        return $this->services['coreshop.form.type_cart_price_rule_choice'] = new \CoreShop\Bundle\OrderBundle\Form\Type\CartPriceRuleChoiceType(${($_ = isset($this->services['coreshop.repository.cart_price_rule']) ? $this->services['coreshop.repository.cart_price_rule'] : $this->get('coreshop.repository.cart_price_rule')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.form_registry.cart_price_rule.actions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_CartPriceRule_ActionsService()
    {
        $this->services['coreshop.form_registry.cart_price_rule.actions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('discountAmount', 'default', 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\Rule\\Action\\DiscountAmountConfigurationType');
        $instance->add('discountPercent', 'default', 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\Rule\\Action\\DiscountPercentConfigurationType');
        $instance->add('freeShipping', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Action\\FreeShippingConfigurationType');
        $instance->add('giftProduct', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Action\\GiftProductConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.cart_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_CartPriceRule_ConditionsService()
    {
        $this->services['coreshop.form_registry.cart_price_rule.conditions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('nested', 'default', 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\Rule\\Condition\\NestedConfigurationType');
        $instance->add('timespan', 'default', 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\Rule\\Condition\\TimespanConfigurationType');
        $instance->add('amount', 'default', 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\Rule\\Condition\\AmountConfigurationType');
        $instance->add('customers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomersConfigurationType');
        $instance->add('customerGroups', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomerGroupsConfigurationType');
        $instance->add('countries', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CountriesConfigurationType');
        $instance->add('zones', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ZonesConfigurationType');
        $instance->add('stores', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\StoresConfigurationType');
        $instance->add('currencies', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CurrenciesConfigurationType');
        $instance->add('carriers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CarriersConfigurationType');
        $instance->add('products', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ProductsConfigurationType');
        $instance->add('categories', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CategoriesConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.filter.condition_types' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_Filter_ConditionTypesService()
    {
        $this->services['coreshop.form_registry.filter.condition_types'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('select', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Filter\\FilterConditionSelectType');
        $instance->add('range', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Filter\\FilterConditionRangeType');
        $instance->add('multiselect', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Filter\\FilterConditionMultiselectType');
        $instance->add('boolean', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Filter\\FilterConditionBooleanType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.index.getter' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_Index_GetterService()
    {
        $this->services['coreshop.form_registry.index.getter'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('brick', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Getter\\BrickGetterFormType');
        $instance->add('classificationstore', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Getter\\ClassificationStoreGetterFormType');
        $instance->add('fieldcollection', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Getter\\FieldCollectionGetterFormType');
        $instance->add('localizedfield', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\EmptyConfigurationFormType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.index.interpreter' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_Index_InterpreterService()
    {
        $this->services['coreshop.form_registry.index.interpreter'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('soundex', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\EmptyConfigurationFormType');
        $instance->add('objectId', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\EmptyConfigurationFormType');
        $instance->add('objectIdSum', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\EmptyConfigurationFormType');
        $instance->add('object', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\EmptyConfigurationFormType');
        $instance->add('objectProperty', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Interpreter\\ObjectPropertyInterpreterFormType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.index.worker' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_Index_WorkerService()
    {
        $this->services['coreshop.form_registry.index.worker'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('mysql', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Worker\\MysqlWorkerType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.index_column_types' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_IndexColumnTypesService()
    {
        $this->services['coreshop.form_registry.index_column_types'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('classificationstore', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Column\\IndexColumnTypeClassificationStoreType');
        $instance->add('fieldcollection', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Column\\IndexColumnTypeFieldCollectionType');
        $instance->add('localizedfields', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Column\\IndexColumnTypeLocalizedFieldsType');
        $instance->add('objectbrick', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Column\\IndexColumnTypeObjectBrickType');
        $instance->add('object', 'default', 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\Column\\IndexColumnTypeObjectType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_ActionsService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('order.orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('invoice.orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('shipment.orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('order.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');
        $instance->add('invoice.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');
        $instance->add('shipment.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');
        $instance->add('user.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');
        $instance->add('payment.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');
        $instance->add('quote.mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.invoice' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_InvoiceService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.invoice'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.order' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_OrderService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.order'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.payment' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_PaymentService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.payment'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.quote' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_QuoteService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.quote'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.shipment' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_ShipmentService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.shipment'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('orderMail', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Action\\OrderMailConfigurationType');
        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.actions.user' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Actions_UserService()
    {
        $this->services['coreshop.form_registry.notification_rule.actions.user'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('mail', 'default', 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\Rule\\Action\\MailActionConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_ConditionsService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('order.invoiceState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\InvoiceStateConfigurationType');
        $instance->add('order.shipmentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\ShipmentStateConfigurationType');
        $instance->add('order.orderState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\OrderStateConfigurationType');
        $instance->add('order.paymentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\PaymentStateConfigurationType');
        $instance->add('order.carriers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CarriersConfigurationType');
        $instance->add('quote.carriers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CarriersConfigurationType');
        $instance->add('invoice.invoiceState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\InvoiceStateConfigurationType');
        $instance->add('shipment.shipmentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\ShipmentStateConfigurationType');
        $instance->add('payment.paymentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\PaymentStateConfigurationType');
        $instance->add('user.userType', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\UserTypeConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.invoice' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_InvoiceService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.invoice'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('invoiceState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\InvoiceStateConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.order' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_OrderService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.order'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('invoiceState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\InvoiceStateConfigurationType');
        $instance->add('shipmentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\ShipmentStateConfigurationType');
        $instance->add('orderState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\OrderStateConfigurationType');
        $instance->add('paymentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\PaymentStateConfigurationType');
        $instance->add('carriers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CarriersConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.payment' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_PaymentService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.payment'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('paymentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\PaymentStateConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.quote' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_QuoteService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.quote'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('carriers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CarriersConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.shipment' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_ShipmentService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.shipment'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('shipmentState', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\ShipmentStateConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.notification_rule.conditions.user' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_NotificationRule_Conditions_UserService()
    {
        $this->services['coreshop.form_registry.notification_rule.conditions.user'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('userType', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Notification\\Condition\\UserTypeConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.payum_gateway_config' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_PayumGatewayConfigService()
    {
        $this->services['coreshop.form_registry.payum_gateway_config'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('gateway_config', 'paypal_express_checkout', 'CoreShop\\Bundle\\PayumBundle\\Form\\Type\\PaypalGatewayConfigurationType');
        $instance->add('gateway_config', 'sofort', 'CoreShop\\Bundle\\PayumBundle\\Form\\Type\\SofortGatewayConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.product_price_rule.actions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ProductPriceRule_ActionsService()
    {
        $this->services['coreshop.form_registry.product_price_rule.actions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('price', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\PriceConfigurationType');
        $instance->add('discountAmount', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\DiscountAmountConfigurationType');
        $instance->add('discountPercent', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\DiscountPercentConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.product_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ProductPriceRule_ConditionsService()
    {
        $this->services['coreshop.form_registry.product_price_rule.conditions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('products', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\ProductsConfigurationType');
        $instance->add('nested', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\ProductPriceNestedConfigurationType');
        $instance->add('categories', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\CategoriesConfigurationType');
        $instance->add('timespan', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\TimespanConfigurationType');
        $instance->add('quantity', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\ProductPriceRule\\Condition\\QuantityConfigurationType');
        $instance->add('customers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomersConfigurationType');
        $instance->add('customerGroups', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomerGroupsConfigurationType');
        $instance->add('countries', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CountriesConfigurationType');
        $instance->add('zones', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ZonesConfigurationType');
        $instance->add('stores', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\StoresConfigurationType');
        $instance->add('currencies', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CurrenciesConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.product_specific_price_rule.actions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ProductSpecificPriceRule_ActionsService()
    {
        $this->services['coreshop.form_registry.product_specific_price_rule.actions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('price', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\PriceConfigurationType');
        $instance->add('discountAmount', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\DiscountAmountConfigurationType');
        $instance->add('discountPercent', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Action\\DiscountPercentConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.product_specific_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ProductSpecificPriceRule_ConditionsService()
    {
        $this->services['coreshop.form_registry.product_specific_price_rule.conditions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('nested', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\ProductSpecificPriceNestedConfigurationType');
        $instance->add('timespan', 'default', 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\Rule\\Condition\\TimespanConfigurationType');
        $instance->add('customers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomersConfigurationType');
        $instance->add('customerGroups', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomerGroupsConfigurationType');
        $instance->add('countries', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CountriesConfigurationType');
        $instance->add('zones', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ZonesConfigurationType');
        $instance->add('stores', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\StoresConfigurationType');
        $instance->add('currencies', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CurrenciesConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.shipping_rule.actions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ShippingRule_ActionsService()
    {
        $this->services['coreshop.form_registry.shipping_rule.actions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('price', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Action\\PriceActionConfigurationType');
        $instance->add('additionAmount', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Action\\AdditionAmountActionConfigurationType');
        $instance->add('discountAmount', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Action\\DiscountAmountActionConfigurationType');
        $instance->add('additionPercent', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Action\\AdditionPercentActionConfigurationType');
        $instance->add('discountPercent', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Action\\DiscountPercentActionConfigurationType');
        $instance->add('shippingRule', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Common\\ShippingRuleConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.form_registry.shipping_rule.conditions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry
     */
    protected function getCoreshop_FormRegistry_ShippingRule_ConditionsService()
    {
        $this->services['coreshop.form_registry.shipping_rule.conditions'] = $instance = new \CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('amount', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Condition\\AmountConfigurationType');
        $instance->add('postcodes', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Condition\\PostcodesConfigurationType');
        $instance->add('weight', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Condition\\WeightConfigurationType');
        $instance->add('dimension', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Condition\\DimensionConfigurationType');
        $instance->add('nested', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Condition\\NestedConfigurationType');
        $instance->add('shippingRule', 'default', 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\Rule\\Common\\ShippingRuleConfigurationType');
        $instance->add('categories', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CategoriesConfigurationType');
        $instance->add('products', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ProductsConfigurationType');
        $instance->add('countries', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CountriesConfigurationType');
        $instance->add('customers', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomersConfigurationType');
        $instance->add('customerGroups', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CustomerGroupsConfigurationType');
        $instance->add('zones', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\ZonesConfigurationType');
        $instance->add('stores', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\StoresConfigurationType');
        $instance->add('currencies', 'default', 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Rule\\Condition\\CurrenciesConfigurationType');

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.cart' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\CartController
     */
    protected function getCoreshop_Frontend_Controller_CartService()
    {
        $this->services['coreshop.frontend.controller.cart'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\CartController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.category' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\CategoryController
     */
    protected function getCoreshop_Frontend_Controller_CategoryService()
    {
        $this->services['coreshop.frontend.controller.category'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\CategoryController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.checkout' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\CheckoutController
     */
    protected function getCoreshop_Frontend_Controller_CheckoutService()
    {
        $this->services['coreshop.frontend.controller.checkout'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\CheckoutController(${($_ = isset($this->services['coreshop.checkout_manager.default']) ? $this->services['coreshop.checkout_manager.default'] : $this->get('coreshop.checkout_manager.default')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.currency' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\CurrencyController
     */
    protected function getCoreshop_Frontend_Controller_CurrencyService()
    {
        $this->services['coreshop.frontend.controller.currency'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\CurrencyController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.customer' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\CustomerController
     */
    protected function getCoreshop_Frontend_Controller_CustomerService()
    {
        $this->services['coreshop.frontend.controller.customer'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\CustomerController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.index' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\IndexController
     */
    protected function getCoreshop_Frontend_Controller_IndexService()
    {
        $this->services['coreshop.frontend.controller.index'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\IndexController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.language' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\LanguageController
     */
    protected function getCoreshop_Frontend_Controller_LanguageService()
    {
        $this->services['coreshop.frontend.controller.language'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\LanguageController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.payment' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Controller\PaymentController
     */
    protected function getCoreshop_Frontend_Controller_PaymentService()
    {
        $this->services['coreshop.frontend.controller.payment'] = $instance = new \CoreShop\Bundle\PayumBundle\Controller\PaymentController(${($_ = isset($this->services['coreshop.factory.payment']) ? $this->services['coreshop.factory.payment'] : $this->get('coreshop.factory.payment')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order']) ? $this->services['coreshop.repository.order'] : $this->get('coreshop.repository.order')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.product' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\ProductController
     */
    protected function getCoreshop_Frontend_Controller_ProductService()
    {
        $this->services['coreshop.frontend.controller.product'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\ProductController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.quote' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\QuoteController
     */
    protected function getCoreshop_Frontend_Controller_QuoteService()
    {
        $this->services['coreshop.frontend.controller.quote'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\QuoteController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.register' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\RegisterController
     */
    protected function getCoreshop_Frontend_Controller_RegisterService()
    {
        $this->services['coreshop.frontend.controller.register'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\RegisterController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.search' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\SearchController
     */
    protected function getCoreshop_Frontend_Controller_SearchService()
    {
        $this->services['coreshop.frontend.controller.search'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\SearchController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.security' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\SecurityController
     */
    protected function getCoreshop_Frontend_Controller_SecurityService()
    {
        $this->services['coreshop.frontend.controller.security'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\SecurityController(${($_ = isset($this->services['security.authentication_utils']) ? $this->services['security.authentication_utils'] : $this->get('security.authentication_utils')) && false ?: '_'}, ${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.frontend.controller.wishlist' shared service.
     *
     * @return \CoreShop\Bundle\FrontendBundle\Controller\WishlistController
     */
    protected function getCoreshop_Frontend_Controller_WishlistService()
    {
        $this->services['coreshop.frontend.controller.wishlist'] = $instance = new \CoreShop\Bundle\FrontendBundle\Controller\WishlistController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.generator.cart_price_rule_voucher_codes' shared service.
     *
     * @return \CoreShop\Component\Order\Generator\CartPriceRuleVoucherCodeGenerator
     */
    protected function getCoreshop_Generator_CartPriceRuleVoucherCodesService()
    {
        return $this->services['coreshop.generator.cart_price_rule_voucher_codes'] = new \CoreShop\Component\Order\Generator\CartPriceRuleVoucherCodeGenerator(${($_ = isset($this->services['coreshop.factory.cart_price_rule_voucher_code']) ? $this->services['coreshop.factory.cart_price_rule_voucher_code'] : $this->get('coreshop.factory.cart_price_rule_voucher_code')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.index.class_helper.product' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Index\ProductClassHelper
     */
    protected function getCoreshop_Index_ClassHelper_ProductService()
    {
        return $this->services['coreshop.index.class_helper.product'] = new \CoreShop\Bundle\CoreBundle\Index\ProductClassHelper();
    }

    /**
     * Gets the public 'coreshop.index.column_type.classification_store' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType
     */
    protected function getCoreshop_Index_ColumnType_ClassificationStoreService()
    {
        return $this->services['coreshop.index.column_type.classification_store'] = new \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType();
    }

    /**
     * Gets the public 'coreshop.index.column_type.field_collection' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType
     */
    protected function getCoreshop_Index_ColumnType_FieldCollectionService()
    {
        return $this->services['coreshop.index.column_type.field_collection'] = new \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType();
    }

    /**
     * Gets the public 'coreshop.index.column_type.localized_fields' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType
     */
    protected function getCoreshop_Index_ColumnType_LocalizedFieldsService()
    {
        return $this->services['coreshop.index.column_type.localized_fields'] = new \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType();
    }

    /**
     * Gets the public 'coreshop.index.column_type.object' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType
     */
    protected function getCoreshop_Index_ColumnType_ObjectService()
    {
        return $this->services['coreshop.index.column_type.object'] = new \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType();
    }

    /**
     * Gets the public 'coreshop.index.column_type.object_brick' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType
     */
    protected function getCoreshop_Index_ColumnType_ObjectBrickService()
    {
        return $this->services['coreshop.index.column_type.object_brick'] = new \CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType();
    }

    /**
     * Gets the public 'coreshop.index.getter.brickfield' shared service.
     *
     * @return \CoreShop\Component\Index\Getter\BrickGetter
     */
    protected function getCoreshop_Index_Getter_BrickfieldService()
    {
        return $this->services['coreshop.index.getter.brickfield'] = new \CoreShop\Component\Index\Getter\BrickGetter();
    }

    /**
     * Gets the public 'coreshop.index.getter.classification_store' shared service.
     *
     * @return \CoreShop\Component\Index\Getter\ClassificationStoreGetter
     */
    protected function getCoreshop_Index_Getter_ClassificationStoreService()
    {
        return $this->services['coreshop.index.getter.classification_store'] = new \CoreShop\Component\Index\Getter\ClassificationStoreGetter();
    }

    /**
     * Gets the public 'coreshop.index.getter.field_collection' shared service.
     *
     * @return \CoreShop\Component\Index\Getter\FieldCollectionGetter
     */
    protected function getCoreshop_Index_Getter_FieldCollectionService()
    {
        return $this->services['coreshop.index.getter.field_collection'] = new \CoreShop\Component\Index\Getter\FieldCollectionGetter();
    }

    /**
     * Gets the public 'coreshop.index.getter.localized_field' shared service.
     *
     * @return \CoreShop\Component\Index\Getter\LocalizedFieldGetter
     */
    protected function getCoreshop_Index_Getter_LocalizedFieldService()
    {
        return $this->services['coreshop.index.getter.localized_field'] = new \CoreShop\Component\Index\Getter\LocalizedFieldGetter(${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.index.interpreter.object' shared service.
     *
     * @return \CoreShop\Component\Index\Interpreter\ObjectInterpreter
     */
    protected function getCoreshop_Index_Interpreter_ObjectService()
    {
        return $this->services['coreshop.index.interpreter.object'] = new \CoreShop\Component\Index\Interpreter\ObjectInterpreter();
    }

    /**
     * Gets the public 'coreshop.index.interpreter.object_id' shared service.
     *
     * @return \CoreShop\Component\Index\Interpreter\ObjectIdInterpreter
     */
    protected function getCoreshop_Index_Interpreter_ObjectIdService()
    {
        return $this->services['coreshop.index.interpreter.object_id'] = new \CoreShop\Component\Index\Interpreter\ObjectIdInterpreter();
    }

    /**
     * Gets the public 'coreshop.index.interpreter.object_id_sum' shared service.
     *
     * @return \CoreShop\Component\Index\Interpreter\ObjectIdSumInterpreter
     */
    protected function getCoreshop_Index_Interpreter_ObjectIdSumService()
    {
        return $this->services['coreshop.index.interpreter.object_id_sum'] = new \CoreShop\Component\Index\Interpreter\ObjectIdSumInterpreter();
    }

    /**
     * Gets the public 'coreshop.index.interpreter.object_property' shared service.
     *
     * @return \CoreShop\Component\Index\Interpreter\ObjectPropertyInterpreter
     */
    protected function getCoreshop_Index_Interpreter_ObjectPropertyService()
    {
        return $this->services['coreshop.index.interpreter.object_property'] = new \CoreShop\Component\Index\Interpreter\ObjectPropertyInterpreter();
    }

    /**
     * Gets the public 'coreshop.index.interpreter.soundex' shared service.
     *
     * @return \CoreShop\Component\Index\Interpreter\SoundexInterpreter
     */
    protected function getCoreshop_Index_Interpreter_SoundexService()
    {
        return $this->services['coreshop.index.interpreter.soundex'] = new \CoreShop\Component\Index\Interpreter\SoundexInterpreter();
    }

    /**
     * Gets the public 'coreshop.index.updater' shared service.
     *
     * @return \CoreShop\Component\Index\Service\IndexUpdaterService
     */
    protected function getCoreshop_Index_UpdaterService()
    {
        return $this->services['coreshop.index.updater'] = new \CoreShop\Component\Index\Service\IndexUpdaterService(${($_ = isset($this->services['coreshop.repository.index']) ? $this->services['coreshop.repository.index'] : $this->get('coreshop.repository.index')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.index.worker']) ? $this->services['coreshop.registry.index.worker'] : $this->get('coreshop.registry.index.worker')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.index.worker.mysql' service.
     *
     * @return \CoreShop\Bundle\IndexBundle\Worker\MysqlWorker
     */
    protected function getCoreshop_Index_Worker_MysqlService()
    {
        return new \CoreShop\Bundle\IndexBundle\Worker\MysqlWorker(${($_ = isset($this->services['coreshop.registry.index.class_helpers']) ? $this->services['coreshop.registry.index.class_helpers'] : $this->get('coreshop.registry.index.class_helpers')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.index.getter']) ? $this->services['coreshop.registry.index.getter'] : $this->get('coreshop.registry.index.getter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.index.interpreter']) ? $this->services['coreshop.registry.index.interpreter'] : $this->get('coreshop.registry.index.interpreter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.installer.checker.command_directory' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Installer\Checker\CommandDirectoryChecker
     */
    protected function getCoreshop_Installer_Checker_CommandDirectoryService()
    {
        return $this->services['coreshop.installer.checker.command_directory'] = new \CoreShop\Bundle\CoreBundle\Installer\Checker\CommandDirectoryChecker(${($_ = isset($this->services['filesystem']) ? $this->services['filesystem'] : $this->get('filesystem')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.installer.executor.folder_installer' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Installer\Executor\FolderInstallerProvider
     */
    protected function getCoreshop_Installer_Executor_FolderInstallerService()
    {
        return $this->services['coreshop.installer.executor.folder_installer'] = new \CoreShop\Bundle\CoreBundle\Installer\Executor\FolderInstallerProvider('coreshop/carts', 'coreshop/products', 'coreshop/customers', 'coreshop/customer_groups', 'coreshop/orders');
    }

    /**
     * Gets the public 'coreshop.jms_serializer.handler.object' shared service.
     *
     * @return \CoreShop\Bundle\ConfigurationBundle\Serialization\ObjectHandler
     */
    protected function getCoreshop_JmsSerializer_Handler_ObjectService()
    {
        return $this->services['coreshop.jms_serializer.handler.object'] = new \CoreShop\Bundle\ConfigurationBundle\Serialization\ObjectHandler();
    }

    /**
     * Gets the public 'coreshop.jms_serializer.handler.relation' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Serialization\RelationsHandler
     */
    protected function getCoreshop_JmsSerializer_Handler_RelationService()
    {
        return $this->services['coreshop.jms_serializer.handler.relation'] = new \CoreShop\Bundle\ResourceBundle\Serialization\RelationsHandler(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.listener.cart_blamer' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\CartBlamerListener
     */
    protected function getCoreshop_Listener_CartBlamerService()
    {
        return $this->services['coreshop.listener.cart_blamer'] = new \CoreShop\Bundle\CoreBundle\EventListener\CartBlamerListener(${($_ = isset($this->services['coreshop.cart.manager']) ? $this->services['coreshop.cart.manager'] : $this->get('coreshop.cart.manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.listener.theme_request' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\EventListener\ThemeRequestListener
     */
    protected function getCoreshop_Listener_ThemeRequestService()
    {
        return $this->services['coreshop.listener.theme_request'] = new \CoreShop\Bundle\StoreBundle\EventListener\ThemeRequestListener(${($_ = isset($this->services['coreshop.store.theme_resolver']) ? $this->services['coreshop.store.theme_resolver'] : $this->get('coreshop.store.theme_resolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.listeners.index.object.post_update' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\EventListener\IndexObjectListener
     */
    protected function getCoreshop_Listeners_Index_Object_PostUpdateService()
    {
        return $this->services['coreshop.listeners.index.object.post_update'] = new \CoreShop\Bundle\IndexBundle\EventListener\IndexObjectListener(${($_ = isset($this->services['coreshop.index.updater']) ? $this->services['coreshop.index.updater'] : $this->get('coreshop.index.updater')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.listeners.product.category.pre_update' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\EventListener\CategoryPersistEventListener
     */
    protected function getCoreshop_Listeners_Product_Category_PreUpdateService()
    {
        return $this->services['coreshop.listeners.product.category.pre_update'] = new \CoreShop\Bundle\ProductBundle\EventListener\CategoryPersistEventListener();
    }

    /**
     * Gets the public 'coreshop.mail.processor.order' shared service.
     *
     * @return \CoreShop\Component\Core\Order\OrderMailProcessor
     */
    protected function getCoreshop_Mail_Processor_OrderService()
    {
        return $this->services['coreshop.mail.processor.order'] = new \CoreShop\Component\Core\Order\OrderMailProcessor(${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order_invoice']) ? $this->services['coreshop.repository.order_invoice'] : $this->get('coreshop.repository.order_invoice')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order_shipment']) ? $this->services['coreshop.repository.order_shipment'] : $this->get('coreshop.repository.order_shipment')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.renderer.order.pdf.asset']) ? $this->services['coreshop.renderer.order.pdf.asset'] : $this->get('coreshop.renderer.order.pdf.asset')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.money_formatter' shared service.
     *
     * @return \CoreShop\Bundle\MoneyBundle\Formatter\MoneyFormatter
     */
    protected function getCoreshop_MoneyFormatterService()
    {
        return $this->services['coreshop.money_formatter'] = new \CoreShop\Bundle\MoneyBundle\Formatter\MoneyFormatter();
    }

    /**
     * Gets the public 'coreshop.notification.listener.customer' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\CustomerListener
     */
    protected function getCoreshop_Notification_Listener_CustomerService()
    {
        return $this->services['coreshop.notification.listener.customer'] = new \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\CustomerListener(new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification.listener.invoice' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\InvoiceListener
     */
    protected function getCoreshop_Notification_Listener_InvoiceService()
    {
        return $this->services['coreshop.notification.listener.invoice'] = new \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\InvoiceListener(new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification.listener.quote' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\QuoteListener
     */
    protected function getCoreshop_Notification_Listener_QuoteService()
    {
        return $this->services['coreshop.notification.listener.quote'] = new \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\QuoteListener(new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification.listener.shipment' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\ShipmentListener
     */
    protected function getCoreshop_Notification_Listener_ShipmentService()
    {
        return $this->services['coreshop.notification.listener.shipment'] = new \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\ShipmentListener(new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification.listsener.order' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\OrderWorkflowListener
     */
    protected function getCoreshop_Notification_Listsener_OrderService()
    {
        return $this->services['coreshop.notification.listsener.order'] = new \CoreShop\Bundle\CoreBundle\EventListener\NotificationRules\OrderWorkflowListener(new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.action.mail' shared service.
     *
     * @return \CoreShop\Component\Notification\Rule\Action\MailActionProcessor
     */
    protected function getCoreshop_NotificationRule_Action_MailService()
    {
        return $this->services['coreshop.notification_rule.action.mail'] = new \CoreShop\Component\Notification\Rule\Action\MailActionProcessor();
    }

    /**
     * Gets the public 'coreshop.notification_rule.action.order_mail' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Action\Order\OrderMailActionProcessor
     */
    protected function getCoreshop_NotificationRule_Action_OrderMailService()
    {
        return $this->services['coreshop.notification_rule.action.order_mail'] = new \CoreShop\Component\Core\Notification\Rule\Action\Order\OrderMailActionProcessor(${($_ = isset($this->services['coreshop.mail.processor.order']) ? $this->services['coreshop.mail.processor.order'] : $this->get('coreshop.mail.processor.order')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.applier' shared service.
     *
     * @return \CoreShop\Component\Notification\Processor\RuleApplier
     */
    protected function getCoreshop_NotificationRule_ApplierService()
    {
        return $this->services['coreshop.notification_rule.applier'] = new \CoreShop\Component\Notification\Processor\RuleApplier(${($_ = isset($this->services['coreshop.registry.notification_rule.actions']) ? $this->services['coreshop.registry.notification_rule.actions'] : $this->get('coreshop.registry.notification_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.invoice.invoice' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Invoice\InvoiceStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Invoice_InvoiceService()
    {
        return $this->services['coreshop.notification_rule.condition.invoice.invoice'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Invoice\InvoiceStateChecker(${($_ = isset($this->services['coreshop.order.invoice.processable']) ? $this->services['coreshop.order.invoice.processable'] : $this->get('coreshop.order.invoice.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.order.carriers' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Order\CarriersChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Order_CarriersService()
    {
        return $this->services['coreshop.notification_rule.condition.order.carriers'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Order\CarriersChecker();
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.order.invoice_state' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Order\InvoiceStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Order_InvoiceStateService()
    {
        return $this->services['coreshop.notification_rule.condition.order.invoice_state'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Order\InvoiceStateChecker(${($_ = isset($this->services['coreshop.order.invoice.processable']) ? $this->services['coreshop.order.invoice.processable'] : $this->get('coreshop.order.invoice.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.order.order_state' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Order\OrderStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Order_OrderStateService()
    {
        return $this->services['coreshop.notification_rule.condition.order.order_state'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Order\OrderStateChecker();
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.order.payment_state' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Order\PaymentStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Order_PaymentStateService()
    {
        return $this->services['coreshop.notification_rule.condition.order.payment_state'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Order\PaymentStateChecker();
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.order.shipment_state' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Order\ShipmentStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Order_ShipmentStateService()
    {
        return $this->services['coreshop.notification_rule.condition.order.shipment_state'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Order\ShipmentStateChecker(${($_ = isset($this->services['coreshop.order.shipment.processable']) ? $this->services['coreshop.order.shipment.processable'] : $this->get('coreshop.order.shipment.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.payment.payment_state' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Payment\PaymentStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Payment_PaymentStateService()
    {
        return $this->services['coreshop.notification_rule.condition.payment.payment_state'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Payment\PaymentStateChecker(${($_ = isset($this->services['coreshop.repository.order']) ? $this->services['coreshop.repository.order'] : $this->get('coreshop.repository.order')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.shipment.shipment' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\Shipment\ShipmentStateChecker
     */
    protected function getCoreshop_NotificationRule_Condition_Shipment_ShipmentService()
    {
        return $this->services['coreshop.notification_rule.condition.shipment.shipment'] = new \CoreShop\Component\Core\Notification\Rule\Condition\Shipment\ShipmentStateChecker(${($_ = isset($this->services['coreshop.order.shipment.processable']) ? $this->services['coreshop.order.shipment.processable'] : $this->get('coreshop.order.shipment.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.condition.user.user_type' shared service.
     *
     * @return \CoreShop\Component\Core\Notification\Rule\Condition\User\UserTypeChecker
     */
    protected function getCoreshop_NotificationRule_Condition_User_UserTypeService()
    {
        return $this->services['coreshop.notification_rule.condition.user.user_type'] = new \CoreShop\Component\Core\Notification\Rule\Condition\User\UserTypeChecker();
    }

    /**
     * Gets the public 'coreshop.notification_rule.conditions.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor
     */
    protected function getCoreshop_NotificationRule_Conditions_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.processor' service.
     *
     * @return \CoreShop\Component\Notification\Processor\RulesProcessor
     */
    protected function getCoreshop_NotificationRule_ProcessorService()
    {
        return new \CoreShop\Component\Notification\Processor\RulesProcessor(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'}, new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.notification_rule.applier']) ? $this->services['coreshop.notification_rule.applier'] : $this->get('coreshop.notification_rule.applier')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.notification_rule.validation.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor
     */
    protected function getCoreshop_NotificationRule_Validation_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.notification_rule.conditions']) ? $this->services['coreshop.registry.notification_rule.conditions'] : $this->get('coreshop.registry.notification_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.object_service' shared service.
     *
     * @return \CoreShop\Component\Resource\Pimcore\ObjectService
     */
    protected function getCoreshop_ObjectServiceService()
    {
        return $this->services['coreshop.object_service'] = new \CoreShop\Component\Resource\Pimcore\ObjectService();
    }

    /**
     * Gets the public 'coreshop.order.configurator.session_cart' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Session\SessionCartConfigurator
     */
    protected function getCoreshop_Order_Configurator_SessionCartService()
    {
        return $this->services['coreshop.order.configurator.session_cart'] = new \CoreShop\Bundle\OrderBundle\Session\SessionCartConfigurator();
    }

    /**
     * Gets the public 'coreshop.order.invoice.processable' shared service.
     *
     * @return \CoreShop\Component\Order\Processable\ProcessableOrderItems
     */
    protected function getCoreshop_Order_Invoice_ProcessableService()
    {
        return $this->services['coreshop.order.invoice.processable'] = new \CoreShop\Component\Order\Processable\ProcessableOrderItems(${($_ = isset($this->services['coreshop.repository.order_invoice']) ? $this->services['coreshop.repository.order_invoice'] : $this->get('coreshop.repository.order_invoice')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.listener.wkhtml_options' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\EventListener\Order\OrderDocumentWkhtmlPrintOptionsListener
     */
    protected function getCoreshop_Order_Listener_WkhtmlOptionsService()
    {
        return $this->services['coreshop.order.listener.wkhtml_options'] = new \CoreShop\Bundle\CoreBundle\EventListener\Order\OrderDocumentWkhtmlPrintOptionsListener(${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.number_generator.prefix_suffix' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator
     */
    protected function getCoreshop_Order_NumberGenerator_PrefixSuffixService()
    {
        return $this->services['coreshop.order.number_generator.prefix_suffix'] = new \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator(new \CoreShop\Bundle\OrderBundle\NumberGenerator\SequenceNumberGenerator(${($_ = isset($this->services['coreshop.sequence.generator']) ? $this->services['coreshop.sequence.generator'] : $this->get('coreshop.sequence.generator')) && false ?: '_'}, 'order'), ${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, 'system.order.prefix', 'system.order.suffix');
    }

    /**
     * Gets the public 'coreshop.order.purchasable.discount_calculator' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Calculator\CompositePurchasableDiscountCalculator
     */
    protected function getCoreshop_Order_Purchasable_DiscountCalculatorService()
    {
        return $this->services['coreshop.order.purchasable.discount_calculator'] = new \CoreShop\Bundle\OrderBundle\Calculator\CompositePurchasableDiscountCalculator(${($_ = isset($this->services['coreshop.registry.order.purchasable.discount_calculators']) ? $this->services['coreshop.registry.order.purchasable.discount_calculators'] : $this->get('coreshop.registry.order.purchasable.discount_calculators')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.purchasable.discount_calculator.no_discount' shared service.
     *
     * @return \CoreShop\Component\Order\Calculator\NoDiscountPurchasableCalculator
     */
    protected function getCoreshop_Order_Purchasable_DiscountCalculator_NoDiscountService()
    {
        return $this->services['coreshop.order.purchasable.discount_calculator.no_discount'] = new \CoreShop\Component\Order\Calculator\NoDiscountPurchasableCalculator();
    }

    /**
     * Gets the public 'coreshop.order.purchasable.discount_calculator.product' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Calculator\PurchasableProductDiscountCalculator
     */
    protected function getCoreshop_Order_Purchasable_DiscountCalculator_ProductService()
    {
        return $this->services['coreshop.order.purchasable.discount_calculator.product'] = new \CoreShop\Component\Core\Order\Calculator\PurchasableProductDiscountCalculator(${($_ = isset($this->services['coreshop.product.price_calculator.composite']) ? $this->services['coreshop.product.price_calculator.composite'] : $this->get('coreshop.product.price_calculator.composite')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.purchasable.price_calculator' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Calculator\CompositePurchasablePriceCalculator
     */
    protected function getCoreshop_Order_Purchasable_PriceCalculatorService()
    {
        return $this->services['coreshop.order.purchasable.price_calculator'] = new \CoreShop\Bundle\OrderBundle\Calculator\CompositePurchasablePriceCalculator(${($_ = isset($this->services['coreshop.registry.order.purchasable.price_calculators']) ? $this->services['coreshop.registry.order.purchasable.price_calculators'] : $this->get('coreshop.registry.order.purchasable.price_calculators')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.purchasable.price_calculator.price_aware' shared service.
     *
     * @return \CoreShop\Component\Order\Calculator\PriceAwarePurchasableCalculator
     */
    protected function getCoreshop_Order_Purchasable_PriceCalculator_PriceAwareService()
    {
        return $this->services['coreshop.order.purchasable.price_calculator.price_aware'] = new \CoreShop\Component\Order\Calculator\PriceAwarePurchasableCalculator();
    }

    /**
     * Gets the public 'coreshop.order.purchasable.price_calculator.product' shared service.
     *
     * @return \CoreShop\Component\Core\Order\Calculator\PurchasableProductPriceCalculator
     */
    protected function getCoreshop_Order_Purchasable_PriceCalculator_ProductService()
    {
        return $this->services['coreshop.order.purchasable.price_calculator.product'] = new \CoreShop\Component\Core\Order\Calculator\PurchasableProductPriceCalculator(${($_ = isset($this->services['coreshop.product.price_calculator.composite']) ? $this->services['coreshop.product.price_calculator.composite'] : $this->get('coreshop.product.price_calculator.composite')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.renderer.pdf' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Renderer\Pdf\WkHtmlToPdf
     */
    protected function getCoreshop_Order_Renderer_PdfService()
    {
        return $this->services['coreshop.order.renderer.pdf'] = new \CoreShop\Bundle\OrderBundle\Renderer\Pdf\WkHtmlToPdf(__DIR__, $this->targetDirs[3]);
    }

    /**
     * Gets the public 'coreshop.order.shipment.processable' shared service.
     *
     * @return \CoreShop\Component\Order\Processable\ProcessableOrderItems
     */
    protected function getCoreshop_Order_Shipment_ProcessableService()
    {
        return $this->services['coreshop.order.shipment.processable'] = new \CoreShop\Component\Order\Processable\ProcessableOrderItems(${($_ = isset($this->services['coreshop.repository.order_shipment']) ? $this->services['coreshop.repository.order_shipment'] : $this->get('coreshop.repository.order_shipment')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.transformer.cart_item_to_order_item' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\CartItemToOrderItemTransformer
     */
    protected function getCoreshop_Order_Transformer_CartItemToOrderItemService()
    {
        return $this->services['coreshop.order.transformer.cart_item_to_order_item'] = new \CoreShop\Bundle\OrderBundle\Transformer\CartItemToOrderItemTransformer(${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, 'items', ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.transformer.cart_item_to_quote_item' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\CartItemToQuoteItemTransformer
     */
    protected function getCoreshop_Order_Transformer_CartItemToQuoteItemService()
    {
        return $this->services['coreshop.order.transformer.cart_item_to_quote_item'] = new \CoreShop\Bundle\OrderBundle\Transformer\CartItemToQuoteItemTransformer(${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, 'items', ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.transformer.order_to_invoice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\OrderToInvoiceTransformer
     */
    protected function getCoreshop_Order_Transformer_OrderToInvoiceService()
    {
        return $this->services['coreshop.order.transformer.order_to_invoice'] = new \CoreShop\Bundle\OrderBundle\Transformer\OrderToInvoiceTransformer(${($_ = isset($this->services['coreshop.order_invoice.transformer.cart_item_to_order_item']) ? $this->services['coreshop.order_invoice.transformer.cart_item_to_order_item'] : $this->get('coreshop.order_invoice.transformer.cart_item_to_order_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.core.key_transformer']) ? $this->services['coreshop.core.key_transformer'] : $this->get('coreshop.core.key_transformer')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.order_invoice.number_generator.prefix_suffix']) ? $this->services['coreshop.order_invoice.number_generator.prefix_suffix'] : $this->get('coreshop.order_invoice.number_generator.prefix_suffix')) && false ?: '_'}, 'invoices', ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order_item']) ? $this->services['coreshop.repository.order_item'] : $this->get('coreshop.repository.order_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order_invoice_item']) ? $this->services['coreshop.factory.order_invoice_item'] : $this->get('coreshop.factory.order_invoice_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order_invoice']) ? $this->services['coreshop.repository.order_invoice'] : $this->get('coreshop.repository.order_invoice')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_item']) ? $this->services['coreshop.factory.tax_item'] : $this->get('coreshop.factory.tax_item')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order.transformer.order_to_shipment' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\OrderToShipmentTransformer
     */
    protected function getCoreshop_Order_Transformer_OrderToShipmentService()
    {
        return $this->services['coreshop.order.transformer.order_to_shipment'] = new \CoreShop\Bundle\OrderBundle\Transformer\OrderToShipmentTransformer(${($_ = isset($this->services['coreshop.order_shipment.transformer.order_item_to_shipment_item']) ? $this->services['coreshop.order_shipment.transformer.order_item_to_shipment_item'] : $this->get('coreshop.order_shipment.transformer.order_item_to_shipment_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.core.key_transformer']) ? $this->services['coreshop.core.key_transformer'] : $this->get('coreshop.core.key_transformer')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.order_shipment.number_generator.prefix_suffix']) ? $this->services['coreshop.order_shipment.number_generator.prefix_suffix'] : $this->get('coreshop.order_shipment.number_generator.prefix_suffix')) && false ?: '_'}, 'shipments', ${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.order_item']) ? $this->services['coreshop.repository.order_item'] : $this->get('coreshop.repository.order_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order_shipment_item']) ? $this->services['coreshop.factory.order_shipment_item'] : $this->get('coreshop.factory.order_shipment_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order_invoice.number_generator.prefix_suffix' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator
     */
    protected function getCoreshop_OrderInvoice_NumberGenerator_PrefixSuffixService()
    {
        return $this->services['coreshop.order_invoice.number_generator.prefix_suffix'] = new \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator(new \CoreShop\Bundle\OrderBundle\NumberGenerator\SequenceNumberGenerator(${($_ = isset($this->services['coreshop.sequence.generator']) ? $this->services['coreshop.sequence.generator'] : $this->get('coreshop.sequence.generator')) && false ?: '_'}, 'invoice'), ${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, 'system.invoice.prefix', 'system.invoice.suffix');
    }

    /**
     * Gets the public 'coreshop.order_invoice.transformer.cart_item_to_order_item' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\OrderItemToInvoiceItemTransformer
     */
    protected function getCoreshop_OrderInvoice_Transformer_CartItemToOrderItemService()
    {
        return $this->services['coreshop.order_invoice.transformer.cart_item_to_order_item'] = new \CoreShop\Bundle\OrderBundle\Transformer\OrderItemToInvoiceItemTransformer(${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, 'items', ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_rate']) ? $this->services['coreshop.factory.tax_rate'] : $this->get('coreshop.factory.tax_rate')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.tax_item']) ? $this->services['coreshop.factory.tax_item'] : $this->get('coreshop.factory.tax_item')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.order_shipment.number_generator.prefix_suffix' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator
     */
    protected function getCoreshop_OrderShipment_NumberGenerator_PrefixSuffixService()
    {
        return $this->services['coreshop.order_shipment.number_generator.prefix_suffix'] = new \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator(new \CoreShop\Bundle\OrderBundle\NumberGenerator\SequenceNumberGenerator(${($_ = isset($this->services['coreshop.sequence.generator']) ? $this->services['coreshop.sequence.generator'] : $this->get('coreshop.sequence.generator')) && false ?: '_'}, 'shipment'), ${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, 'system.shipment.prefix', 'system.shipment.suffix');
    }

    /**
     * Gets the public 'coreshop.order_shipment.transformer.order_item_to_shipment_item' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\OrderItemToShipmentItemTransformer
     */
    protected function getCoreshop_OrderShipment_Transformer_OrderItemToShipmentItemService()
    {
        return $this->services['coreshop.order_shipment.transformer.order_item_to_shipment_item'] = new \CoreShop\Bundle\OrderBundle\Transformer\OrderItemToShipmentItemTransformer(${($_ = isset($this->services['coreshop.object_service']) ? $this->services['coreshop.object_service'] : $this->get('coreshop.object_service')) && false ?: '_'}, 'items', ${($_ = isset($this->services['coreshop.transformer.event_dispatcher']) ? $this->services['coreshop.transformer.event_dispatcher'] : $this->getCoreshop_Transformer_EventDispatcherService()) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.payum.http_client' shared service.
     *
     * @return \Payum\Core\HttpClientInterface
     */
    protected function getCoreshop_Payum_HttpClientService()
    {
        return $this->services['coreshop.payum.http_client'] = \Payum\Core\Bridge\Guzzle\HttpClientFactory::create();
    }

    /**
     * Gets the public 'coreshop.payum_action.offine.resolve_next_route' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Action\Offline\ResolveNextRouteAction
     */
    protected function getCoreshop_PayumAction_Offine_ResolveNextRouteService()
    {
        return $this->services['coreshop.payum_action.offine.resolve_next_route'] = new \CoreShop\Bundle\PayumBundle\Action\Offline\ResolveNextRouteAction();
    }

    /**
     * Gets the public 'coreshop.payum_action.offline.convert_payment' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Action\Offline\ConvertPaymentAction
     */
    protected function getCoreshop_PayumAction_Offline_ConvertPaymentService()
    {
        return $this->services['coreshop.payum_action.offline.convert_payment'] = new \CoreShop\Bundle\PayumBundle\Action\Offline\ConvertPaymentAction();
    }

    /**
     * Gets the public 'coreshop.payum_action.offline.status' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Action\Offline\StatusAction
     */
    protected function getCoreshop_PayumAction_Offline_StatusService()
    {
        return $this->services['coreshop.payum_action.offline.status'] = new \CoreShop\Bundle\PayumBundle\Action\Offline\StatusAction();
    }

    /**
     * Gets the public 'coreshop.payum_action.resolve_next_route' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Action\ResolveNextRouteAction
     */
    protected function getCoreshop_PayumAction_ResolveNextRouteService()
    {
        return $this->services['coreshop.payum_action.resolve_next_route'] = new \CoreShop\Bundle\PayumBundle\Action\ResolveNextRouteAction();
    }

    /**
     * Gets the public 'coreshop.payum_extension.update_order_workflow_extension' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Extension\UpdateOrderWorkflowExtension
     */
    protected function getCoreshop_PayumExtension_UpdateOrderWorkflowExtensionService()
    {
        return $this->services['coreshop.payum_extension.update_order_workflow_extension'] = new \CoreShop\Bundle\PayumBundle\Extension\UpdateOrderWorkflowExtension(${($_ = isset($this->services['coreshop.repository.order']) ? $this->services['coreshop.repository.order'] : $this->get('coreshop.repository.order')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.workflow.manager.order']) ? $this->services['coreshop.workflow.manager.order'] : $this->get('coreshop.workflow.manager.order')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.payum_extension.update_payment_state' shared service.
     *
     * @return \CoreShop\Bundle\PayumBundle\Extension\UpdatePaymentStateExtension
     */
    protected function getCoreshop_PayumExtension_UpdatePaymentStateService()
    {
        return $this->services['coreshop.payum_extension.update_payment_state'] = new \CoreShop\Bundle\PayumBundle\Extension\UpdatePaymentStateExtension(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.order' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\OrderController
     */
    protected function getCoreshop_PimcoreController_OrderService()
    {
        $this->services['coreshop.pimcore_controller.order'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\OrderController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order'), ${($_ = isset($this->services['coreshop.repository.order']) ? $this->services['coreshop.repository.order'] : $this->get('coreshop.repository.order')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order']) ? $this->services['coreshop.factory.order'] : $this->get('coreshop.factory.order')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.order_creation' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\OrderCreationController
     */
    protected function getCoreshop_PimcoreController_OrderCreationService()
    {
        $this->services['coreshop.pimcore_controller.order_creation'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\OrderCreationController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order'), ${($_ = isset($this->services['coreshop.repository.order']) ? $this->services['coreshop.repository.order'] : $this->get('coreshop.repository.order')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order']) ? $this->services['coreshop.factory.order'] : $this->get('coreshop.factory.order')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.order_invoice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Controller\OrderInvoiceController
     */
    protected function getCoreshop_PimcoreController_OrderInvoiceService()
    {
        $this->services['coreshop.pimcore_controller.order_invoice'] = $instance = new \CoreShop\Bundle\OrderBundle\Controller\OrderInvoiceController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_invoice'), ${($_ = isset($this->services['coreshop.repository.order_invoice']) ? $this->services['coreshop.repository.order_invoice'] : $this->get('coreshop.repository.order_invoice')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order_invoice']) ? $this->services['coreshop.factory.order_invoice'] : $this->get('coreshop.factory.order_invoice')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.order_shipment' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Controller\OrderShipmentController
     */
    protected function getCoreshop_PimcoreController_OrderShipmentService()
    {
        $this->services['coreshop.pimcore_controller.order_shipment'] = $instance = new \CoreShop\Bundle\OrderBundle\Controller\OrderShipmentController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_shipment'), ${($_ = isset($this->services['coreshop.repository.order_shipment']) ? $this->services['coreshop.repository.order_shipment'] : $this->get('coreshop.repository.order_shipment')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.order_shipment']) ? $this->services['coreshop.factory.order_shipment'] : $this->get('coreshop.factory.order_shipment')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.quote' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Controller\QuoteController
     */
    protected function getCoreshop_PimcoreController_QuoteService()
    {
        $this->services['coreshop.pimcore_controller.quote'] = $instance = new \CoreShop\Bundle\OrderBundle\Controller\QuoteController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.quote'), ${($_ = isset($this->services['coreshop.repository.quote']) ? $this->services['coreshop.repository.quote'] : $this->get('coreshop.repository.quote')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.quote']) ? $this->services['coreshop.factory.quote'] : $this->get('coreshop.factory.quote')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.pimcore_controller.quote_creation' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Controller\QuoteCreationController
     */
    protected function getCoreshop_PimcoreController_QuoteCreationService()
    {
        $this->services['coreshop.pimcore_controller.quote_creation'] = $instance = new \CoreShop\Bundle\CoreBundle\Controller\QuoteCreationController(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.quote'), ${($_ = isset($this->services['coreshop.repository.quote']) ? $this->services['coreshop.repository.quote'] : $this->get('coreshop.repository.quote')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.quote']) ? $this->services['coreshop.factory.quote'] : $this->get('coreshop.factory.quote')) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.cached_product_price_rules_fetcher' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\CachedProductPriceRuleFetcher
     */
    protected function getCoreshop_Product_PriceCalculator_CachedProductPriceRulesFetcherService()
    {
        return $this->services['coreshop.product.price_calculator.cached_product_price_rules_fetcher'] = new \CoreShop\Bundle\ProductBundle\Calculator\CachedProductPriceRuleFetcher(new \CoreShop\Bundle\ProductBundle\Calculator\ProductPriceRuleFetcher(${($_ = isset($this->services['coreshop.repository.product_price_rule']) ? $this->services['coreshop.repository.product_price_rule'] : $this->get('coreshop.repository.product_price_rule')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\CachedProductPriceRuleFetcher
     */
    protected function getCoreshop_Product_PriceCalculator_CachedProductSpecificPriceRulesFetcherService()
    {
        return $this->services['coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher'] = new \CoreShop\Bundle\ProductBundle\Calculator\CachedProductPriceRuleFetcher(new \CoreShop\Bundle\ProductBundle\Calculator\ProductSpecificPriceRuleFetcher());
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.composite' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\CompositePriceCalculator
     */
    protected function getCoreshop_Product_PriceCalculator_CompositeService()
    {
        return $this->services['coreshop.product.price_calculator.composite'] = new \CoreShop\Bundle\ProductBundle\Calculator\CompositePriceCalculator(array(0 => ${($_ = isset($this->services['coreshop.product.price_calculator.tagged']) ? $this->services['coreshop.product.price_calculator.tagged'] : $this->get('coreshop.product.price_calculator.tagged')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.product_price_rules' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\PriceRuleCalculator
     */
    protected function getCoreshop_Product_PriceCalculator_ProductPriceRulesService()
    {
        return $this->services['coreshop.product.price_calculator.product_price_rules'] = new \CoreShop\Bundle\ProductBundle\Calculator\PriceRuleCalculator(${($_ = isset($this->services['coreshop.product.price_calculator.cached_product_price_rules_fetcher']) ? $this->services['coreshop.product.price_calculator.cached_product_price_rules_fetcher'] : $this->get('coreshop.product.price_calculator.cached_product_price_rules_fetcher')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.product_price_rule.processor']) ? $this->services['coreshop.product_price_rule.processor'] : $this->get('coreshop.product_price_rule.processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.product_price_rule.actions']) ? $this->services['coreshop.registry.product_price_rule.actions'] : $this->get('coreshop.registry.product_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.product_specific_price_rules' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\PriceRuleCalculator
     */
    protected function getCoreshop_Product_PriceCalculator_ProductSpecificPriceRulesService()
    {
        return $this->services['coreshop.product.price_calculator.product_specific_price_rules'] = new \CoreShop\Bundle\ProductBundle\Calculator\PriceRuleCalculator(${($_ = isset($this->services['coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher']) ? $this->services['coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher'] : $this->get('coreshop.product.price_calculator.cached_product_specific_price_rules_fetcher')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.product_specific_price_rule.processor']) ? $this->services['coreshop.product_specific_price_rule.processor'] : $this->get('coreshop.product_specific_price_rule.processor')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.actions']) ? $this->services['coreshop.registry.product_specific_price_rule.actions'] : $this->get('coreshop.registry.product_specific_price_rule.actions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product.price_calculator.tagged' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Calculator\ProductPriceCalculator
     */
    protected function getCoreshop_Product_PriceCalculator_TaggedService()
    {
        return $this->services['coreshop.product.price_calculator.tagged'] = new \CoreShop\Bundle\ProductBundle\Calculator\ProductPriceCalculator(${($_ = isset($this->services['coreshop.registry.product.price_calculators']) ? $this->services['coreshop.registry.product.price_calculators'] : $this->get('coreshop.registry.product.price_calculators')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product.tax_factory' shared service.
     *
     * @return \CoreShop\Component\Core\Product\ProductTaxCalculatorFactory
     */
    protected function getCoreshop_Product_TaxFactoryService()
    {
        return $this->services['coreshop.product.tax_factory'] = new \CoreShop\Component\Core\Product\ProductTaxCalculatorFactory(${($_ = isset($this->services['coreshop.taxation.factory.cached_tax_calculator']) ? $this->services['coreshop.taxation.factory.cached_tax_calculator'] : $this->get('coreshop.taxation.factory.cached_tax_calculator')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.address']) ? $this->services['coreshop.factory.address'] : $this->get('coreshop.factory.address')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.country']) ? $this->services['coreshop.context.country'] : $this->get('coreshop.context.country')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product.taxed_price_calculator' shared service.
     *
     * @return \CoreShop\Component\Core\Product\TaxedProductPriceCalculator
     */
    protected function getCoreshop_Product_TaxedPriceCalculatorService()
    {
        return $this->services['coreshop.product.taxed_price_calculator'] = new \CoreShop\Component\Core\Product\TaxedProductPriceCalculator(${($_ = isset($this->services['coreshop.order.purchasable.price_calculator']) ? $this->services['coreshop.order.purchasable.price_calculator'] : $this->get('coreshop.order.purchasable.price_calculator')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.order.purchasable.discount_calculator']) ? $this->services['coreshop.order.purchasable.discount_calculator'] : $this->get('coreshop.order.purchasable.discount_calculator')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.product.tax_factory']) ? $this->services['coreshop.product.tax_factory'] : $this->get('coreshop.product.tax_factory')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_price_rule.action.discount_amount' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Action\DiscountAmountActionProcessor
     */
    protected function getCoreshop_ProductPriceRule_Action_DiscountAmountService()
    {
        return $this->services['coreshop.product_price_rule.action.discount_amount'] = new \CoreShop\Bundle\ProductBundle\Rule\Action\DiscountAmountActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_price_rule.action.discount_percent' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Action\DiscountPercentActionProcessor
     */
    protected function getCoreshop_ProductPriceRule_Action_DiscountPercentService()
    {
        return $this->services['coreshop.product_price_rule.action.discount_percent'] = new \CoreShop\Bundle\ProductBundle\Rule\Action\DiscountPercentActionProcessor();
    }

    /**
     * Gets the public 'coreshop.product_price_rule.action.price' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Action\PriceActionProcessor
     */
    protected function getCoreshop_ProductPriceRule_Action_PriceService()
    {
        return $this->services['coreshop.product_price_rule.action.price'] = new \CoreShop\Bundle\ProductBundle\Rule\Action\PriceActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_price_rule.condition.categories' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Condition\CategoriesConditionChecker
     */
    protected function getCoreshop_ProductPriceRule_Condition_CategoriesService()
    {
        return $this->services['coreshop.product_price_rule.condition.categories'] = new \CoreShop\Bundle\ProductBundle\Rule\Condition\CategoriesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.product_price_rule.condition.nested' shared service.
     *
     * @return \CoreShop\Component\Rule\Condition\NestedConditionChecker
     */
    protected function getCoreshop_ProductPriceRule_Condition_NestedService()
    {
        return $this->services['coreshop.product_price_rule.condition.nested'] = new \CoreShop\Component\Rule\Condition\NestedConditionChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_price_rule.conditions']) ? $this->services['coreshop.registry.product_price_rule.conditions'] : $this->get('coreshop.registry.product_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.product_price_rule.condition.products' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Condition\ProductsConditionChecker
     */
    protected function getCoreshop_ProductPriceRule_Condition_ProductsService()
    {
        return $this->services['coreshop.product_price_rule.condition.products'] = new \CoreShop\Bundle\ProductBundle\Rule\Condition\ProductsConditionChecker();
    }

    /**
     * Gets the public 'coreshop.product_price_rule.condition.quantity' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\QuantityConditionChecker
     */
    protected function getCoreshop_ProductPriceRule_Condition_QuantityService()
    {
        return $this->services['coreshop.product_price_rule.condition.quantity'] = new \CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\QuantityConditionChecker(${($_ = isset($this->services['coreshop.cart.manager']) ? $this->services['coreshop.cart.manager'] : $this->get('coreshop.cart.manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_price_rule.condition.timespan' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Rule\Condition\TimeSpanConditionChecker
     */
    protected function getCoreshop_ProductPriceRule_Condition_TimespanService()
    {
        return $this->services['coreshop.product_price_rule.condition.timespan'] = new \CoreShop\Bundle\ProductBundle\Rule\Condition\TimeSpanConditionChecker();
    }

    /**
     * Gets the public 'coreshop.product_price_rule.conditions.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor
     */
    protected function getCoreshop_ProductPriceRule_Conditions_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_price_rule.conditions']) ? $this->services['coreshop.registry.product_price_rule.conditions'] : $this->get('coreshop.registry.product_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_price_rule.processor' shared service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor
     */
    protected function getCoreshop_ProductPriceRule_ProcessorService()
    {
        return $this->services['coreshop.product_price_rule.processor'] = new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_price_rule.conditions']) ? $this->services['coreshop.registry.product_price_rule.conditions'] : $this->get('coreshop.registry.product_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.product_specific_price_rule.condition.nested' shared service.
     *
     * @return \CoreShop\Component\Rule\Condition\NestedConditionChecker
     */
    protected function getCoreshop_ProductSpecificPriceRule_Condition_NestedService()
    {
        return $this->services['coreshop.product_specific_price_rule.condition.nested'] = new \CoreShop\Component\Rule\Condition\NestedConditionChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.conditions']) ? $this->services['coreshop.registry.product_specific_price_rule.conditions'] : $this->get('coreshop.registry.product_specific_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.product_specific_price_rule.conditions.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor
     */
    protected function getCoreshop_ProductSpecificPriceRule_Conditions_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.conditions']) ? $this->services['coreshop.registry.product_specific_price_rule.conditions'] : $this->get('coreshop.registry.product_specific_price_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.product_specific_price_rule.processor' shared service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor
     */
    protected function getCoreshop_ProductSpecificPriceRule_ProcessorService()
    {
        return $this->services['coreshop.product_specific_price_rule.processor'] = new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.product_specific_price_rule.conditions']) ? $this->services['coreshop.registry.product_specific_price_rule.conditions'] : $this->get('coreshop.registry.product_specific_price_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.quote.number_generator.prefix_suffix' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator
     */
    protected function getCoreshop_Quote_NumberGenerator_PrefixSuffixService()
    {
        return $this->services['coreshop.quote.number_generator.prefix_suffix'] = new \CoreShop\Bundle\CoreBundle\NumberGenerator\SaleNumberGenerator(new \CoreShop\Bundle\OrderBundle\NumberGenerator\SequenceNumberGenerator(${($_ = isset($this->services['coreshop.sequence.generator']) ? $this->services['coreshop.sequence.generator'] : $this->get('coreshop.sequence.generator')) && false ?: '_'}, 'quote'), ${($_ = isset($this->services['coreshop.configuration.service']) ? $this->services['coreshop.configuration.service'] : $this->get('coreshop.configuration.service')) && false ?: '_'}, 'system.quote.prefix', 'system.quote.suffix');
    }

    /**
     * Gets the public 'coreshop.registry.cart_price_rule.actions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_CartPriceRule_ActionsService()
    {
        $this->services['coreshop.registry.cart_price_rule.actions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Order\\Cart\\Rule\\Action\\CartPriceRuleActionProcessorInterface', 'product-price-rule-actions');

        $instance->register('discountAmount', ${($_ = isset($this->services['coreshop.cart_price_rule.action.discount_amount']) ? $this->services['coreshop.cart_price_rule.action.discount_amount'] : $this->get('coreshop.cart_price_rule.action.discount_amount')) && false ?: '_'});
        $instance->register('discountPercent', ${($_ = isset($this->services['coreshop.cart_price_rule.action.discount_percent']) ? $this->services['coreshop.cart_price_rule.action.discount_percent'] : $this->get('coreshop.cart_price_rule.action.discount_percent')) && false ?: '_'});
        $instance->register('freeShipping', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.action.free_shipping']) ? $this->services['coreshop.rule.cart_price_rule.action.free_shipping'] : $this->get('coreshop.rule.cart_price_rule.action.free_shipping')) && false ?: '_'});
        $instance->register('giftProduct', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.action.gift_product']) ? $this->services['coreshop.rule.cart_price_rule.action.gift_product'] : $this->get('coreshop.rule.cart_price_rule.action.gift_product')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.cart_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_CartPriceRule_ConditionsService()
    {
        $this->services['coreshop.registry.cart_price_rule.conditions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'product-price-rule-conditions');

        $instance->register('nested', ${($_ = isset($this->services['coreshop.cart_price_rule.condition.nested']) ? $this->services['coreshop.cart_price_rule.condition.nested'] : $this->get('coreshop.cart_price_rule.condition.nested')) && false ?: '_'});
        $instance->register('timespan', ${($_ = isset($this->services['coreshop.cart_price_rule.condition.timespan']) ? $this->services['coreshop.cart_price_rule.condition.timespan'] : $this->get('coreshop.cart_price_rule.condition.timespan')) && false ?: '_'});
        $instance->register('amount', ${($_ = isset($this->services['coreshop.cart_price_rule.condition.amount']) ? $this->services['coreshop.cart_price_rule.condition.amount'] : $this->get('coreshop.cart_price_rule.condition.amount')) && false ?: '_'});
        $instance->register('customers', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.customers']) ? $this->services['coreshop.rule.cart_price_rule.condition.customers'] : $this->get('coreshop.rule.cart_price_rule.condition.customers')) && false ?: '_'});
        $instance->register('customerGroups', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.customer_groups']) ? $this->services['coreshop.rule.cart_price_rule.condition.customer_groups'] : $this->get('coreshop.rule.cart_price_rule.condition.customer_groups')) && false ?: '_'});
        $instance->register('countries', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.countries']) ? $this->services['coreshop.rule.cart_price_rule.condition.countries'] : $this->get('coreshop.rule.cart_price_rule.condition.countries')) && false ?: '_'});
        $instance->register('zones', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.zones']) ? $this->services['coreshop.rule.cart_price_rule.condition.zones'] : $this->get('coreshop.rule.cart_price_rule.condition.zones')) && false ?: '_'});
        $instance->register('stores', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.stores']) ? $this->services['coreshop.rule.cart_price_rule.condition.stores'] : $this->get('coreshop.rule.cart_price_rule.condition.stores')) && false ?: '_'});
        $instance->register('currencies', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.currencies']) ? $this->services['coreshop.rule.cart_price_rule.condition.currencies'] : $this->get('coreshop.rule.cart_price_rule.condition.currencies')) && false ?: '_'});
        $instance->register('carriers', ${($_ = isset($this->services['coreshop.rule.cart_price_rule.condition.carriers']) ? $this->services['coreshop.rule.cart_price_rule.condition.carriers'] : $this->get('coreshop.rule.cart_price_rule.condition.carriers')) && false ?: '_'});
        $instance->register('products', ${($_ = isset($this->services['coreshop.cart_price_rule.condition.products']) ? $this->services['coreshop.cart_price_rule.condition.products'] : $this->get('coreshop.cart_price_rule.condition.products')) && false ?: '_'});
        $instance->register('categories', ${($_ = isset($this->services['coreshop.cart_price_rule.condition.categories']) ? $this->services['coreshop.cart_price_rule.condition.categories'] : $this->get('coreshop.cart_price_rule.condition.categories')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.filter.condition_types' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Filter_ConditionTypesService()
    {
        $this->services['coreshop.registry.filter.condition_types'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Index\\Filter\\FilterConditionProcessorInterface', 'filter-processor');

        $instance->register('select', ${($_ = isset($this->services['coreshop.filter.condition_type.select']) ? $this->services['coreshop.filter.condition_type.select'] : $this->get('coreshop.filter.condition_type.select')) && false ?: '_'});
        $instance->register('range', ${($_ = isset($this->services['coreshop.filter.condition_type.range']) ? $this->services['coreshop.filter.condition_type.range'] : $this->get('coreshop.filter.condition_type.range')) && false ?: '_'});
        $instance->register('multiselect', ${($_ = isset($this->services['coreshop.filter.condition_type.multiselect']) ? $this->services['coreshop.filter.condition_type.multiselect'] : $this->get('coreshop.filter.condition_type.multiselect')) && false ?: '_'});
        $instance->register('boolean', ${($_ = isset($this->services['coreshop.filter.condition_type.boolean']) ? $this->services['coreshop.filter.condition_type.boolean'] : $this->get('coreshop.filter.condition_type.boolean')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.index.class_helpers' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Index_ClassHelpersService()
    {
        $this->services['coreshop.registry.index.class_helpers'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Index\\ClassHelper\\ClassHelperInterface', 'index-class-helpers');

        $instance->register('CoreShopProduct', ${($_ = isset($this->services['coreshop.index.class_helper.product']) ? $this->services['coreshop.index.class_helper.product'] : $this->get('coreshop.index.class_helper.product')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.index.column_types' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Index_ColumnTypesService()
    {
        $this->services['coreshop.registry.index.column_types'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('Symfony\\Component\\Form\\FormTypeInterface', 'index-column-types');

        $instance->register('classificationstore', ${($_ = isset($this->services['coreshop.index.column_type.classification_store']) ? $this->services['coreshop.index.column_type.classification_store'] : $this->get('coreshop.index.column_type.classification_store')) && false ?: '_'});
        $instance->register('fieldcollection', ${($_ = isset($this->services['coreshop.index.column_type.field_collection']) ? $this->services['coreshop.index.column_type.field_collection'] : $this->get('coreshop.index.column_type.field_collection')) && false ?: '_'});
        $instance->register('localizedfields', ${($_ = isset($this->services['coreshop.index.column_type.localized_fields']) ? $this->services['coreshop.index.column_type.localized_fields'] : $this->get('coreshop.index.column_type.localized_fields')) && false ?: '_'});
        $instance->register('objectbrick', ${($_ = isset($this->services['coreshop.index.column_type.object_brick']) ? $this->services['coreshop.index.column_type.object_brick'] : $this->get('coreshop.index.column_type.object_brick')) && false ?: '_'});
        $instance->register('object', ${($_ = isset($this->services['coreshop.index.column_type.object']) ? $this->services['coreshop.index.column_type.object'] : $this->get('coreshop.index.column_type.object')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.index.getter' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Index_GetterService()
    {
        $this->services['coreshop.registry.index.getter'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Index\\Getter\\GetterInterface', 'index-getters');

        $instance->register('brick', ${($_ = isset($this->services['coreshop.index.getter.brickfield']) ? $this->services['coreshop.index.getter.brickfield'] : $this->get('coreshop.index.getter.brickfield')) && false ?: '_'});
        $instance->register('classificationstore', ${($_ = isset($this->services['coreshop.index.getter.classification_store']) ? $this->services['coreshop.index.getter.classification_store'] : $this->get('coreshop.index.getter.classification_store')) && false ?: '_'});
        $instance->register('fieldcollection', ${($_ = isset($this->services['coreshop.index.getter.field_collection']) ? $this->services['coreshop.index.getter.field_collection'] : $this->get('coreshop.index.getter.field_collection')) && false ?: '_'});
        $instance->register('localizedfield', ${($_ = isset($this->services['coreshop.index.getter.localized_field']) ? $this->services['coreshop.index.getter.localized_field'] : $this->get('coreshop.index.getter.localized_field')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.index.interpreter' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Index_InterpreterService()
    {
        $this->services['coreshop.registry.index.interpreter'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Index\\Interpreter\\InterpreterInterface', 'index-interpreters');

        $instance->register('soundex', ${($_ = isset($this->services['coreshop.index.interpreter.soundex']) ? $this->services['coreshop.index.interpreter.soundex'] : $this->get('coreshop.index.interpreter.soundex')) && false ?: '_'});
        $instance->register('objectId', ${($_ = isset($this->services['coreshop.index.interpreter.object_id']) ? $this->services['coreshop.index.interpreter.object_id'] : $this->get('coreshop.index.interpreter.object_id')) && false ?: '_'});
        $instance->register('objectIdSum', ${($_ = isset($this->services['coreshop.index.interpreter.object_id_sum']) ? $this->services['coreshop.index.interpreter.object_id_sum'] : $this->get('coreshop.index.interpreter.object_id_sum')) && false ?: '_'});
        $instance->register('object', ${($_ = isset($this->services['coreshop.index.interpreter.object']) ? $this->services['coreshop.index.interpreter.object'] : $this->get('coreshop.index.interpreter.object')) && false ?: '_'});
        $instance->register('objectProperty', ${($_ = isset($this->services['coreshop.index.interpreter.object_property']) ? $this->services['coreshop.index.interpreter.object_property'] : $this->get('coreshop.index.interpreter.object_property')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.index.worker' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Index_WorkerService()
    {
        $this->services['coreshop.registry.index.worker'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Index\\Worker\\WorkerInterface', 'index-workers');

        $instance->register('mysql', new \CoreShop\Bundle\IndexBundle\Worker\MysqlWorker(${($_ = isset($this->services['coreshop.registry.index.class_helpers']) ? $this->services['coreshop.registry.index.class_helpers'] : $this->get('coreshop.registry.index.class_helpers')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.index.getter']) ? $this->services['coreshop.registry.index.getter'] : $this->get('coreshop.registry.index.getter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.registry.index.interpreter']) ? $this->services['coreshop.registry.index.interpreter'] : $this->get('coreshop.registry.index.interpreter')) && false ?: '_'}));

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_ActionsService()
    {
        $a = ${($_ = isset($this->services['coreshop.notification_rule.action.order_mail']) ? $this->services['coreshop.notification_rule.action.order_mail'] : $this->get('coreshop.notification_rule.action.order_mail')) && false ?: '_'};
        $b = ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'};

        $this->services['coreshop.registry.notification_rule.actions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Notification\\Rule\\Action\\NotificationRuleProcessorInterface', 'notification-rule-actions');

        $instance->register('order.orderMail', $a);
        $instance->register('invoice.orderMail', $a);
        $instance->register('shipment.orderMail', $a);
        $instance->register('order.mail', $b);
        $instance->register('invoice.mail', $b);
        $instance->register('shipment.mail', $b);
        $instance->register('user.mail', $b);
        $instance->register('payment.mail', $b);
        $instance->register('quote.mail', $b);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.invoice' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_InvoiceService()
    {
        $this->services['coreshop.registry.notification_rule.actions.invoice'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-invoice');

        $instance->register('orderMail', ${($_ = isset($this->services['coreshop.notification_rule.action.order_mail']) ? $this->services['coreshop.notification_rule.action.order_mail'] : $this->get('coreshop.notification_rule.action.order_mail')) && false ?: '_'});
        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.order' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_OrderService()
    {
        $this->services['coreshop.registry.notification_rule.actions.order'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-order');

        $instance->register('orderMail', ${($_ = isset($this->services['coreshop.notification_rule.action.order_mail']) ? $this->services['coreshop.notification_rule.action.order_mail'] : $this->get('coreshop.notification_rule.action.order_mail')) && false ?: '_'});
        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.payment' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_PaymentService()
    {
        $this->services['coreshop.registry.notification_rule.actions.payment'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-payment');

        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.quote' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_QuoteService()
    {
        $this->services['coreshop.registry.notification_rule.actions.quote'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-quote');

        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.shipment' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_ShipmentService()
    {
        $this->services['coreshop.registry.notification_rule.actions.shipment'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-shipment');

        $instance->register('orderMail', ${($_ = isset($this->services['coreshop.notification_rule.action.order_mail']) ? $this->services['coreshop.notification_rule.action.order_mail'] : $this->get('coreshop.notification_rule.action.order_mail')) && false ?: '_'});
        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.actions.user' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Actions_UserService()
    {
        $this->services['coreshop.registry.notification_rule.actions.user'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-actions-user');

        $instance->register('mail', ${($_ = isset($this->services['coreshop.notification_rule.action.mail']) ? $this->services['coreshop.notification_rule.action.mail'] : $this->get('coreshop.notification_rule.action.mail')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_ConditionsService()
    {
        $a = ${($_ = isset($this->services['coreshop.notification_rule.condition.order.carriers']) ? $this->services['coreshop.notification_rule.condition.order.carriers'] : $this->get('coreshop.notification_rule.condition.order.carriers')) && false ?: '_'};

        $this->services['coreshop.registry.notification_rule.conditions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions');

        $instance->register('order.invoiceState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.invoice_state']) ? $this->services['coreshop.notification_rule.condition.order.invoice_state'] : $this->get('coreshop.notification_rule.condition.order.invoice_state')) && false ?: '_'});
        $instance->register('order.shipmentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.shipment_state']) ? $this->services['coreshop.notification_rule.condition.order.shipment_state'] : $this->get('coreshop.notification_rule.condition.order.shipment_state')) && false ?: '_'});
        $instance->register('order.orderState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.order_state']) ? $this->services['coreshop.notification_rule.condition.order.order_state'] : $this->get('coreshop.notification_rule.condition.order.order_state')) && false ?: '_'});
        $instance->register('order.paymentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.payment_state']) ? $this->services['coreshop.notification_rule.condition.order.payment_state'] : $this->get('coreshop.notification_rule.condition.order.payment_state')) && false ?: '_'});
        $instance->register('order.carriers', $a);
        $instance->register('quote.carriers', $a);
        $instance->register('invoice.invoiceState', ${($_ = isset($this->services['coreshop.notification_rule.condition.invoice.invoice']) ? $this->services['coreshop.notification_rule.condition.invoice.invoice'] : $this->get('coreshop.notification_rule.condition.invoice.invoice')) && false ?: '_'});
        $instance->register('shipment.shipmentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.shipment.shipment']) ? $this->services['coreshop.notification_rule.condition.shipment.shipment'] : $this->get('coreshop.notification_rule.condition.shipment.shipment')) && false ?: '_'});
        $instance->register('payment.paymentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.payment.payment_state']) ? $this->services['coreshop.notification_rule.condition.payment.payment_state'] : $this->get('coreshop.notification_rule.condition.payment.payment_state')) && false ?: '_'});
        $instance->register('user.userType', ${($_ = isset($this->services['coreshop.notification_rule.condition.user.user_type']) ? $this->services['coreshop.notification_rule.condition.user.user_type'] : $this->get('coreshop.notification_rule.condition.user.user_type')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.invoice' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_InvoiceService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.invoice'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-invoice');

        $instance->register('invoiceState', ${($_ = isset($this->services['coreshop.notification_rule.condition.invoice.invoice']) ? $this->services['coreshop.notification_rule.condition.invoice.invoice'] : $this->get('coreshop.notification_rule.condition.invoice.invoice')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.order' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_OrderService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.order'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-order');

        $instance->register('invoiceState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.invoice_state']) ? $this->services['coreshop.notification_rule.condition.order.invoice_state'] : $this->get('coreshop.notification_rule.condition.order.invoice_state')) && false ?: '_'});
        $instance->register('shipmentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.shipment_state']) ? $this->services['coreshop.notification_rule.condition.order.shipment_state'] : $this->get('coreshop.notification_rule.condition.order.shipment_state')) && false ?: '_'});
        $instance->register('orderState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.order_state']) ? $this->services['coreshop.notification_rule.condition.order.order_state'] : $this->get('coreshop.notification_rule.condition.order.order_state')) && false ?: '_'});
        $instance->register('paymentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.payment_state']) ? $this->services['coreshop.notification_rule.condition.order.payment_state'] : $this->get('coreshop.notification_rule.condition.order.payment_state')) && false ?: '_'});
        $instance->register('carriers', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.carriers']) ? $this->services['coreshop.notification_rule.condition.order.carriers'] : $this->get('coreshop.notification_rule.condition.order.carriers')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.payment' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_PaymentService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.payment'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-payment');

        $instance->register('paymentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.payment.payment_state']) ? $this->services['coreshop.notification_rule.condition.payment.payment_state'] : $this->get('coreshop.notification_rule.condition.payment.payment_state')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.quote' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_QuoteService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.quote'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-quote');

        $instance->register('carriers', ${($_ = isset($this->services['coreshop.notification_rule.condition.order.carriers']) ? $this->services['coreshop.notification_rule.condition.order.carriers'] : $this->get('coreshop.notification_rule.condition.order.carriers')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.shipment' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_ShipmentService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.shipment'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-shipment');

        $instance->register('shipmentState', ${($_ = isset($this->services['coreshop.notification_rule.condition.shipment.shipment']) ? $this->services['coreshop.notification_rule.condition.shipment.shipment'] : $this->get('coreshop.notification_rule.condition.shipment.shipment')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.notification_rule.conditions.user' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_NotificationRule_Conditions_UserService()
    {
        $this->services['coreshop.registry.notification_rule.conditions.user'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'notification-rule-conditions-user');

        $instance->register('userType', ${($_ = isset($this->services['coreshop.notification_rule.condition.user.user_type']) ? $this->services['coreshop.notification_rule.condition.user.user_type'] : $this->get('coreshop.notification_rule.condition.user.user_type')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.order.purchasable.discount_calculators' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Registry_Order_Purchasable_DiscountCalculatorsService()
    {
        $this->services['coreshop.registry.order.purchasable.discount_calculators'] = $instance = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Component\\Order\\Calculator\\PurchasableDiscountCalculatorInterface', 'purchasable-discount-calculators');

        $instance->register('no_discount', 10, ${($_ = isset($this->services['coreshop.order.purchasable.discount_calculator.no_discount']) ? $this->services['coreshop.order.purchasable.discount_calculator.no_discount'] : $this->get('coreshop.order.purchasable.discount_calculator.no_discount')) && false ?: '_'});
        $instance->register('product', 20, ${($_ = isset($this->services['coreshop.order.purchasable.discount_calculator.product']) ? $this->services['coreshop.order.purchasable.discount_calculator.product'] : $this->get('coreshop.order.purchasable.discount_calculator.product')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.order.purchasable.price_calculators' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Registry_Order_Purchasable_PriceCalculatorsService()
    {
        $this->services['coreshop.registry.order.purchasable.price_calculators'] = $instance = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Component\\Order\\Calculator\\PurchasablePriceCalculatorInterface', 'purchasable-price-calculators');

        $instance->register('price_aware', 10, ${($_ = isset($this->services['coreshop.order.purchasable.price_calculator.price_aware']) ? $this->services['coreshop.order.purchasable.price_calculator.price_aware'] : $this->get('coreshop.order.purchasable.price_calculator.price_aware')) && false ?: '_'});
        $instance->register('product', 20, ${($_ = isset($this->services['coreshop.order.purchasable.price_calculator.product']) ? $this->services['coreshop.order.purchasable.price_calculator.product'] : $this->get('coreshop.order.purchasable.price_calculator.product')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.product.price_calculators' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Registry_Product_PriceCalculatorsService()
    {
        $this->services['coreshop.registry.product.price_calculators'] = $instance = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Component\\Product\\Calculator\\ProductPriceCalculatorInterface', 'product-price-calculators');

        $instance->register('product_price_rules', 20, ${($_ = isset($this->services['coreshop.product.price_calculator.product_price_rules']) ? $this->services['coreshop.product.price_calculator.product_price_rules'] : $this->get('coreshop.product.price_calculator.product_price_rules')) && false ?: '_'});
        $instance->register('product_specific_price_rules', 30, ${($_ = isset($this->services['coreshop.product.price_calculator.product_specific_price_rules']) ? $this->services['coreshop.product.price_calculator.product_specific_price_rules'] : $this->get('coreshop.product.price_calculator.product_specific_price_rules')) && false ?: '_'});
        $instance->register('property', 10, ${($_ = isset($this->services['coreshop.core.product.price_calculator.store_price']) ? $this->services['coreshop.core.product.price_calculator.store_price'] : $this->get('coreshop.core.product.price_calculator.store_price')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.product_price_rule.actions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ProductPriceRule_ActionsService()
    {
        $this->services['coreshop.registry.product_price_rule.actions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Product\\Rule\\Action\\ProductPriceActionProcessorInterface', 'product-price-rule-actions');

        $instance->register('price', ${($_ = isset($this->services['coreshop.product_price_rule.action.price']) ? $this->services['coreshop.product_price_rule.action.price'] : $this->get('coreshop.product_price_rule.action.price')) && false ?: '_'});
        $instance->register('discountAmount', ${($_ = isset($this->services['coreshop.product_price_rule.action.discount_amount']) ? $this->services['coreshop.product_price_rule.action.discount_amount'] : $this->get('coreshop.product_price_rule.action.discount_amount')) && false ?: '_'});
        $instance->register('discountPercent', ${($_ = isset($this->services['coreshop.product_price_rule.action.discount_percent']) ? $this->services['coreshop.product_price_rule.action.discount_percent'] : $this->get('coreshop.product_price_rule.action.discount_percent')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.product_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ProductPriceRule_ConditionsService()
    {
        $this->services['coreshop.registry.product_price_rule.conditions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'product-price-rule-conditions');

        $instance->register('products', ${($_ = isset($this->services['coreshop.product_price_rule.condition.products']) ? $this->services['coreshop.product_price_rule.condition.products'] : $this->get('coreshop.product_price_rule.condition.products')) && false ?: '_'});
        $instance->register('nested', ${($_ = isset($this->services['coreshop.product_price_rule.condition.nested']) ? $this->services['coreshop.product_price_rule.condition.nested'] : $this->get('coreshop.product_price_rule.condition.nested')) && false ?: '_'});
        $instance->register('categories', ${($_ = isset($this->services['coreshop.product_price_rule.condition.categories']) ? $this->services['coreshop.product_price_rule.condition.categories'] : $this->get('coreshop.product_price_rule.condition.categories')) && false ?: '_'});
        $instance->register('timespan', ${($_ = isset($this->services['coreshop.product_price_rule.condition.timespan']) ? $this->services['coreshop.product_price_rule.condition.timespan'] : $this->get('coreshop.product_price_rule.condition.timespan')) && false ?: '_'});
        $instance->register('quantity', ${($_ = isset($this->services['coreshop.product_price_rule.condition.quantity']) ? $this->services['coreshop.product_price_rule.condition.quantity'] : $this->get('coreshop.product_price_rule.condition.quantity')) && false ?: '_'});
        $instance->register('customers', ${($_ = isset($this->services['coreshop.rule.condition.customers']) ? $this->services['coreshop.rule.condition.customers'] : $this->get('coreshop.rule.condition.customers')) && false ?: '_'});
        $instance->register('customerGroups', ${($_ = isset($this->services['coreshop.rule.condition.customer_groups']) ? $this->services['coreshop.rule.condition.customer_groups'] : $this->get('coreshop.rule.condition.customer_groups')) && false ?: '_'});
        $instance->register('countries', ${($_ = isset($this->services['coreshop.rule.condition.countries']) ? $this->services['coreshop.rule.condition.countries'] : $this->get('coreshop.rule.condition.countries')) && false ?: '_'});
        $instance->register('zones', ${($_ = isset($this->services['coreshop.rule.condition.zones']) ? $this->services['coreshop.rule.condition.zones'] : $this->get('coreshop.rule.condition.zones')) && false ?: '_'});
        $instance->register('stores', ${($_ = isset($this->services['coreshop.rule.condition.stores']) ? $this->services['coreshop.rule.condition.stores'] : $this->get('coreshop.rule.condition.stores')) && false ?: '_'});
        $instance->register('currencies', ${($_ = isset($this->services['coreshop.rule.condition.currencies']) ? $this->services['coreshop.rule.condition.currencies'] : $this->get('coreshop.rule.condition.currencies')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.product_specific_price_rule.actions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ProductSpecificPriceRule_ActionsService()
    {
        $this->services['coreshop.registry.product_specific_price_rule.actions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Product\\Rule\\Action\\ProductPriceActionProcessorInterface', 'product-price-rule-actions');

        $instance->register('price', ${($_ = isset($this->services['coreshop.product_price_rule.action.price']) ? $this->services['coreshop.product_price_rule.action.price'] : $this->get('coreshop.product_price_rule.action.price')) && false ?: '_'});
        $instance->register('discountAmount', ${($_ = isset($this->services['coreshop.product_price_rule.action.discount_amount']) ? $this->services['coreshop.product_price_rule.action.discount_amount'] : $this->get('coreshop.product_price_rule.action.discount_amount')) && false ?: '_'});
        $instance->register('discountPercent', ${($_ = isset($this->services['coreshop.product_price_rule.action.discount_percent']) ? $this->services['coreshop.product_price_rule.action.discount_percent'] : $this->get('coreshop.product_price_rule.action.discount_percent')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.product_specific_price_rule.conditions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ProductSpecificPriceRule_ConditionsService()
    {
        $this->services['coreshop.registry.product_specific_price_rule.conditions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'specific-product-price-rule-conditions');

        $instance->register('nested', ${($_ = isset($this->services['coreshop.product_specific_price_rule.condition.nested']) ? $this->services['coreshop.product_specific_price_rule.condition.nested'] : $this->get('coreshop.product_specific_price_rule.condition.nested')) && false ?: '_'});
        $instance->register('timespan', ${($_ = isset($this->services['coreshop.product_price_rule.condition.timespan']) ? $this->services['coreshop.product_price_rule.condition.timespan'] : $this->get('coreshop.product_price_rule.condition.timespan')) && false ?: '_'});
        $instance->register('customers', ${($_ = isset($this->services['coreshop.rule.condition.customers']) ? $this->services['coreshop.rule.condition.customers'] : $this->get('coreshop.rule.condition.customers')) && false ?: '_'});
        $instance->register('customerGroups', ${($_ = isset($this->services['coreshop.rule.condition.customer_groups']) ? $this->services['coreshop.rule.condition.customer_groups'] : $this->get('coreshop.rule.condition.customer_groups')) && false ?: '_'});
        $instance->register('countries', ${($_ = isset($this->services['coreshop.rule.condition.countries']) ? $this->services['coreshop.rule.condition.countries'] : $this->get('coreshop.rule.condition.countries')) && false ?: '_'});
        $instance->register('zones', ${($_ = isset($this->services['coreshop.rule.condition.zones']) ? $this->services['coreshop.rule.condition.zones'] : $this->get('coreshop.rule.condition.zones')) && false ?: '_'});
        $instance->register('stores', ${($_ = isset($this->services['coreshop.rule.condition.stores']) ? $this->services['coreshop.rule.condition.stores'] : $this->get('coreshop.rule.condition.stores')) && false ?: '_'});
        $instance->register('currencies', ${($_ = isset($this->services['coreshop.rule.condition.currencies']) ? $this->services['coreshop.rule.condition.currencies'] : $this->get('coreshop.rule.condition.currencies')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.reports' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ReportsService()
    {
        $this->services['coreshop.registry.reports'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Core\\Report\\ReportInterface', 'coreshop-reports');

        $instance->register('products', ${($_ = isset($this->services['coreshop.report.products']) ? $this->services['coreshop.report.products'] : $this->get('coreshop.report.products')) && false ?: '_'});
        $instance->register('categories', ${($_ = isset($this->services['coreshop.report.categories']) ? $this->services['coreshop.report.categories'] : $this->get('coreshop.report.categories')) && false ?: '_'});
        $instance->register('customers', ${($_ = isset($this->services['coreshop.report.customers']) ? $this->services['coreshop.report.customers'] : $this->get('coreshop.report.customers')) && false ?: '_'});
        $instance->register('carts', ${($_ = isset($this->services['coreshop.report.carts']) ? $this->services['coreshop.report.carts'] : $this->get('coreshop.report.carts')) && false ?: '_'});
        $instance->register('carts_abandoned', ${($_ = isset($this->services['coreshop.report.carts_abandoned']) ? $this->services['coreshop.report.carts_abandoned'] : $this->get('coreshop.report.carts_abandoned')) && false ?: '_'});
        $instance->register('sales', ${($_ = isset($this->services['coreshop.report.sales']) ? $this->services['coreshop.report.sales'] : $this->get('coreshop.report.sales')) && false ?: '_'});
        $instance->register('carriers', ${($_ = isset($this->services['coreshop.report.carriers']) ? $this->services['coreshop.report.carriers'] : $this->get('coreshop.report.carriers')) && false ?: '_'});
        $instance->register('payment_providers', ${($_ = isset($this->services['coreshop.report.payment_providers']) ? $this->services['coreshop.report.payment_providers'] : $this->get('coreshop.report.payment_providers')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.resource.installers' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Registry_Resource_InstallersService()
    {
        $this->services['coreshop.registry.resource.installers'] = $instance = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Bundle\\ResourceBundle\\Installer\\ResourceInstallerInterface', 'coreshop-resource-installer');

        $instance->register('classes', 100, ${($_ = isset($this->services['coreshop.resource.installer.classes']) ? $this->services['coreshop.resource.installer.classes'] : $this->get('coreshop.resource.installer.classes')) && false ?: '_'});
        $instance->register('routes', 200, ${($_ = isset($this->services['coreshop.resource.installer.routes']) ? $this->services['coreshop.resource.installer.routes'] : $this->get('coreshop.resource.installer.routes')) && false ?: '_'});
        $instance->register('documents', 250, ${($_ = isset($this->services['coreshop.resource.installer.documents']) ? $this->services['coreshop.resource.installer.documents'] : $this->get('coreshop.resource.installer.documents')) && false ?: '_'});
        $instance->register('image_thumbnail', 300, ${($_ = isset($this->services['coreshop.resource.installer.image_thumbnails']) ? $this->services['coreshop.resource.installer.image_thumbnails'] : $this->get('coreshop.resource.installer.image_thumbnails')) && false ?: '_'});
        $instance->register('permissions', 350, ${($_ = isset($this->services['coreshop.resource.installer.permissions']) ? $this->services['coreshop.resource.installer.permissions'] : $this->get('coreshop.resource.installer.permissions')) && false ?: '_'});
        $instance->register('sql', 400, ${($_ = isset($this->services['coreshop.resource.installer.sql']) ? $this->services['coreshop.resource.installer.sql'] : $this->get('coreshop.resource.installer.sql')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.shipping.price_calculators' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Registry_Shipping_PriceCalculatorsService()
    {
        $this->services['coreshop.registry.shipping.price_calculators'] = $instance = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Component\\Shipping\\Calculator\\CarrierPriceCalculatorInterface', 'shipping-price-calculators');

        $instance->register('shipping-rule', 256, ${($_ = isset($this->services['coreshop.carrier.price_calculator.shipping_rules']) ? $this->services['coreshop.carrier.price_calculator.shipping_rules'] : $this->get('coreshop.carrier.price_calculator.shipping_rules')) && false ?: '_'});
        $instance->register('free-shipping-rule', 255, ${($_ = isset($this->services['coreshop.carrier.price_calculator.free_shipping_rule']) ? $this->services['coreshop.carrier.price_calculator.free_shipping_rule'] : $this->get('coreshop.carrier.price_calculator.free_shipping_rule')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.shipping_rule.actions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ShippingRule_ActionsService()
    {
        $this->services['coreshop.registry.shipping_rule.actions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Shipping\\Rule\\Action\\CarrierPriceActionProcessorInterface', 'ShippingRuleAction');

        $instance->register('price', ${($_ = isset($this->services['coreshop.shipping_rule.action.price']) ? $this->services['coreshop.shipping_rule.action.price'] : $this->get('coreshop.shipping_rule.action.price')) && false ?: '_'});
        $instance->register('additionAmount', ${($_ = isset($this->services['coreshop.shipping_rule.action.addition_amount']) ? $this->services['coreshop.shipping_rule.action.addition_amount'] : $this->get('coreshop.shipping_rule.action.addition_amount')) && false ?: '_'});
        $instance->register('discountAmount', ${($_ = isset($this->services['coreshop.shipping_rule.action.discount_amount']) ? $this->services['coreshop.shipping_rule.action.discount_amount'] : $this->get('coreshop.shipping_rule.action.discount_amount')) && false ?: '_'});
        $instance->register('additionPercent', ${($_ = isset($this->services['coreshop.shipping_rule.action.addition_percent']) ? $this->services['coreshop.shipping_rule.action.addition_percent'] : $this->get('coreshop.shipping_rule.action.addition_percent')) && false ?: '_'});
        $instance->register('discountPercent', ${($_ = isset($this->services['coreshop.shipping_rule.action.discount_percent']) ? $this->services['coreshop.shipping_rule.action.discount_percent'] : $this->get('coreshop.shipping_rule.action.discount_percent')) && false ?: '_'});
        $instance->register('shippingRule', ${($_ = isset($this->services['coreshop.shipping_rule.action.shipping_rule']) ? $this->services['coreshop.shipping_rule.action.shipping_rule'] : $this->get('coreshop.shipping_rule.action.shipping_rule')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.shipping_rule.conditions' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_ShippingRule_ConditionsService()
    {
        $this->services['coreshop.registry.shipping_rule.conditions'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Rule\\Condition\\ConditionCheckerInterface', 'ShippingRuleCondition');

        $instance->register('amount', ${($_ = isset($this->services['coreshop.shipping_rule.condition.amount']) ? $this->services['coreshop.shipping_rule.condition.amount'] : $this->get('coreshop.shipping_rule.condition.amount')) && false ?: '_'});
        $instance->register('postcodes', ${($_ = isset($this->services['coreshop.shipping_rule.condition.postcodes']) ? $this->services['coreshop.shipping_rule.condition.postcodes'] : $this->get('coreshop.shipping_rule.condition.postcodes')) && false ?: '_'});
        $instance->register('weight', ${($_ = isset($this->services['coreshop.shipping_rule.condition.weight']) ? $this->services['coreshop.shipping_rule.condition.weight'] : $this->get('coreshop.shipping_rule.condition.weight')) && false ?: '_'});
        $instance->register('dimension', ${($_ = isset($this->services['coreshop.shipping_rule.condition.dimension']) ? $this->services['coreshop.shipping_rule.condition.dimension'] : $this->get('coreshop.shipping_rule.condition.dimension')) && false ?: '_'});
        $instance->register('nested', ${($_ = isset($this->services['coreshop.shipping_rule.condition.nested']) ? $this->services['coreshop.shipping_rule.condition.nested'] : $this->get('coreshop.shipping_rule.condition.nested')) && false ?: '_'});
        $instance->register('shippingRule', ${($_ = isset($this->services['coreshop.shipping_rule.condition.shipping_rule']) ? $this->services['coreshop.shipping_rule.condition.shipping_rule'] : $this->get('coreshop.shipping_rule.condition.shipping_rule')) && false ?: '_'});
        $instance->register('categories', ${($_ = isset($this->services['coreshop.shipping_rule.condition.categories']) ? $this->services['coreshop.shipping_rule.condition.categories'] : $this->get('coreshop.shipping_rule.condition.categories')) && false ?: '_'});
        $instance->register('products', ${($_ = isset($this->services['coreshop.shipping_rule.condition.products']) ? $this->services['coreshop.shipping_rule.condition.products'] : $this->get('coreshop.shipping_rule.condition.products')) && false ?: '_'});
        $instance->register('countries', ${($_ = isset($this->services['coreshop.shipping_rule.condition.countries']) ? $this->services['coreshop.shipping_rule.condition.countries'] : $this->get('coreshop.shipping_rule.condition.countries')) && false ?: '_'});
        $instance->register('customers', ${($_ = isset($this->services['coreshop.rule.condition.customers']) ? $this->services['coreshop.rule.condition.customers'] : $this->get('coreshop.rule.condition.customers')) && false ?: '_'});
        $instance->register('customerGroups', ${($_ = isset($this->services['coreshop.rule.condition.customer_groups']) ? $this->services['coreshop.rule.condition.customer_groups'] : $this->get('coreshop.rule.condition.customer_groups')) && false ?: '_'});
        $instance->register('zones', ${($_ = isset($this->services['coreshop.rule.condition.zones']) ? $this->services['coreshop.rule.condition.zones'] : $this->get('coreshop.rule.condition.zones')) && false ?: '_'});
        $instance->register('stores', ${($_ = isset($this->services['coreshop.rule.condition.stores']) ? $this->services['coreshop.rule.condition.stores'] : $this->get('coreshop.rule.condition.stores')) && false ?: '_'});
        $instance->register('currencies', ${($_ = isset($this->services['coreshop.rule.condition.currencies']) ? $this->services['coreshop.rule.condition.currencies'] : $this->get('coreshop.rule.condition.currencies')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.registry.tracking.tracker' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Registry_Tracking_TrackerService()
    {
        $this->services['coreshop.registry.tracking.tracker'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Bundle\\TrackingBundle\\TrackerInterface', 'tracker');

        $instance->register('google-enhanced-ecommerce', ${($_ = isset($this->services['coreshop.tracking.tracker.google.enhanced_ecommerce']) ? $this->services['coreshop.tracking.tracker.google.enhanced_ecommerce'] : $this->get('coreshop.tracking.tracker.google.enhanced_ecommerce')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'coreshop.renderer.order.pdf.asset' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Renderer\AssetOrderDocumentPdfRenderer
     */
    protected function getCoreshop_Renderer_Order_Pdf_AssetService()
    {
        return $this->services['coreshop.renderer.order.pdf.asset'] = new \CoreShop\Bundle\OrderBundle\Renderer\AssetOrderDocumentPdfRenderer(new \CoreShop\Bundle\OrderBundle\Renderer\OrderDocumentPdfRenderer(${($_ = isset($this->services['fragment.renderer.inline']) ? $this->services['fragment.renderer.inline'] : $this->get('fragment.renderer.inline')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.order.renderer.pdf']) ? $this->services['coreshop.order.renderer.pdf'] : $this->get('coreshop.order.renderer.pdf')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.report.carriers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\CarriersReport
     */
    protected function getCoreshop_Report_CarriersService()
    {
        return $this->services['coreshop.report.carriers'] = new \CoreShop\Bundle\CoreBundle\Report\CarriersReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.carrier']) ? $this->services['coreshop.repository.carrier'] : $this->get('coreshop.repository.carrier')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.carts' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\CartsReport
     */
    protected function getCoreshop_Report_CartsService()
    {
        return $this->services['coreshop.report.carts'] = new \CoreShop\Bundle\CoreBundle\Report\CartsReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.carts_abandoned' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\AbandonedCartsReport
     */
    protected function getCoreshop_Report_CartsAbandonedService()
    {
        return $this->services['coreshop.report.carts_abandoned'] = new \CoreShop\Bundle\CoreBundle\Report\AbandonedCartsReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.categories' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\CategoriesReport
     */
    protected function getCoreshop_Report_CategoriesService()
    {
        return $this->services['coreshop.report.categories'] = new \CoreShop\Bundle\CoreBundle\Report\CategoriesReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.locale']) ? $this->services['coreshop.context.locale'] : $this->get('coreshop.context.locale')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.customers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\CustomersReport
     */
    protected function getCoreshop_Report_CustomersService()
    {
        return $this->services['coreshop.report.customers'] = new \CoreShop\Bundle\CoreBundle\Report\CustomersReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.payment_providers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\PaymentProvidersReport
     */
    protected function getCoreshop_Report_PaymentProvidersService()
    {
        return $this->services['coreshop.report.payment_providers'] = new \CoreShop\Bundle\CoreBundle\Report\PaymentProvidersReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.payment_provider']) ? $this->services['coreshop.repository.payment_provider'] : $this->get('coreshop.repository.payment_provider')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.products' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\ProductsReport
     */
    protected function getCoreshop_Report_ProductsService()
    {
        return $this->services['coreshop.report.products'] = new \CoreShop\Bundle\CoreBundle\Report\ProductsReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.report.sales' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Report\SalesReport
     */
    protected function getCoreshop_Report_SalesService()
    {
        return $this->services['coreshop.report.sales'] = new \CoreShop\Bundle\CoreBundle\Report\SalesReport(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'}, array('cart' => 17, 'cart_item' => 18, 'order' => 19, 'order_shipment' => 20, 'quote' => 21, 'order_item' => 22, 'order_invoice' => 23, 'order_invoice_item' => 24, 'order_shipment_item' => 25, 'quote_item' => 26, 'customer_group' => 27, 'customer' => 28, 'category' => 29, 'product' => 30, 'manufacturer' => 31, 'address' => 32));
    }

    /**
     * Gets the public 'coreshop.repository.address' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_AddressService()
    {
        return $this->services['coreshop.repository.address'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.address'));
    }

    /**
     * Gets the public 'coreshop.repository.carrier' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CarrierRepository
     */
    protected function getCoreshop_Repository_CarrierService()
    {
        return $this->services['coreshop.repository.carrier'] = new \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CarrierRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\Carrier'));
    }

    /**
     * Gets the public 'coreshop.repository.cart' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Pimcore\Repository\CartRepository
     */
    protected function getCoreshop_Repository_CartService()
    {
        return $this->services['coreshop.repository.cart'] = new \CoreShop\Bundle\OrderBundle\Pimcore\Repository\CartRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.cart'));
    }

    /**
     * Gets the public 'coreshop.repository.cart_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_CartItemService()
    {
        return $this->services['coreshop.repository.cart_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.cart_item'));
    }

    /**
     * Gets the public 'coreshop.repository.cart_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_CartPriceRuleService()
    {
        return $this->services['coreshop.repository.cart_price_rule'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Order\\Model\\CartPriceRule'));
    }

    /**
     * Gets the public 'coreshop.repository.cart_price_rule_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_CartPriceRuleItemService()
    {
        return $this->services['coreshop.repository.cart_price_rule_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.cart_price_rule_item'));
    }

    /**
     * Gets the public 'coreshop.repository.cart_price_rule_voucher_code' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Doctrine\ORM\CartPriceRuleVoucherRepository
     */
    protected function getCoreshop_Repository_CartPriceRuleVoucherCodeService()
    {
        return $this->services['coreshop.repository.cart_price_rule_voucher_code'] = new \CoreShop\Bundle\OrderBundle\Doctrine\ORM\CartPriceRuleVoucherRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode'));
    }

    /**
     * Gets the public 'coreshop.repository.category' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Pimcore\Repository\CategoryRepository
     */
    protected function getCoreshop_Repository_CategoryService()
    {
        return $this->services['coreshop.repository.category'] = new \CoreShop\Bundle\CoreBundle\Pimcore\Repository\CategoryRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.category'));
    }

    /**
     * Gets the public 'coreshop.repository.configuration' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Doctrine\ORM\ConfigurationRepository
     */
    protected function getCoreshop_Repository_ConfigurationService()
    {
        return $this->services['coreshop.repository.configuration'] = new \CoreShop\Bundle\CoreBundle\Doctrine\ORM\ConfigurationRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\Configuration'));
    }

    /**
     * Gets the public 'coreshop.repository.country' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CountryRepository
     */
    protected function getCoreshop_Repository_CountryService()
    {
        return $this->services['coreshop.repository.country'] = new \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CountryRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\Country'));
    }

    /**
     * Gets the public 'coreshop.repository.country_translation' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_CountryTranslationService()
    {
        return $this->services['coreshop.repository.country_translation'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Address\\Model\\CountryTranslation'));
    }

    /**
     * Gets the public 'coreshop.repository.currency' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CurrencyRepository
     */
    protected function getCoreshop_Repository_CurrencyService()
    {
        return $this->services['coreshop.repository.currency'] = new \CoreShop\Bundle\CoreBundle\Doctrine\ORM\CurrencyRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\Currency'));
    }

    /**
     * Gets the public 'coreshop.repository.customer' shared service.
     *
     * @return \CoreShop\Bundle\CustomerBundle\Pimcore\Repository\CustomerRepository
     */
    protected function getCoreshop_Repository_CustomerService()
    {
        return $this->services['coreshop.repository.customer'] = new \CoreShop\Bundle\CustomerBundle\Pimcore\Repository\CustomerRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.customer'));
    }

    /**
     * Gets the public 'coreshop.repository.customer_group' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_CustomerGroupService()
    {
        return $this->services['coreshop.repository.customer_group'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.customer_group'));
    }

    /**
     * Gets the public 'coreshop.repository.exchange_rate' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Doctrine\ORM\ExchangeRateRepository
     */
    protected function getCoreshop_Repository_ExchangeRateService()
    {
        return $this->services['coreshop.repository.exchange_rate'] = new \CoreShop\Bundle\CurrencyBundle\Doctrine\ORM\ExchangeRateRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Currency\\Model\\ExchangeRate'));
    }

    /**
     * Gets the public 'coreshop.repository.filter' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_FilterService()
    {
        return $this->services['coreshop.repository.filter'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Index\\Model\\Filter'));
    }

    /**
     * Gets the public 'coreshop.repository.filter_condition' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_FilterConditionService()
    {
        return $this->services['coreshop.repository.filter_condition'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Index\\Model\\FilterCondition'));
    }

    /**
     * Gets the public 'coreshop.repository.gateway_config' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_GatewayConfigService()
    {
        return $this->services['coreshop.repository.gateway_config'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig'));
    }

    /**
     * Gets the public 'coreshop.repository.index' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_IndexService()
    {
        return $this->services['coreshop.repository.index'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Index\\Model\\Index'));
    }

    /**
     * Gets the public 'coreshop.repository.index_column' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_IndexColumnService()
    {
        return $this->services['coreshop.repository.index_column'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Index\\Model\\IndexColumn'));
    }

    /**
     * Gets the public 'coreshop.repository.manufacturer' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_ManufacturerService()
    {
        return $this->services['coreshop.repository.manufacturer'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.manufacturer'));
    }

    /**
     * Gets the public 'coreshop.repository.notification_rule' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\Doctrine\ORM\NotificationRuleRepository
     */
    protected function getCoreshop_Repository_NotificationRuleService()
    {
        return $this->services['coreshop.repository.notification_rule'] = new \CoreShop\Bundle\NotificationBundle\Doctrine\ORM\NotificationRuleRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Notification\\Model\\NotificationRule'));
    }

    /**
     * Gets the public 'coreshop.repository.order' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderRepository
     */
    protected function getCoreshop_Repository_OrderService()
    {
        return $this->services['coreshop.repository.order'] = new \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order'));
    }

    /**
     * Gets the public 'coreshop.repository.order_invoice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderInvoiceRepository
     */
    protected function getCoreshop_Repository_OrderInvoiceService()
    {
        return $this->services['coreshop.repository.order_invoice'] = new \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderInvoiceRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_invoice'));
    }

    /**
     * Gets the public 'coreshop.repository.order_invoice_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_OrderInvoiceItemService()
    {
        return $this->services['coreshop.repository.order_invoice_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_invoice_item'));
    }

    /**
     * Gets the public 'coreshop.repository.order_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_OrderItemService()
    {
        return $this->services['coreshop.repository.order_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_item'));
    }

    /**
     * Gets the public 'coreshop.repository.order_shipment' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderShipmentRepository
     */
    protected function getCoreshop_Repository_OrderShipmentService()
    {
        return $this->services['coreshop.repository.order_shipment'] = new \CoreShop\Bundle\OrderBundle\Pimcore\Repository\OrderShipmentRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_shipment'));
    }

    /**
     * Gets the public 'coreshop.repository.order_shipment_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_OrderShipmentItemService()
    {
        return $this->services['coreshop.repository.order_shipment_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.order_shipment_item'));
    }

    /**
     * Gets the public 'coreshop.repository.payment' shared service.
     *
     * @return \CoreShop\Bundle\PaymentBundle\Doctrine\ORM\PaymentRepository
     */
    protected function getCoreshop_Repository_PaymentService()
    {
        return $this->services['coreshop.repository.payment'] = new \CoreShop\Bundle\PaymentBundle\Doctrine\ORM\PaymentRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Payment\\Model\\Payment'));
    }

    /**
     * Gets the public 'coreshop.repository.payment_provider' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_PaymentProviderService()
    {
        return $this->services['coreshop.repository.payment_provider'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\PaymentProvider'));
    }

    /**
     * Gets the public 'coreshop.repository.payment_provider_translation' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_PaymentProviderTranslationService()
    {
        return $this->services['coreshop.repository.payment_provider_translation'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation'));
    }

    /**
     * Gets the public 'coreshop.repository.payment_security_token' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_PaymentSecurityTokenService()
    {
        return $this->services['coreshop.repository.payment_security_token'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken'));
    }

    /**
     * Gets the public 'coreshop.repository.product' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Pimcore\Repository\ProductRepository
     */
    protected function getCoreshop_Repository_ProductService()
    {
        return $this->services['coreshop.repository.product'] = new \CoreShop\Bundle\CoreBundle\Pimcore\Repository\ProductRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.product'));
    }

    /**
     * Gets the public 'coreshop.repository.product_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Doctrine\ORM\ProductPriceRuleRepository
     */
    protected function getCoreshop_Repository_ProductPriceRuleService()
    {
        return $this->services['coreshop.repository.product_price_rule'] = new \CoreShop\Bundle\ProductBundle\Doctrine\ORM\ProductPriceRuleRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Product\\Model\\ProductPriceRule'));
    }

    /**
     * Gets the public 'coreshop.repository.product_specific_price_rule' shared service.
     *
     * @return \CoreShop\Bundle\ProductBundle\Doctrine\ORM\ProductSpecificPriceRuleRepository
     */
    protected function getCoreshop_Repository_ProductSpecificPriceRuleService()
    {
        return $this->services['coreshop.repository.product_specific_price_rule'] = new \CoreShop\Bundle\ProductBundle\Doctrine\ORM\ProductSpecificPriceRuleRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule'));
    }

    /**
     * Gets the public 'coreshop.repository.quote' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_QuoteService()
    {
        return $this->services['coreshop.repository.quote'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.quote'));
    }

    /**
     * Gets the public 'coreshop.repository.quote_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_QuoteItemService()
    {
        return $this->services['coreshop.repository.quote_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.quote_item'));
    }

    /**
     * Gets the public 'coreshop.repository.rule_action' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_RuleActionService()
    {
        return $this->services['coreshop.repository.rule_action'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Rule\\Model\\Action'));
    }

    /**
     * Gets the public 'coreshop.repository.rule_condition' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_RuleConditionService()
    {
        return $this->services['coreshop.repository.rule_condition'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Rule\\Model\\Condition'));
    }

    /**
     * Gets the public 'coreshop.repository.sequence' shared service.
     *
     * @return \CoreShop\Bundle\SequenceBundle\Doctrine\ORM\SequenceRepository
     */
    protected function getCoreshop_Repository_SequenceService()
    {
        return $this->services['coreshop.repository.sequence'] = new \CoreShop\Bundle\SequenceBundle\Doctrine\ORM\SequenceRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Sequence\\Model\\Sequence'));
    }

    /**
     * Gets the public 'coreshop.repository.shipping_rule' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_ShippingRuleService()
    {
        return $this->services['coreshop.repository.shipping_rule'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Shipping\\Model\\ShippingRule'));
    }

    /**
     * Gets the public 'coreshop.repository.shipping_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_ShippingRuleGroupService()
    {
        return $this->services['coreshop.repository.shipping_rule_group'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup'));
    }

    /**
     * Gets the public 'coreshop.repository.state' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_StateService()
    {
        return $this->services['coreshop.repository.state'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Address\\Model\\State'));
    }

    /**
     * Gets the public 'coreshop.repository.state_translation' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_StateTranslationService()
    {
        return $this->services['coreshop.repository.state_translation'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Address\\Model\\StateTranslation'));
    }

    /**
     * Gets the public 'coreshop.repository.store' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Doctrine\ORM\StoreRepository
     */
    protected function getCoreshop_Repository_StoreService()
    {
        return $this->services['coreshop.repository.store'] = new \CoreShop\Bundle\StoreBundle\Doctrine\ORM\StoreRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\Store'));
    }

    /**
     * Gets the public 'coreshop.repository.tax_item' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository
     */
    protected function getCoreshop_Repository_TaxItemService()
    {
        return $this->services['coreshop.repository.tax_item'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\PimcoreRepository(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}->get('coreshop.tax_item'));
    }

    /**
     * Gets the public 'coreshop.repository.tax_rate' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_TaxRateService()
    {
        return $this->services['coreshop.repository.tax_rate'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Taxation\\Model\\TaxRate'));
    }

    /**
     * Gets the public 'coreshop.repository.tax_rate_translation' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_TaxRateTranslationService()
    {
        return $this->services['coreshop.repository.tax_rate_translation'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation'));
    }

    /**
     * Gets the public 'coreshop.repository.tax_rule' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Doctrine\ORM\TaxRuleRepository
     */
    protected function getCoreshop_Repository_TaxRuleService()
    {
        return $this->services['coreshop.repository.tax_rule'] = new \CoreShop\Bundle\CoreBundle\Doctrine\ORM\TaxRuleRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\TaxRule'));
    }

    /**
     * Gets the public 'coreshop.repository.tax_rule_group' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_TaxRuleGroupService()
    {
        return $this->services['coreshop.repository.tax_rule_group'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Core\\Model\\TaxRuleGroup'));
    }

    /**
     * Gets the public 'coreshop.repository.zone' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository
     */
    protected function getCoreshop_Repository_ZoneService()
    {
        return $this->services['coreshop.repository.zone'] = new \CoreShop\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getClassMetadata('CoreShop\\Component\\Address\\Model\\Zone'));
    }

    /**
     * Gets the public 'coreshop.resource.helper.form_error_serializer' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Form\Helper\ErrorSerializer
     */
    protected function getCoreshop_Resource_Helper_FormErrorSerializerService()
    {
        return $this->services['coreshop.resource.helper.form_error_serializer'] = new \CoreShop\Bundle\ResourceBundle\Form\Helper\ErrorSerializer();
    }

    /**
     * Gets the public 'coreshop.resource.installer' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\CompositeResourceInstaller
     */
    protected function getCoreshop_Resource_InstallerService()
    {
        return $this->services['coreshop.resource.installer'] = new \CoreShop\Bundle\ResourceBundle\Installer\CompositeResourceInstaller(${($_ = isset($this->services['coreshop.registry.resource.installers']) ? $this->services['coreshop.registry.resource.installers'] : $this->get('coreshop.registry.resource.installers')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.classes' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\PimcoreClassInstaller
     */
    protected function getCoreshop_Resource_Installer_ClassesService()
    {
        return $this->services['coreshop.resource.installer.classes'] = new \CoreShop\Bundle\ResourceBundle\Installer\PimcoreClassInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.documents' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\PimcoreDocumentsInstaller
     */
    protected function getCoreshop_Resource_Installer_DocumentsService()
    {
        return $this->services['coreshop.resource.installer.documents'] = new \CoreShop\Bundle\ResourceBundle\Installer\PimcoreDocumentsInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.image_thumbnails' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\PimcoreImageThumbnailsInstaller
     */
    protected function getCoreshop_Resource_Installer_ImageThumbnailsService()
    {
        return $this->services['coreshop.resource.installer.image_thumbnails'] = new \CoreShop\Bundle\ResourceBundle\Installer\PimcoreImageThumbnailsInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.permissions' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\PimcorePermissionInstaller
     */
    protected function getCoreshop_Resource_Installer_PermissionsService()
    {
        return $this->services['coreshop.resource.installer.permissions'] = new \CoreShop\Bundle\ResourceBundle\Installer\PimcorePermissionInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.routes' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\PimcoreRoutesInstaller
     */
    protected function getCoreshop_Resource_Installer_RoutesService()
    {
        return $this->services['coreshop.resource.installer.routes'] = new \CoreShop\Bundle\ResourceBundle\Installer\PimcoreRoutesInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.installer.sql' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Installer\SqlInstaller
     */
    protected function getCoreshop_Resource_Installer_SqlService()
    {
        return $this->services['coreshop.resource.installer.sql'] = new \CoreShop\Bundle\ResourceBundle\Installer\SqlInstaller(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource.object_cloner' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\ObjectCloner
     */
    protected function getCoreshop_Resource_ObjectClonerService()
    {
        return $this->services['coreshop.resource.object_cloner'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\ObjectCloner();
    }

    /**
     * Gets the public 'coreshop.resource_controller.form_factory' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ResourceFormFactory
     */
    protected function getCoreshop_ResourceController_FormFactoryService()
    {
        return $this->services['coreshop.resource_controller.form_factory'] = new \CoreShop\Bundle\ResourceBundle\Controller\ResourceFormFactory(${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.resource_loader' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\ResourceLoader
     */
    protected function getCoreshop_ResourceLoaderService()
    {
        return $this->services['coreshop.resource_loader'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\ResourceLoader();
    }

    /**
     * Gets the public 'coreshop.resource_registry' shared service.
     *
     * @return \CoreShop\Component\Resource\Metadata\Registry
     */
    protected function getCoreshop_ResourceRegistryService()
    {
        $this->services['coreshop.resource_registry'] = $instance = new \CoreShop\Component\Resource\Metadata\Registry();

        $instance->addFromAliasAndConfiguration('coreshop.rule_condition', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Rule\\Model\\Condition', 'interface' => 'CoreShop\\Component\\Rule\\Model\\ConditionInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('coreshop.rule_action', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Rule\\Model\\Action', 'interface' => 'CoreShop\\Component\\Rule\\Model\\ActionInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('coreshop.configuration', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\Configuration', 'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\ConfigurationRepository', 'admin_controller' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ConfigurationController', 'interface' => 'CoreShop\\Component\\Configuration\\Model\\ConfigurationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\ConfigurationBundle\\Form\\Type\\ConfigurationType')));
        $instance->addFromAliasAndConfiguration('coreshop.cart_price_rule', array('driver' => 'doctrine/orm', 'permission' => 'cart_price_rule', 'classes' => array('model' => 'CoreShop\\Component\\Order\\Model\\CartPriceRule', 'interface' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleInterface', 'admin_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\CartPriceRuleController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.cart_price_rule_voucher_code', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode', 'interface' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCodeInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\OrderBundle\\Doctrine\\ORM\\CartPriceRuleVoucherRepository')));
        $instance->addFromAliasAndConfiguration('coreshop.product_price_rule', array('driver' => 'doctrine/orm', 'permission' => 'product_price_rule', 'classes' => array('model' => 'CoreShop\\Component\\Product\\Model\\ProductPriceRule', 'interface' => 'CoreShop\\Component\\Product\\Model\\ProductPriceRuleInterface', 'admin_controller' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductPriceRuleController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductPriceRuleRepository', 'form' => 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.product_specific_price_rule', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule', 'interface' => 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRuleInterface', 'admin_controller' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductSpecificPriceRuleController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductSpecificPriceRuleRepository', 'form' => 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.country', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\Country', 'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CountryRepository', 'interface' => 'CoreShop\\Component\\Address\\Model\\CountryInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryType'), 'permission' => 'country', 'translation' => array('classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\CountryTranslation', 'interface' => 'CoreShop\\Component\\Address\\Model\\CountryTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryTranslationType'))));
        $instance->addFromAliasAndConfiguration('coreshop.country_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\CountryTranslation', 'interface' => 'CoreShop\\Component\\Address\\Model\\CountryTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryTranslationType')));
        $instance->addFromAliasAndConfiguration('coreshop.zone', array('driver' => 'doctrine/orm', 'permission' => 'zone', 'classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\Zone', 'interface' => 'CoreShop\\Component\\Address\\Model\\ZoneInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\ZoneType')));
        $instance->addFromAliasAndConfiguration('coreshop.state', array('driver' => 'doctrine/orm', 'permission' => 'state', 'classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\State', 'interface' => 'CoreShop\\Component\\Address\\Model\\StateInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateType'), 'translation' => array('classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\StateTranslation', 'interface' => 'CoreShop\\Component\\Address\\Model\\StateTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateTranslationType'))));
        $instance->addFromAliasAndConfiguration('coreshop.state_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Address\\Model\\StateTranslation', 'interface' => 'CoreShop\\Component\\Address\\Model\\StateTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateTranslationType')));
        $instance->addFromAliasAndConfiguration('coreshop.currency', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\Currency', 'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CurrencyRepository', 'interface' => 'CoreShop\\Component\\Currency\\Model\\CurrencyInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType'), 'permission' => 'currency'));
        $instance->addFromAliasAndConfiguration('coreshop.exchange_rate', array('driver' => 'doctrine/orm', 'permission' => 'exchange_rate', 'classes' => array('model' => 'CoreShop\\Component\\Currency\\Model\\ExchangeRate', 'interface' => 'CoreShop\\Component\\Currency\\Model\\ExchangeRateInterface', 'admin_controller' => 'CoreShop\\Bundle\\CurrencyBundle\\Controller\\ExchangeRateController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\CurrencyBundle\\Doctrine\\ORM\\ExchangeRateRepository', 'form' => 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType')));
        $instance->addFromAliasAndConfiguration('coreshop.tax_rule', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\TaxRule', 'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\TaxRuleRepository', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRuleInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.tax_rule_group', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\TaxRuleGroup', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRuleGroupInterface', 'admin_controller' => 'CoreShop\\Bundle\\TaxationBundle\\Controller\\TaxRuleGroupController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleGroupType'), 'permission' => 'tax_rule_group'));
        $instance->addFromAliasAndConfiguration('coreshop.tax_rate', array('driver' => 'doctrine/orm', 'permission' => 'tax_rate', 'classes' => array('model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRate', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType'), 'translation' => array('classes' => array('model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateTranslationType'))));
        $instance->addFromAliasAndConfiguration('coreshop.tax_rate_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateTranslationType')));
        $instance->addFromAliasAndConfiguration('coreshop.store', array('driver' => 'doctrine/orm', 'classes' => array('repository' => 'CoreShop\\Bundle\\StoreBundle\\Doctrine\\ORM\\StoreRepository', 'model' => 'CoreShop\\Component\\Core\\Model\\Store', 'interface' => 'CoreShop\\Component\\Store\\Model\\StoreInterface', 'admin_controller' => 'CoreShop\\Bundle\\StoreBundle\\Controller\\StoreController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\StoreBundle\\Form\\Type\\StoreType'), 'permission' => 'store'));
        $instance->addFromAliasAndConfiguration('coreshop.index', array('driver' => 'doctrine/orm', 'permission' => 'index', 'classes' => array('model' => 'CoreShop\\Component\\Index\\Model\\Index', 'interface' => 'CoreShop\\Component\\Index\\Model\\IndexInterface', 'admin_controller' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\IndexController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexType')));
        $instance->addFromAliasAndConfiguration('coreshop.index_column', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Index\\Model\\IndexColumn', 'interface' => 'CoreShop\\Component\\Index\\Model\\IndexColumnInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnType')));
        $instance->addFromAliasAndConfiguration('coreshop.filter', array('driver' => 'doctrine/orm', 'permission' => 'filter', 'classes' => array('model' => 'CoreShop\\Component\\Index\\Model\\Filter', 'interface' => 'CoreShop\\Component\\Index\\Model\\FilterInterface', 'admin_controller' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\FilterController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterType')));
        $instance->addFromAliasAndConfiguration('coreshop.filter_condition', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Index\\Model\\FilterCondition', 'interface' => 'CoreShop\\Component\\Index\\Model\\FilterConditionInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterConditionType')));
        $instance->addFromAliasAndConfiguration('coreshop.carrier', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\Carrier', 'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CarrierRepository', 'interface' => 'CoreShop\\Component\\Shipping\\Model\\CarrierInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\CarrierType'), 'permission' => 'carrier'));
        $instance->addFromAliasAndConfiguration('coreshop.shipping_rule', array('driver' => 'doctrine/orm', 'permission' => 'shipping_rule', 'classes' => array('model' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRule', 'interface' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleInterface', 'admin_controller' => 'CoreShop\\Bundle\\ShippingBundle\\Controller\\ShippingRuleController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.shipping_rule_group', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup', 'interface' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroupInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleGroupType')));
        $instance->addFromAliasAndConfiguration('coreshop.payment_provider', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Core\\Model\\PaymentProvider', 'admin_controller' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\PaymentProviderController', 'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderType'), 'permission' => 'payment_provider', 'translation' => array('classes' => array('model' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation', 'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderTranslationType'))));
        $instance->addFromAliasAndConfiguration('coreshop.payment_provider_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation', 'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslationInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderTranslationType')));
        $instance->addFromAliasAndConfiguration('coreshop.payment', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Payment\\Model\\Payment', 'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\PaymentBundle\\Doctrine\\ORM\\PaymentRepository')));
        $instance->addFromAliasAndConfiguration('coreshop.sequence', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Component\\Sequence\\Model\\Sequence', 'interface' => 'CoreShop\\Component\\Sequence\\Model\\SequenceInterface', 'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Sequence\\Factory\\SequenceFactory', 'repository' => 'CoreShop\\Bundle\\SequenceBundle\\Doctrine\\ORM\\SequenceRepository')));
        $instance->addFromAliasAndConfiguration('coreshop.notification_rule', array('driver' => 'doctrine/orm', 'permission' => 'notification', 'classes' => array('model' => 'CoreShop\\Component\\Notification\\Model\\NotificationRule', 'interface' => 'CoreShop\\Component\\Notification\\Model\\NotificationRuleInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory', 'repository' => 'CoreShop\\Bundle\\NotificationBundle\\Doctrine\\ORM\\NotificationRuleRepository', 'admin_controller' => 'CoreShop\\Bundle\\NotificationBundle\\Controller\\NotificationRuleController', 'form' => 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleType')));
        $instance->addFromAliasAndConfiguration('coreshop.gateway_config', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig', 'controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('coreshop.payment_security_token', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken', 'controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('coreshop.cart', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'coreshop/carts', 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCart.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopCart', 'interface' => 'CoreShop\\Component\\Order\\Model\\CartInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\CartRepository', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.cart_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCartItem.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopCartItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\CartItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'type' => 'object'), 'path' => 'items'));
        $instance->addFromAliasAndConfiguration('coreshop.order', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'coreshop/orders', 'classes' => array('pimcore_controller' => array('default' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderController', 'creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderCreationController'), 'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrder.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrder', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderRepository', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.order_shipment', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrderShipment.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipment', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderShipmentRepository', 'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderShipmentController', 'type' => 'object'), 'path' => 'shipments'));
        $instance->addFromAliasAndConfiguration('coreshop.quote', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'coreshop/quotes', 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopQuote.json', 'pimcore_controller' => array('creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\QuoteCreationController', 'default' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\QuoteController'), 'model' => 'Pimcore\\Model\\DataObject\\CoreShopQuote', 'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.order_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'items', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderItem.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.order_invoice', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'invoices', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoice', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderInvoiceRepository', 'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderInvoiceController', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoice.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.order_invoice_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'items', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoiceItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoiceItem.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.order_shipment_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'items', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipmentItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderShipmentItem.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.cart_price_rule_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopProposalCartPriceRuleItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\ProposalCartPriceRuleItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/fieldcollections/CoreShopProposalCartPriceRuleItem.json', 'type' => 'fieldcollection')));
        $instance->addFromAliasAndConfiguration('coreshop.quote_item', array('driver' => 'pimcore', 'alias' => 'core_shop_order', 'path' => 'items', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopQuoteItem', 'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopQuoteItem.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.customer_group', array('driver' => 'pimcore', 'alias' => 'core_shop_customer', 'path' => 'coreshop/customer_groups', 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomerGroup.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomerGroup', 'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerGroupInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.customer', array('driver' => 'pimcore', 'alias' => 'core_shop_customer', 'path' => array('customer' => 'coreshop/customers', 'guest' => 'coreshop/guests'), 'classes' => array('install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomer.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomer', 'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'repository' => 'CoreShop\\Bundle\\CustomerBundle\\Pimcore\\Repository\\CustomerRepository', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.category', array('driver' => 'pimcore', 'alias' => 'core_shop_product', 'path' => 'coreshop/categories', 'classes' => array('repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\CategoryRepository', 'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopCategory.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopCategory', 'interface' => 'CoreShop\\Component\\Product\\Model\\CategoryInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.product', array('driver' => 'pimcore', 'alias' => 'core_shop_product', 'path' => 'coreshop/products', 'classes' => array('repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\ProductRepository', 'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopProduct.json', 'model' => 'Pimcore\\Model\\DataObject\\CoreShopProduct', 'interface' => 'CoreShop\\Component\\Product\\Model\\ProductInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.manufacturer', array('driver' => 'pimcore', 'alias' => 'core_shop_product', 'path' => 'manufacturers', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopManufacturer', 'interface' => 'CoreShop\\Component\\Product\\Model\\ManufacturerInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopProductBundle/Resources/install/pimcore/classes/CoreShopManufacturer.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.address', array('driver' => 'pimcore', 'alias' => 'core_shop_address', 'path' => 'addresses', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\CoreShopAddress', 'interface' => 'CoreShop\\Component\\Address\\Model\\AddressInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopAddressBundle/Resources/install/pimcore/classes/CoreShopAddress.json', 'type' => 'object')));
        $instance->addFromAliasAndConfiguration('coreshop.tax_item', array('driver' => 'pimcore', 'alias' => 'core_shop_taxation', 'classes' => array('model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopTaxItem', 'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxItemInterface', 'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory', 'install_file' => '@CoreShopTaxationBundle/Resources/install/pimcore/fieldcollections/CoreShopTaxItem.json', 'type' => 'fieldcollection')));

        return $instance;
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.action.free_shipping' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Action\FreeShippingActionProcessor
     */
    protected function getCoreshop_Rule_CartPriceRule_Action_FreeShippingService()
    {
        return $this->services['coreshop.rule.cart_price_rule.action.free_shipping'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Action\FreeShippingActionProcessor();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.action.gift_product' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Action\GiftProductActionProcessor
     */
    protected function getCoreshop_Rule_CartPriceRule_Action_GiftProductService()
    {
        return $this->services['coreshop.rule.cart_price_rule.action.gift_product'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Action\GiftProductActionProcessor(${($_ = isset($this->services['coreshop.repository.product']) ? $this->services['coreshop.repository.product'] : $this->get('coreshop.repository.product')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.cart.modifier']) ? $this->services['coreshop.cart.modifier'] : $this->get('coreshop.cart.modifier')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.carriers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CarriersConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_CarriersService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.carriers'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CarriersConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.countries' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CountriesConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_CountriesService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.countries'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CountriesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.currencies' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CurrenciesConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_CurrenciesService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.currencies'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CurrenciesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.customer_groups' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CustomerGroupsConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_CustomerGroupsService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.customer_groups'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CustomerGroupsConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.customers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CustomersConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_CustomersService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.customers'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\CustomersConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.stores' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\StoresConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_StoresService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.stores'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\StoresConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.cart_price_rule.condition.zones' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\ZonesConditionChecker
     */
    protected function getCoreshop_Rule_CartPriceRule_Condition_ZonesService()
    {
        return $this->services['coreshop.rule.cart_price_rule.condition.zones'] = new \CoreShop\Bundle\CoreBundle\Cart\Rule\Condition\ZonesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.rule.condition.countries' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CountriesConditionChecker
     */
    protected function getCoreshop_Rule_Condition_CountriesService()
    {
        return $this->services['coreshop.rule.condition.countries'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CountriesConditionChecker(${($_ = isset($this->services['coreshop.context.country']) ? $this->services['coreshop.context.country'] : $this->get('coreshop.context.country')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.condition.currencies' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CurrenciesConditionChecker
     */
    protected function getCoreshop_Rule_Condition_CurrenciesService()
    {
        return $this->services['coreshop.rule.condition.currencies'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CurrenciesConditionChecker(${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.condition.customer_groups' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CustomerGroupsConditionChecker
     */
    protected function getCoreshop_Rule_Condition_CustomerGroupsService()
    {
        return $this->services['coreshop.rule.condition.customer_groups'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CustomerGroupsConditionChecker(${($_ = isset($this->services['coreshop.context.customer']) ? $this->services['coreshop.context.customer'] : $this->get('coreshop.context.customer')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.condition.customers' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CustomersConditionChecker
     */
    protected function getCoreshop_Rule_Condition_CustomersService()
    {
        return $this->services['coreshop.rule.condition.customers'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\CustomersConditionChecker(${($_ = isset($this->services['coreshop.context.customer']) ? $this->services['coreshop.context.customer'] : $this->get('coreshop.context.customer')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.condition.stores' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\StoresConditionChecker
     */
    protected function getCoreshop_Rule_Condition_StoresService()
    {
        return $this->services['coreshop.rule.condition.stores'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\StoresConditionChecker(${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.rule.condition.zones' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\ZonesConditionChecker
     */
    protected function getCoreshop_Rule_Condition_ZonesService()
    {
        return $this->services['coreshop.rule.condition.zones'] = new \CoreShop\Bundle\CoreBundle\Product\Rule\Condition\ZonesConditionChecker(${($_ = isset($this->services['coreshop.context.country']) ? $this->services['coreshop.context.country'] : $this->get('coreshop.context.country')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.security.customer.password_encoder_factory' shared service.
     *
     * @return \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory
     */
    protected function getCoreshop_Security_Customer_PasswordEncoderFactoryService()
    {
        return $this->services['coreshop.security.customer.password_encoder_factory'] = new \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory('Pimcore\\Security\\Encoder\\PasswordFieldEncoder', array(0 => 'password'));
    }

    /**
     * Gets the public 'coreshop.security.customer.user_provider' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\ObjectUserProvider
     */
    protected function getCoreshop_Security_Customer_UserProviderService()
    {
        return $this->services['coreshop.security.customer.user_provider'] = new \CoreShop\Bundle\CoreBundle\ObjectUserProvider('Pimcore\\Model\\DataObject\\CoreShopCustomer', 'email');
    }

    /**
     * Gets the public 'coreshop.sequence.generator' shared service.
     *
     * @return \CoreShop\Component\Sequence\Generator\SequenceGenerator
     */
    protected function getCoreshop_Sequence_GeneratorService()
    {
        return $this->services['coreshop.sequence.generator'] = new \CoreShop\Component\Sequence\Generator\SequenceGenerator(${($_ = isset($this->services['coreshop.repository.sequence']) ? $this->services['coreshop.repository.sequence'] : $this->get('coreshop.repository.sequence')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.factory.sequence']) ? $this->services['coreshop.factory.sequence'] : $this->get('coreshop.factory.sequence')) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shippable_carrier.shipping_rule.validator' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Validator\ShippingRuleCarrierValidator
     */
    protected function getCoreshop_ShippableCarrier_ShippingRule_ValidatorService()
    {
        return $this->services['coreshop.shippable_carrier.shipping_rule.validator'] = new \CoreShop\Bundle\ShippingBundle\Validator\ShippingRuleCarrierValidator(${($_ = isset($this->services['coreshop.carrier.shipping_rule.checker']) ? $this->services['coreshop.carrier.shipping_rule.checker'] : $this->get('coreshop.carrier.shipping_rule.checker')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping.carrier.validator' shared service.
     *
     * @return \CoreShop\Bundle\ShippingBundle\Validator\CompositeShippableCarrierValidator
     */
    protected function getCoreshop_Shipping_Carrier_ValidatorService()
    {
        $this->services['coreshop.shipping.carrier.validator'] = $instance = new \CoreShop\Bundle\ShippingBundle\Validator\CompositeShippableCarrierValidator();

        $instance->addValidator(${($_ = isset($this->services['coreshop.shippable_carrier.shipping_rule.validator']) ? $this->services['coreshop.shippable_carrier.shipping_rule.validator'] : $this->get('coreshop.shippable_carrier.shipping_rule.validator')) && false ?: '_'}, 10);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.addition_amount' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\AdditionAmountActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_AdditionAmountService()
    {
        return $this->services['coreshop.shipping_rule.action.addition_amount'] = new \CoreShop\Component\Shipping\Rule\Action\AdditionAmountActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.addition_percent' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\AdditionPercentActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_AdditionPercentService()
    {
        return $this->services['coreshop.shipping_rule.action.addition_percent'] = new \CoreShop\Component\Shipping\Rule\Action\AdditionPercentActionProcessor();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.discount_amount' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\DiscountAmountActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_DiscountAmountService()
    {
        return $this->services['coreshop.shipping_rule.action.discount_amount'] = new \CoreShop\Component\Shipping\Rule\Action\DiscountAmountActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.discount_percent' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\DiscountPercentActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_DiscountPercentService()
    {
        return $this->services['coreshop.shipping_rule.action.discount_percent'] = new \CoreShop\Component\Shipping\Rule\Action\DiscountPercentActionProcessor();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.price' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\PriceActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_PriceService()
    {
        return $this->services['coreshop.shipping_rule.action.price'] = new \CoreShop\Component\Shipping\Rule\Action\PriceActionProcessor(${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.currency.cached']) ? $this->services['coreshop.context.currency.cached'] : $this->get('coreshop.context.currency.cached')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.action.shipping_rule' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Action\ShippingRuleActionProcessor
     */
    protected function getCoreshop_ShippingRule_Action_ShippingRuleService()
    {
        return $this->services['coreshop.shipping_rule.action.shipping_rule'] = new \CoreShop\Component\Shipping\Rule\Action\ShippingRuleActionProcessor(new \CoreShop\Bundle\ShippingBundle\Processor\ShippingRuleActionProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.actions']) ? $this->services['coreshop.registry.shipping_rule.actions'] : $this->get('coreshop.registry.shipping_rule.actions')) && false ?: '_'}), ${($_ = isset($this->services['coreshop.repository.shipping_rule']) ? $this->services['coreshop.repository.shipping_rule'] : $this->get('coreshop.repository.shipping_rule')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.amount' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Condition\AmountConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_AmountService()
    {
        return $this->services['coreshop.shipping_rule.condition.amount'] = new \CoreShop\Component\Shipping\Rule\Condition\AmountConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.categories' shared service.
     *
     * @return \CoreShop\Component\Core\Shipping\Rule\Condition\CategoriesConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_CategoriesService()
    {
        return $this->services['coreshop.shipping_rule.condition.categories'] = new \CoreShop\Component\Core\Shipping\Rule\Condition\CategoriesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.countries' shared service.
     *
     * @return \CoreShop\Component\Core\Shipping\Rule\Condition\CountriesConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_CountriesService()
    {
        return $this->services['coreshop.shipping_rule.condition.countries'] = new \CoreShop\Component\Core\Shipping\Rule\Condition\CountriesConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.dimension' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Condition\DimensionConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_DimensionService()
    {
        return $this->services['coreshop.shipping_rule.condition.dimension'] = new \CoreShop\Component\Shipping\Rule\Condition\DimensionConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.nested' shared service.
     *
     * @return \CoreShop\Component\Rule\Condition\NestedConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_NestedService()
    {
        return $this->services['coreshop.shipping_rule.condition.nested'] = new \CoreShop\Component\Rule\Condition\NestedConditionChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.postcodes' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Condition\PostcodeConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_PostcodesService()
    {
        return $this->services['coreshop.shipping_rule.condition.postcodes'] = new \CoreShop\Component\Shipping\Rule\Condition\PostcodeConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.products' shared service.
     *
     * @return \CoreShop\Component\Core\Shipping\Rule\Condition\ProductsConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_ProductsService()
    {
        return $this->services['coreshop.shipping_rule.condition.products'] = new \CoreShop\Component\Core\Shipping\Rule\Condition\ProductsConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.shipping_rule' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Condition\ShippingRuleConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_ShippingRuleService()
    {
        return $this->services['coreshop.shipping_rule.condition.shipping_rule'] = new \CoreShop\Component\Shipping\Rule\Condition\ShippingRuleConditionChecker(new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'})), ${($_ = isset($this->services['coreshop.repository.shipping_rule']) ? $this->services['coreshop.repository.shipping_rule'] : $this->get('coreshop.repository.shipping_rule')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.condition.weight' shared service.
     *
     * @return \CoreShop\Component\Shipping\Rule\Condition\WeightConditionChecker
     */
    protected function getCoreshop_ShippingRule_Condition_WeightService()
    {
        return $this->services['coreshop.shipping_rule.condition.weight'] = new \CoreShop\Component\Shipping\Rule\Condition\WeightConditionChecker();
    }

    /**
     * Gets the public 'coreshop.shipping_rule.conditions.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor
     */
    protected function getCoreshop_ShippingRule_Conditions_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.shipping_rule.processor' service.
     *
     * @return \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor
     */
    protected function getCoreshop_ShippingRule_ProcessorService()
    {
        return new \CoreShop\Bundle\RuleBundle\Condition\RuleValidationProcessor(new \CoreShop\Bundle\RuleBundle\Condition\RuleConditionsValidationProcessor(${($_ = isset($this->services['coreshop.registry.shipping_rule.conditions']) ? $this->services['coreshop.registry.shipping_rule.conditions'] : $this->get('coreshop.registry.shipping_rule.conditions')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.storage.cookie' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Storage\CookieStorage
     */
    protected function getCoreshop_Storage_CookieService()
    {
        return $this->services['coreshop.storage.cookie'] = new \CoreShop\Bundle\CoreBundle\Storage\CookieStorage();
    }

    /**
     * Gets the public 'coreshop.storage.currency' shared service.
     *
     * @return \CoreShop\Component\Core\Currency\CurrencyStorage
     */
    protected function getCoreshop_Storage_CurrencyService()
    {
        return $this->services['coreshop.storage.currency'] = new \CoreShop\Component\Core\Currency\CurrencyStorage(${($_ = isset($this->services['coreshop.storage.cookie']) ? $this->services['coreshop.storage.cookie'] : $this->get('coreshop.storage.cookie')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.currency']) ? $this->services['coreshop.repository.currency'] : $this->get('coreshop.repository.currency')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.storage.session' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Storage\SessionStorage
     */
    protected function getCoreshop_Storage_SessionService()
    {
        return $this->services['coreshop.storage.session'] = new \CoreShop\Bundle\CoreBundle\Storage\SessionStorage(${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.store.theme_resolver' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Theme\ThemeResolver
     */
    protected function getCoreshop_Store_ThemeResolverService()
    {
        return $this->services['coreshop.store.theme_resolver'] = new \CoreShop\Bundle\StoreBundle\Theme\ThemeResolver(${($_ = isset($this->services['liip_theme.active_theme']) ? $this->services['liip_theme.active_theme'] : $this->get('liip_theme.active_theme')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.repository.store']) ? $this->services['coreshop.repository.store'] : $this->get('coreshop.repository.store')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.store_collector' shared service.
     *
     * @return \CoreShop\Bundle\StoreBundle\Collector\StoreCollector
     */
    protected function getCoreshop_StoreCollectorService()
    {
        return $this->services['coreshop.store_collector'] = new \CoreShop\Bundle\StoreBundle\Collector\StoreCollector(${($_ = isset($this->services['coreshop.repository.store']) ? $this->services['coreshop.repository.store'] : $this->get('coreshop.repository.store')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.context.store']) ? $this->services['coreshop.context.store'] : $this->get('coreshop.context.store')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'coreshop.taxation.factory.cached_tax_calculator' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Taxation\CachedTaxCalculatorFactory
     */
    protected function getCoreshop_Taxation_Factory_CachedTaxCalculatorService()
    {
        return $this->services['coreshop.taxation.factory.cached_tax_calculator'] = new \CoreShop\Bundle\CoreBundle\Taxation\CachedTaxCalculatorFactory(new \CoreShop\Bundle\CoreBundle\Taxation\TaxCalculatorFactory(${($_ = isset($this->services['coreshop.repository.tax_rule']) ? $this->services['coreshop.repository.tax_rule'] : $this->get('coreshop.repository.tax_rule')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.templating.helper.convert_money' shared service.
     *
     * @return \CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper
     */
    public function getCoreshop_Templating_Helper_ConvertMoneyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['coreshop.templating.helper.convert_money'] = CoreShopBundleMoneyBundleTemplatingHelperConvertMoneyHelper_0000000051556833000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCoreshop_Templating_Helper_ConvertMoneyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper(${($_ = isset($this->services['coreshop.currency_converter']) ? $this->services['coreshop.currency_converter'] : $this->get('coreshop.currency_converter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.templating.helper.currency' shared service.
     *
     * @return \CoreShop\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper
     */
    public function getCoreshop_Templating_Helper_CurrencyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['coreshop.templating.helper.currency'] = CoreShopBundleCurrencyBundleTemplatingHelperCurrencyHelper_0000000051556194000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCoreshop_Templating_Helper_CurrencyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \CoreShop\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper();
    }

    /**
     * Gets the public 'coreshop.templating.helper.discount' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Templating\Helper\ProductDiscountHelper
     */
    protected function getCoreshop_Templating_Helper_DiscountService()
    {
        return $this->services['coreshop.templating.helper.discount'] = new \CoreShop\Bundle\CoreBundle\Templating\Helper\ProductDiscountHelper(${($_ = isset($this->services['coreshop.product.taxed_price_calculator']) ? $this->services['coreshop.product.taxed_price_calculator'] : $this->get('coreshop.product.taxed_price_calculator')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.templating.helper.format_address' shared service.
     *
     * @return \CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper
     */
    public function getCoreshop_Templating_Helper_FormatAddressService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['coreshop.templating.helper.format_address'] = CoreShopBundleAddressBundleTemplatingHelperFormatAddressHelper_0000000051556616000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCoreshop_Templating_Helper_FormatAddressService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper(${($_ = isset($this->services['coreshop.address.formatter']) ? $this->services['coreshop.address.formatter'] : $this->get('coreshop.address.formatter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.templating.helper.format_money' shared service.
     *
     * @return \CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper
     */
    public function getCoreshop_Templating_Helper_FormatMoneyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['coreshop.templating.helper.format_money'] = CoreShopBundleMoneyBundleTemplatingHelperFormatMoneyHelper_0000000051556835000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCoreshop_Templating_Helper_FormatMoneyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper(${($_ = isset($this->services['coreshop.money_formatter']) ? $this->services['coreshop.money_formatter'] : $this->get('coreshop.money_formatter')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.templating.helper.price' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Templating\Helper\ProductPriceHelper
     */
    protected function getCoreshop_Templating_Helper_PriceService()
    {
        return $this->services['coreshop.templating.helper.price'] = new \CoreShop\Bundle\CoreBundle\Templating\Helper\ProductPriceHelper(${($_ = isset($this->services['coreshop.product.taxed_price_calculator']) ? $this->services['coreshop.product.taxed_price_calculator'] : $this->get('coreshop.product.taxed_price_calculator')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.tracking.item_builder.decorated' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Tracking\Builder\ItemBuilder
     */
    protected function getCoreshop_Tracking_ItemBuilder_DecoratedService()
    {
        return $this->services['coreshop.tracking.item_builder.decorated'] = new \CoreShop\Bundle\CoreBundle\Tracking\Builder\ItemBuilder(new \CoreShop\Bundle\TrackingBundle\Builder\ItemBuilder(${($_ = isset($this->services['coreshop.product.taxed_price_calculator']) ? $this->services['coreshop.product.taxed_price_calculator'] : $this->get('coreshop.product.taxed_price_calculator')) && false ?: '_'}));
    }

    /**
     * Gets the public 'coreshop.tracking.manager' shared service.
     *
     * @return \CoreShop\Bundle\TrackingBundle\Manager\TrackingManager
     */
    protected function getCoreshop_Tracking_ManagerService()
    {
        return $this->services['coreshop.tracking.manager'] = new \CoreShop\Bundle\TrackingBundle\Manager\TrackingManager(${($_ = isset($this->services['coreshop.registry.tracking.tracker']) ? $this->services['coreshop.registry.tracking.tracker'] : $this->get('coreshop.registry.tracking.tracker')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.tracking.tracker.google.enhanced_ecommerce' shared service.
     *
     * @return \CoreShop\Bundle\TrackingBundle\EnhancedEcommerce
     */
    protected function getCoreshop_Tracking_Tracker_Google_EnhancedEcommerceService()
    {
        return $this->services['coreshop.tracking.tracker.google.enhanced_ecommerce'] = new \CoreShop\Bundle\TrackingBundle\EnhancedEcommerce(${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.tracking.item_builder.decorated']) ? $this->services['coreshop.tracking.item_builder.decorated'] : $this->get('coreshop.tracking.item_builder.decorated')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.translatable_entity_locale_assigner' shared service.
     *
     * @return \CoreShop\Component\Core\Translation\TranslatableEntityPimcoreLocaleAssigner
     */
    protected function getCoreshop_TranslatableEntityLocaleAssignerService()
    {
        return $this->services['coreshop.translatable_entity_locale_assigner'] = new \CoreShop\Component\Core\Translation\TranslatableEntityPimcoreLocaleAssigner(${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.translation.translatable_listener.doctrine.orm' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\EventListener\ORMTranslatableListener
     */
    protected function getCoreshop_Translation_TranslatableListener_Doctrine_OrmService()
    {
        return $this->services['coreshop.translation.translatable_listener.doctrine.orm'] = new \CoreShop\Bundle\ResourceBundle\EventListener\ORMTranslatableListener(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}, $this);
    }

    /**
     * Gets the public 'coreshop.translation_locale_provider.pimcore' shared service.
     *
     * @return \CoreShop\Component\Resource\Translation\Provider\PimcoreTranslationLocaleProvider
     */
    protected function getCoreshop_TranslationLocaleProvider_PimcoreService()
    {
        return $this->services['coreshop.translation_locale_provider.pimcore'] = new \CoreShop\Component\Resource\Translation\Provider\PimcoreTranslationLocaleProvider();
    }

    /**
     * Gets the public 'coreshop.twig.extension.discount' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Twig\ProductDiscountExtension
     */
    protected function getCoreshop_Twig_Extension_DiscountService()
    {
        return $this->services['coreshop.twig.extension.discount'] = new \CoreShop\Bundle\CoreBundle\Twig\ProductDiscountExtension(${($_ = isset($this->services['coreshop.templating.helper.discount']) ? $this->services['coreshop.templating.helper.discount'] : $this->get('coreshop.templating.helper.discount')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.twig.extension.price' shared service.
     *
     * @return \CoreShop\Bundle\CoreBundle\Twig\ProductPriceExtension
     */
    protected function getCoreshop_Twig_Extension_PriceService()
    {
        return $this->services['coreshop.twig.extension.price'] = new \CoreShop\Bundle\CoreBundle\Twig\ProductPriceExtension(${($_ = isset($this->services['coreshop.templating.helper.price']) ? $this->services['coreshop.templating.helper.price'] : $this->get('coreshop.templating.helper.price')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.wishlist.manager' shared service.
     *
     * @return \CoreShop\Component\StorageList\SessionStorageManager
     */
    protected function getCoreshop_Wishlist_ManagerService()
    {
        return $this->services['coreshop.wishlist.manager'] = new \CoreShop\Component\StorageList\SessionStorageManager(${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'}, 'wishlist', ${($_ = isset($this->services['coreshop.factory.wishlist']) ? $this->services['coreshop.factory.wishlist'] : $this->get('coreshop.factory.wishlist')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.wishlist.modifier' shared service.
     *
     * @return \CoreShop\Component\StorageList\SessionStorageListModifier
     */
    protected function getCoreshop_Wishlist_ModifierService()
    {
        return $this->services['coreshop.wishlist.modifier'] = new \CoreShop\Component\StorageList\SessionStorageListModifier(${($_ = isset($this->services['coreshop.factory.wishlist_item']) ? $this->services['coreshop.factory.wishlist_item'] : $this->get('coreshop.factory.wishlist_item')) && false ?: '_'}, ${($_ = isset($this->services['coreshop.wishlist.manager']) ? $this->services['coreshop.wishlist.manager'] : $this->get('coreshop.wishlist.manager')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.workflow.manager.order' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Workflow\WorkflowManager
     */
    protected function getCoreshop_Workflow_Manager_OrderService()
    {
        $this->services['coreshop.workflow.manager.order'] = $instance = new \CoreShop\Bundle\OrderBundle\Workflow\WorkflowManager(${($_ = isset($this->services['coreshop.workflow.manager.order.validators']) ? $this->services['coreshop.workflow.manager.order.validators'] : $this->get('coreshop.workflow.manager.order.validators')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, 'CoreShop\\Component\\Order\\Model\\OrderInterface', ${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, 'Order State Change', ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'});

        $instance->addValidator(${($_ = isset($this->services['coreshop.workflow.manager.order.validator.payment']) ? $this->services['coreshop.workflow.manager.order.validator.payment'] : $this->get('coreshop.workflow.manager.order.validator.payment')) && false ?: '_'}, 'payment', 10);
        $instance->addValidator(${($_ = isset($this->services['coreshop.workflow.manager.order.validator.invoice']) ? $this->services['coreshop.workflow.manager.order.validator.invoice'] : $this->get('coreshop.workflow.manager.order.validator.invoice')) && false ?: '_'}, 'invoice', 20);
        $instance->addValidator(${($_ = isset($this->services['coreshop.workflow.manager.order.validator.shipment']) ? $this->services['coreshop.workflow.manager.order.validator.shipment'] : $this->get('coreshop.workflow.manager.order.validator.shipment')) && false ?: '_'}, 'shipment', 30);

        return $instance;
    }

    /**
     * Gets the public 'coreshop.workflow.manager.order.validator.invoice' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Workflow\Order\OrderDocumentValidator
     */
    protected function getCoreshop_Workflow_Manager_Order_Validator_InvoiceService()
    {
        return $this->services['coreshop.workflow.manager.order.validator.invoice'] = new \CoreShop\Bundle\OrderBundle\Workflow\Order\OrderDocumentValidator(${($_ = isset($this->services['coreshop.order.invoice.processable']) ? $this->services['coreshop.order.invoice.processable'] : $this->get('coreshop.order.invoice.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.workflow.manager.order.validator.payment' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Workflow\Order\PaymentValidator
     */
    protected function getCoreshop_Workflow_Manager_Order_Validator_PaymentService()
    {
        return $this->services['coreshop.workflow.manager.order.validator.payment'] = new \CoreShop\Bundle\OrderBundle\Workflow\Order\PaymentValidator();
    }

    /**
     * Gets the public 'coreshop.workflow.manager.order.validator.shipment' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Workflow\Order\OrderDocumentValidator
     */
    protected function getCoreshop_Workflow_Manager_Order_Validator_ShipmentService()
    {
        return $this->services['coreshop.workflow.manager.order.validator.shipment'] = new \CoreShop\Bundle\OrderBundle\Workflow\Order\OrderDocumentValidator(${($_ = isset($this->services['coreshop.order.shipment.processable']) ? $this->services['coreshop.order.shipment.processable'] : $this->get('coreshop.order.shipment.processable')) && false ?: '_'});
    }

    /**
     * Gets the public 'coreshop.workflow.manager.order.validators' shared service.
     *
     * @return \CoreShop\Component\Registry\PrioritizedServiceRegistry
     */
    protected function getCoreshop_Workflow_Manager_Order_ValidatorsService()
    {
        return $this->services['coreshop.workflow.manager.order.validators'] = new \CoreShop\Component\Registry\PrioritizedServiceRegistry('CoreShop\\Component\\Order\\Workflow\\ProposalValidatorInterface', 'workflow-order-manager-validators');
    }

    /**
     * Gets the public 'coreshop.workflow.manager.registry' shared service.
     *
     * @return \CoreShop\Component\Registry\ServiceRegistry
     */
    protected function getCoreshop_Workflow_Manager_RegistryService()
    {
        $this->services['coreshop.workflow.manager.registry'] = $instance = new \CoreShop\Component\Registry\ServiceRegistry('CoreShop\\Component\\Order\\Workflow\\WorkflowManagerInterface', 'workflow-managers');

        $instance->register('Pimcore\\Model\\DataObject\\CoreShopOrder', ${($_ = isset($this->services['coreshop.workflow.manager.order']) ? $this->services['coreshop.workflow.manager.order'] : $this->get('coreshop.workflow.manager.order')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'data_collector.dump' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector
     */
    protected function getDataCollector_DumpService()
    {
        return $this->services['data_collector.dump'] = new \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector(${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'}, 'UTF-8', ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, NULL);
    }

    /**
     * Gets the public 'data_collector.form' shared service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataCollector
     */
    protected function getDataCollector_FormService()
    {
        return $this->services['data_collector.form'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataCollector(${($_ = isset($this->services['data_collector.form.extractor']) ? $this->services['data_collector.form.extractor'] : $this->get('data_collector.form.extractor')) && false ?: '_'});
    }

    /**
     * Gets the public 'data_collector.form.extractor' shared service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor
     */
    protected function getDataCollector_Form_ExtractorService()
    {
        return $this->services['data_collector.form.extractor'] = new \Symfony\Component\Form\Extension\DataCollector\FormDataExtractor();
    }

    /**
     * Gets the public 'data_collector.request' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector
     */
    protected function getDataCollector_RequestService()
    {
        return $this->services['data_collector.request'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector();
    }

    /**
     * Gets the public 'data_collector.router' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector
     */
    protected function getDataCollector_RouterService()
    {
        return $this->services['data_collector.router'] = new \Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector();
    }

    /**
     * Gets the public 'data_collector.translation' shared service.
     *
     * @return \Symfony\Component\Translation\DataCollector\TranslationDataCollector
     */
    protected function getDataCollector_TranslationService()
    {
        return $this->services['data_collector.translation'] = new \Symfony\Component\Translation\DataCollector\TranslationDataCollector(${($_ = isset($this->services['translator.data_collector']) ? $this->services['translator.data_collector'] : $this->getTranslator_DataCollectorService()) && false ?: '_'});
    }

    /**
     * Gets the public 'debug.argument_resolver' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver
     */
    protected function getDebug_ArgumentResolverService()
    {
        return $this->services['debug.argument_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory(), new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['argument_resolver.request_attribute']) ? $this->services['argument_resolver.request_attribute'] : $this->getArgumentResolver_RequestAttributeService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['argument_resolver.request']) ? $this->services['argument_resolver.request'] : $this->getArgumentResolver_RequestService()) && false ?: '_'};
            yield 2 => ${($_ = isset($this->services['argument_resolver.session']) ? $this->services['argument_resolver.session'] : $this->getArgumentResolver_SessionService()) && false ?: '_'};
            yield 3 => ${($_ = isset($this->services['security.user_value_resolver']) ? $this->services['security.user_value_resolver'] : $this->getSecurity_UserValueResolverService()) && false ?: '_'};
            yield 4 => ${($_ = isset($this->services['Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver']) ? $this->services['Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver'] : $this->getPimcore_Controller_ArgumentValueResolver_DocumentValueResolverService()) && false ?: '_'};
            yield 5 => ${($_ = isset($this->services['Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver']) ? $this->services['Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver'] : $this->getPimcore_Controller_ArgumentValueResolver_ViewModelValueResolverService()) && false ?: '_'};
            yield 6 => ${($_ = isset($this->services['Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver']) ? $this->services['Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver'] : $this->getPimcore_Controller_ArgumentValueResolver_EditmodeValueResolverService()) && false ?: '_'};
            yield 7 => ${($_ = isset($this->services['Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver']) ? $this->services['Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver'] : $this->getPimcore_Controller_ArgumentValueResolver_TemplateVarsValueResolverService()) && false ?: '_'};
            yield 8 => ${($_ = isset($this->services['Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver']) ? $this->services['Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver'] : $this->getPimcore_Controller_ArgumentValueResolver_WebsiteConfigValueResolverService()) && false ?: '_'};
            yield 9 => ${($_ = isset($this->services['argument_resolver.service']) ? $this->services['argument_resolver.service'] : $this->getArgumentResolver_ServiceService()) && false ?: '_'};
            yield 10 => ${($_ = isset($this->services['argument_resolver.default']) ? $this->services['argument_resolver.default'] : $this->getArgumentResolver_DefaultService()) && false ?: '_'};
            yield 11 => ${($_ = isset($this->services['argument_resolver.variadic']) ? $this->services['argument_resolver.variadic'] : $this->getArgumentResolver_VariadicService()) && false ?: '_'};
        }, 12)), ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch')) && false ?: '_'});
    }

    /**
     * Gets the public 'debug.controller_resolver' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver
     */
    protected function getDebug_ControllerResolverService()
    {
        return $this->services['debug.controller_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->getControllerNameConverterService()) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.request']) ? $this->services['monolog.logger.request'] : $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}), ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch')) && false ?: '_'}, ${($_ = isset($this->services['debug.argument_resolver']) ? $this->services['debug.argument_resolver'] : $this->get('debug.argument_resolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'debug.debug_handlers_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, ${($_ = isset($this->services['monolog.logger.php']) ? $this->services['monolog.logger.php'] : $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, -1, -1, true, ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'}, true);
    }

    /**
     * Gets the public 'debug.dump_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DumpListener
     */
    protected function getDebug_DumpListenerService()
    {
        return $this->services['debug.dump_listener'] = new \Symfony\Component\HttpKernel\EventListener\DumpListener(${($_ = isset($this->services['var_dumper.cloner']) ? $this->services['var_dumper.cloner'] : $this->get('var_dumper.cloner')) && false ?: '_'}, ${($_ = isset($this->services['var_dumper.cli_dumper']) ? $this->services['var_dumper.cli_dumper'] : $this->get('var_dumper.cli_dumper')) && false ?: '_'});
    }

    /**
     * Gets the public 'debug.event_dispatcher' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher
     */
    protected function getDebug_EventDispatcherService()
    {
        $this->services['debug.event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this), ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch')) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.event']) ? $this->services['monolog.logger.event'] : $this->get('monolog.logger.event', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});

        $instance->addListener('pimcore.dataobject.preUpdate', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.cart']) ? $this->services['coreshop.event_listener.cart'] : $this->get('coreshop.event_listener.cart')) && false ?: '_'};
        }, 1 => 'recalculateCart'), 0);
        $instance->addListener('coreshop.product_price_rule.post_save', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.clear_cached_rules']) ? $this->services['coreshop.event_listener.clear_cached_rules'] : $this->get('coreshop.event_listener.clear_cached_rules')) && false ?: '_'};
        }, 1 => 'clearCachedRules'), 0);
        $instance->addListener('coreshop.product_specific_price_rule.post_save', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.clear_cached_rules']) ? $this->services['coreshop.event_listener.clear_cached_rules'] : $this->get('coreshop.event_listener.clear_cached_rules')) && false ?: '_'};
        }, 1 => 'clearCachedRules'), 0);
        $instance->addListener('coreshop.product_price_rule.post_delete', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.clear_cached_rules']) ? $this->services['coreshop.event_listener.clear_cached_rules'] : $this->get('coreshop.event_listener.clear_cached_rules')) && false ?: '_'};
        }, 1 => 'clearCachedRules'), 0);
        $instance->addListener('coreshop.product_specific_price_rule.post_delete', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.clear_cached_rules']) ? $this->services['coreshop.event_listener.clear_cached_rules'] : $this->get('coreshop.event_listener.clear_cached_rules')) && false ?: '_'};
        }, 1 => 'clearCachedRules'), 0);
        $instance->addListener('pimcore.dataobject.preUpdate', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.listeners.product.category.pre_update']) ? $this->services['coreshop.listeners.product.category.pre_update'] : $this->get('coreshop.listeners.product.category.pre_update')) && false ?: '_'};
        }, 1 => 'onPreUpdate'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.listener.theme_request']) ? $this->services['coreshop.listener.theme_request'] : $this->get('coreshop.listener.theme_request')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('coreshop.index.post_save', array(0 => function () {
            return ${($_ = isset($this->services['‌coreshop.listeners.index.post_save']) ? $this->services['‌coreshop.listeners.index.post_save'] : $this->get('‌coreshop.listeners.index.post_save')) && false ?: '_'};
        }, 1 => 'onIndexSavePost'), 0);
        $instance->addListener('pimcore.dataobject.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.listeners.index.object.post_update']) ? $this->services['coreshop.listeners.index.object.post_update'] : $this->get('coreshop.listeners.index.object.post_update')) && false ?: '_'};
        }, 1 => 'onPostUpdate'), 0);
        $instance->addListener('coreshop.notification_rule.pre_create', array(0 => function () {
            return ${($_ = isset($this->services['‌coreshop.listeners.notification_rule.pre_create']) ? $this->services['‌coreshop.listeners.notification_rule.pre_create'] : $this->get('‌coreshop.listeners.notification_rule.pre_create')) && false ?: '_'};
        }, 1 => 'preCreate'), 0);
        $instance->addListener('security.interactive_login', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.listener.cart_blamer']) ? $this->services['coreshop.listener.cart_blamer'] : $this->get('coreshop.listener.cart_blamer')) && false ?: '_'};
        }, 1 => 'onInteractiveLogin'), 0);
        $instance->addListener('coreshop.customer.register', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.listener.cart_blamer']) ? $this->services['coreshop.listener.cart_blamer'] : $this->get('coreshop.listener.cart_blamer')) && false ?: '_'};
        }, 1 => 'onRegisterEvent'), 0);
        $instance->addListener('coreshop.invoice.post_transform', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listener.invoice']) ? $this->services['coreshop.notification.listener.invoice'] : $this->get('coreshop.notification.listener.invoice')) && false ?: '_'};
        }, 1 => 'applyRule'), 0);
        $instance->addListener('coreshop.shipment.post_transform', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listener.shipment']) ? $this->services['coreshop.notification.listener.shipment'] : $this->get('coreshop.notification.listener.shipment')) && false ?: '_'};
        }, 1 => 'applyRule'), 0);
        $instance->addListener('coreshop.quote.post_transform', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listener.quote']) ? $this->services['coreshop.notification.listener.quote'] : $this->get('coreshop.notification.listener.quote')) && false ?: '_'};
        }, 1 => 'applyRule'), 0);
        $instance->addListener('coreshop.workflow_manager.success', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listsener.order']) ? $this->services['coreshop.notification.listsener.order'] : $this->get('coreshop.notification.listsener.order')) && false ?: '_'};
        }, 1 => 'applyRule'), 0);
        $instance->addListener('coreshop.customer.request_password_reset', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listener.customer']) ? $this->services['coreshop.notification.listener.customer'] : $this->get('coreshop.notification.listener.customer')) && false ?: '_'};
        }, 1 => 'applyPasswordRequestResetRule'), 0);
        $instance->addListener('coreshop.customer.register', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.notification.listener.customer']) ? $this->services['coreshop.notification.listener.customer'] : $this->get('coreshop.notification.listener.customer')) && false ?: '_'};
        }, 1 => 'applyRegisterCustomerRule'), 0);
        $instance->addListener('pimcore.system.maintenance', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.cart.cleanup.maintenance_listener']) ? $this->services['coreshop.cart.cleanup.maintenance_listener'] : $this->get('coreshop.cart.cleanup.maintenance_listener')) && false ?: '_'};
        }, 1 => 'registerCartCleanup'), 0);
        $instance->addListener('coreshop.cart_price_rule.post_save', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.price_rule_update']) ? $this->services['coreshop.event_listener.price_rule_update'] : $this->get('coreshop.event_listener.price_rule_update')) && false ?: '_'};
        }, 1 => 'storeConfigurationThatPriceRulesChanged'), 0);
        $instance->addListener('coreshop.cart_price_rule.post_delete', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.price_rule_update']) ? $this->services['coreshop.event_listener.price_rule_update'] : $this->get('coreshop.event_listener.price_rule_update')) && false ?: '_'};
        }, 1 => 'storeConfigurationThatPriceRulesChanged'), 0);
        $instance->addListener('coreshop.product_price_rule.post_save', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.price_rule_update']) ? $this->services['coreshop.event_listener.price_rule_update'] : $this->get('coreshop.event_listener.price_rule_update')) && false ?: '_'};
        }, 1 => 'storeConfigurationThatPriceRulesChanged'), 0);
        $instance->addListener('coreshop.product_price_rule.post_delete', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.price_rule_update']) ? $this->services['coreshop.event_listener.price_rule_update'] : $this->get('coreshop.event_listener.price_rule_update')) && false ?: '_'};
        }, 1 => 'storeConfigurationThatPriceRulesChanged'), 0);
        $instance->addListener('pimcore.dataobject.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.product_update']) ? $this->services['coreshop.event_listener.product_update'] : $this->get('coreshop.event_listener.product_update')) && false ?: '_'};
        }, 1 => 'storeConfigurationThatProductChanged'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.event_listener.update_cart']) ? $this->services['coreshop.event_listener.update_cart'] : $this->get('coreshop.event_listener.update_cart')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('coreshop.order.shipment.wkhtml.options', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.order.listener.wkhtml_options']) ? $this->services['coreshop.order.listener.wkhtml_options'] : $this->get('coreshop.order.listener.wkhtml_options')) && false ?: '_'};
        }, 1 => 'resolveOptions'), 0);
        $instance->addListener('coreshop.order.invoice.wkhtml.options', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.order.listener.wkhtml_options']) ? $this->services['coreshop.order.listener.wkhtml_options'] : $this->get('coreshop.order.listener.wkhtml_options')) && false ?: '_'};
        }, 1 => 'resolveOptions'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['fos_rest.body_listener']) ? $this->services['fos_rest.body_listener'] : $this->get('fos_rest.body_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 10);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['fos_rest.format_listener']) ? $this->services['fos_rest.format_listener'] : $this->get('fos_rest.format_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 34);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['payum.listener.reply_to_http_response']) ? $this->services['payum.listener.reply_to_http_response'] : $this->get('payum.listener.reply_to_http_response')) && false ?: '_'};
        }, 1 => 'onKernelException'), 128);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['data_collector.router']) ? $this->services['data_collector.router'] : $this->get('data_collector.router')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleAnalyticsCodeListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -110);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\CookiePolicyNoticeListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -109);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleTagManagerListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -108);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\TagManagerListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -107);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\TargetingListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -106);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 600);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -120);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\Frontend\FullPageCacheListener')) && false ?: '_'};
        }, 1 => 'stopPropagationCheck'), 100);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_MaintenancePageListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 620);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.storage.cookie']) ? $this->services['coreshop.storage.cookie'] : $this->get('coreshop.storage.cookie')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 1024);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['coreshop.storage.cookie']) ? $this->services['coreshop.storage.cookie'] : $this->get('coreshop.storage.cookie')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -1024);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['response_listener']) ? $this->services['response_listener'] : $this->get('response_listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['streamed_response_listener']) ? $this->services['streamed_response_listener'] : $this->get('streamed_response_listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -1024);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['locale_listener']) ? $this->services['locale_listener'] : $this->get('locale_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 16);
        $instance->addListener('kernel.finish_request', array(0 => function () {
            return ${($_ = isset($this->services['locale_listener']) ? $this->services['locale_listener'] : $this->get('locale_listener')) && false ?: '_'};
        }, 1 => 'onKernelFinishRequest'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['validate_request_listener']) ? $this->services['validate_request_listener'] : $this->get('validate_request_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 256);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['resolve_controller_name_subscriber']) ? $this->services['resolve_controller_name_subscriber'] : $this->getResolveControllerNameSubscriberService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 24);
        $instance->addListener('console.error', array(0 => function () {
            return ${($_ = isset($this->services['console.error_listener']) ? $this->services['console.error_listener'] : $this->getConsole_ErrorListenerService()) && false ?: '_'};
        }, 1 => 'onConsoleError'), -128);
        $instance->addListener('console.terminate', array(0 => function () {
            return ${($_ = isset($this->services['console.error_listener']) ? $this->services['console.error_listener'] : $this->getConsole_ErrorListenerService()) && false ?: '_'};
        }, 1 => 'onConsoleTerminate'), -128);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['session_listener']) ? $this->services['session_listener'] : $this->get('session_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 128);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['session.save_listener']) ? $this->services['session.save_listener'] : $this->get('session.save_listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -1000);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['translator_listener']) ? $this->services['translator_listener'] : $this->get('translator_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 10);
        $instance->addListener('kernel.finish_request', array(0 => function () {
            return ${($_ = isset($this->services['translator_listener']) ? $this->services['translator_listener'] : $this->get('translator_listener')) && false ?: '_'};
        }, 1 => 'onKernelFinishRequest'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['profiler_listener']) ? $this->services['profiler_listener'] : $this->get('profiler_listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -100);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['profiler_listener']) ? $this->services['profiler_listener'] : $this->get('profiler_listener')) && false ?: '_'};
        }, 1 => 'onKernelException'), 0);
        $instance->addListener('kernel.terminate', array(0 => function () {
            return ${($_ = isset($this->services['profiler_listener']) ? $this->services['profiler_listener'] : $this->get('profiler_listener')) && false ?: '_'};
        }, 1 => 'onKernelTerminate'), -1024);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['data_collector.request']) ? $this->services['data_collector.request'] : $this->get('data_collector.request')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['data_collector.request']) ? $this->services['data_collector.request'] : $this->get('data_collector.request')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['debug.debug_handlers_listener']) ? $this->services['debug.debug_handlers_listener'] : $this->get('debug.debug_handlers_listener')) && false ?: '_'};
        }, 1 => 'configure'), 2048);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['router_listener']) ? $this->services['router_listener'] : $this->get('router_listener')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 32);
        $instance->addListener('kernel.finish_request', array(0 => function () {
            return ${($_ = isset($this->services['router_listener']) ? $this->services['router_listener'] : $this->get('router_listener')) && false ?: '_'};
        }, 1 => 'onKernelFinishRequest'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['security.firewall']) ? $this->services['security.firewall'] : $this->get('security.firewall')) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 8);
        $instance->addListener('kernel.finish_request', array(0 => function () {
            return ${($_ = isset($this->services['security.firewall']) ? $this->services['security.firewall'] : $this->get('security.firewall')) && false ?: '_'};
        }, 1 => 'onKernelFinishRequest'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['security.rememberme.response_listener']) ? $this->services['security.rememberme.response_listener'] : $this->get('security.rememberme.response_listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['twig.exception_listener']) ? $this->services['twig.exception_listener'] : $this->get('twig.exception_listener')) && false ?: '_'};
        }, 1 => 'onKernelException'), -128);
        $instance->addListener('console.command', array(0 => function () {
            return ${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'};
        }, 1 => 'onCommand'), 255);
        $instance->addListener('console.terminate', array(0 => function () {
            return ${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'};
        }, 1 => 'onTerminate'), -255);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['swiftmailer.email_sender.listener']) ? $this->services['swiftmailer.email_sender.listener'] : $this->get('swiftmailer.email_sender.listener')) && false ?: '_'};
        }, 1 => 'onException'), 0);
        $instance->addListener('kernel.terminate', array(0 => function () {
            return ${($_ = isset($this->services['swiftmailer.email_sender.listener']) ? $this->services['swiftmailer.email_sender.listener'] : $this->get('swiftmailer.email_sender.listener')) && false ?: '_'};
        }, 1 => 'onTerminate'), 0);
        $instance->addListener('console.error', array(0 => function () {
            return ${($_ = isset($this->services['swiftmailer.email_sender.listener']) ? $this->services['swiftmailer.email_sender.listener'] : $this->get('swiftmailer.email_sender.listener')) && false ?: '_'};
        }, 1 => 'onException'), 0);
        $instance->addListener('console.terminate', array(0 => function () {
            return ${($_ = isset($this->services['swiftmailer.email_sender.listener']) ? $this->services['swiftmailer.email_sender.listener'] : $this->get('swiftmailer.email_sender.listener')) && false ?: '_'};
        }, 1 => 'onTerminate'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.controller.listener']) ? $this->services['sensio_framework_extra.controller.listener'] : $this->get('sensio_framework_extra.controller.listener')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.converter.listener']) ? $this->services['sensio_framework_extra.converter.listener'] : $this->get('sensio_framework_extra.converter.listener')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.view.listener']) ? $this->services['sensio_framework_extra.view.listener'] : $this->get('sensio_framework_extra.view.listener')) && false ?: '_'};
        }, 1 => 'onKernelController'), -128);
        $instance->addListener('kernel.view', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.view.listener']) ? $this->services['sensio_framework_extra.view.listener'] : $this->get('sensio_framework_extra.view.listener')) && false ?: '_'};
        }, 1 => 'onKernelView'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.cache.listener']) ? $this->services['sensio_framework_extra.cache.listener'] : $this->get('sensio_framework_extra.cache.listener')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.cache.listener']) ? $this->services['sensio_framework_extra.cache.listener'] : $this->get('sensio_framework_extra.cache.listener')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['sensio_framework_extra.security.listener']) ? $this->services['sensio_framework_extra.security.listener'] : $this->get('sensio_framework_extra.security.listener')) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('console.command', array(0 => function () {
            return ${($_ = isset($this->services['debug.dump_listener']) ? $this->services['debug.dump_listener'] : $this->get('debug.dump_listener')) && false ?: '_'};
        }, 1 => 'configure'), 1024);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['web_profiler.debug_toolbar']) ? $this->services['web_profiler.debug_toolbar'] : $this->get('web_profiler.debug_toolbar')) && false ?: '_'};
        }, 1 => 'onKernelResponse'), -128);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_FrontendRoutingListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 512);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_FrontendRoutingListenerService()) && false ?: '_'};
        }, 1 => 'onKernelException'), 64);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_PimcoreContextListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 24);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentFallbackListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 20);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_PimcoreHeaderListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_LocaleListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 1);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_LocaleListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_TranslationDebugListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_ElementListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 3);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_HardlinkCanonicalListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_BlockStateListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_BlockStateListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentMetaDataListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('kernel.view', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ControllerViewModelListenerService()) && false ?: '_'};
        }, 1 => 'onKernelView'), 10);
        $instance->addListener('kernel.view', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_ContentTemplateListenerService()) && false ?: '_'};
        }, 1 => 'onKernelView'), 16);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_EventedControllerListenerService()) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_EventedControllerListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_TemplateControllerListenerService()) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.view', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_TemplateControllerListenerService()) && false ?: '_'};
        }, 1 => 'onKernelView'), 32);
        $instance->addListener('pimcore.dataobject.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostAdd'), 0);
        $instance->addListener('pimcore.document.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostAdd'), 0);
        $instance->addListener('pimcore.asset.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostAdd'), 0);
        $instance->addListener('pimcore.dataobject.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostDelete'), 0);
        $instance->addListener('pimcore.document.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostDelete'), 0);
        $instance->addListener('pimcore.asset.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onElementPostDelete'), 0);
        $instance->addListener('pimcore.admin.dataobject.get.preSendData', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onAdminElementGetPreSendData'), 0);
        $instance->addListener('pimcore.admin.asset.get.preSendData', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onAdminElementGetPreSendData'), 0);
        $instance->addListener('pimcore.admin.document.get.preSendData', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener'] : $this->get('Pimcore\Bundle\CoreBundle\EventListener\WorkflowManagementListener')) && false ?: '_'};
        }, 1 => 'onAdminElementGetPreSendData'), 0);
        $instance->addListener('pimcore.dataobject.postCopy', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService()) && false ?: '_'};
        }, 1 => 'onPostCopy'), 0);
        $instance->addListener('pimcore.document.postCopy', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService()) && false ?: '_'};
        }, 1 => 'onPostCopy'), 0);
        $instance->addListener('pimcore.asset.postCopy', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService()) && false ?: '_'};
        }, 1 => 'onPostCopy'), 0);
        $instance->addListener('pimcore.asset.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService()) && false ?: '_'};
        }, 1 => 'onPostAssetDelete'), -9999);
        $instance->addListener('pimcore.dataobject.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostAddElement'), 0);
        $instance->addListener('pimcore.document.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostAddElement'), 0);
        $instance->addListener('pimcore.asset.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostAddElement'), 0);
        $instance->addListener('pimcore.dataobject.preDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPreDeleteElement'), 0);
        $instance->addListener('pimcore.document.preDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPreDeleteElement'), 0);
        $instance->addListener('pimcore.asset.preDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPreDeleteElement'), 0);
        $instance->addListener('pimcore.dataobject.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostUpdateElement'), 0);
        $instance->addListener('pimcore.document.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostUpdateElement'), 0);
        $instance->addListener('pimcore.asset.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()) && false ?: '_'};
        }, 1 => 'onPostUpdateElement'), 0);
        $instance->addListener('pimcore.dataobject.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostAdd'), 0);
        $instance->addListener('pimcore.document.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostAdd'), 0);
        $instance->addListener('pimcore.asset.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostAdd'), 0);
        $instance->addListener('pimcore.class.postAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostAdd'), 0);
        $instance->addListener('pimcore.dataobject.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostDelete'), 0);
        $instance->addListener('pimcore.document.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostDelete'), 0);
        $instance->addListener('pimcore.asset.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostDelete'), 0);
        $instance->addListener('pimcore.class.postDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()) && false ?: '_'};
        }, 1 => 'onPostDelete'), 0);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ResponseExceptionListenerService()) && false ?: '_'};
        }, 1 => 'onKernelException'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_ResponseHeaderListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 32);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_EditmodeListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_EditmodeListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_InternalWysiwygHtmlAttributeFilterListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener']) ? $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener'] : $this->getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleSearchConsoleVerificationListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('pimcore.test.kernel.booted', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Migrations\Configuration\ConfigurationFactory']) ? $this->services['Pimcore\Migrations\Configuration\ConfigurationFactory'] : $this->get('Pimcore\Migrations\Configuration\ConfigurationFactory')) && false ?: '_'};
        }, 1 => 'reset'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_BruteforceProtectionListenerService()) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_BruteforceProtectionListenerService()) && false ?: '_'};
        }, 1 => 'onKernelException'), 0);
        $instance->addListener('kernel.controller', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_AdminAuthenticationDoubleCheckListenerService()) && false ?: '_'};
        }, 1 => 'onKernelController'), 0);
        $instance->addListener('kernel.exception', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_AdminExceptionListenerService()) && false ?: '_'};
        }, 1 => 'onKernelException'), 0);
        $instance->addListener('kernel.response', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_HttpCacheListenerService()) && false ?: '_'};
        }, 1 => 'onKernelResponse'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_UserPerspectiveListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('kernel.request', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener']) ? $this->services['Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener'] : $this->getPimcore_Bundle_AdminBundle_EventListener_UsageStatisticsListenerService()) && false ?: '_'};
        }, 1 => 'onKernelRequest'), 0);
        $instance->addListener('pimcore.dataobject.preAdd', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener']) ? $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener'] : $this->getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_IndexUpdateListenerService()) && false ?: '_'};
        }, 1 => 'onObjectUpdate'), 0);
        $instance->addListener('pimcore.dataobject.postUpdate', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener']) ? $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener'] : $this->getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_IndexUpdateListenerService()) && false ?: '_'};
        }, 1 => 'onObjectUpdate'), 0);
        $instance->addListener('pimcore.dataobject.preDelete', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener']) ? $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener'] : $this->getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_IndexUpdateListenerService()) && false ?: '_'};
        }, 1 => 'onObjectDelete'), 0);
        $instance->addListener('pimcore.system.maintenance', array(0 => function () {
            return ${($_ = isset($this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener']) ? $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener'] : $this->getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_SystemEventsListenerService()) && false ?: '_'};
        }, 1 => 'onMaintenance'), 0);

        return $instance;
    }

    /**
     * Gets the public 'debug.stopwatch' shared service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch
     */
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }

    /**
     * Gets the public 'debug.templating.engine.php' shared service.
     *
     * @return \Pimcore\Templating\TimedPhpEngine
     */
    protected function getDebug_Templating_Engine_PhpService()
    {
        $this->services['debug.templating.engine.php'] = $instance = new \Pimcore\Templating\TimedPhpEngine(${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : $this->get('templating.name_parser')) && false ?: '_'}, $this, ${($_ = isset($this->services['templating.loader']) ? $this->services['templating.loader'] : $this->get('templating.loader')) && false ?: '_'}, ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch')) && false ?: '_'}, ${($_ = isset($this->services['templating.globals']) ? $this->services['templating.globals'] : $this->get('templating.globals')) && false ?: '_'});

        $instance->setCharset('UTF-8');
        $instance->setHelpers(array('jms_serializer' => 'jms_serializer.templating.helper.serializer', 'coreshop_format_money' => 'coreshop.templating.helper.format_money', 'coreshop_convert_money' => 'coreshop.templating.helper.convert_money', 'coreshop_format_address' => 'coreshop.templating.helper.format_address', 'coreshop_currency' => 'coreshop.templating.helper.currency', 'coreshop_product_price' => 'coreshop.templating.helper.price', 'coreshop_product_discount' => 'coreshop.templating.helper.discount', 'slots' => 'templating.helper.slots', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'router' => 'templating.helper.router', 'assets' => 'templating.helper.assets', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'templating.helper.security', 'action' => 'Pimcore\\Templating\\Helper\\Action', 'getParam' => 'Pimcore\\Templating\\Helper\\GetParam', 'getAllParams' => 'Pimcore\\Templating\\Helper\\GetAllParams', 'glossary' => 'Pimcore\\Templating\\Helper\\Glossary', 'inc' => 'Pimcore\\Templating\\Helper\\Inc', 'pimcoreUrl' => 'Pimcore\\Templating\\Helper\\PimcoreUrl', 'placeholder' => 'Pimcore\\Templating\\Helper\\Placeholder', 'headTitle' => 'Pimcore\\Templating\\Helper\\HeadTitle', 'headLink' => 'Pimcore\\Templating\\Helper\\HeadLink', 'headScript' => 'Pimcore\\Templating\\Helper\\HeadScript', 'inlineScript' => 'Pimcore\\Templating\\Helper\\InlineScript', 'headStyle' => 'Pimcore\\Templating\\Helper\\HeadStyle', 'headMeta' => 'Pimcore\\Templating\\Helper\\HeadMeta', 'device' => 'Pimcore\\Templating\\Helper\\Device', 'cache' => 'Pimcore\\Templating\\Helper\\Cache', 'navigation' => 'Pimcore\\Templating\\Helper\\Navigation', 'websiteConfig' => 'Pimcore\\Templating\\Helper\\WebsiteConfig', 'translate' => 'pimcore.templating.view_helper.translate', 'translateAdmin' => 'pimcore.templating.view_helper.translate_admin'));
        $instance->addHelperBroker(new \Pimcore\Templating\HelperBroker\HelperShortcuts(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}));
        $instance->addHelperBroker(new \Pimcore\Templating\HelperBroker\TemplatingHelper());
        $instance->addHelperBroker(new \Pimcore\Templating\HelperBroker\DocumentTag(${($_ = isset($this->services['pimcore.templating.tag_renderer']) ? $this->services['pimcore.templating.tag_renderer'] : $this->get('pimcore.templating.tag_renderer')) && false ?: '_'}));
        $instance->addHelperBroker(new \Pimcore\Templating\HelperBroker\DocumentMethod());

        return $instance;
    }

    /**
     * Gets the public 'deprecated.form.registry' shared service.
     *
     * @return \stdClass
     *
     * @deprecated The service "deprecated.form.registry" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0
     */
    protected function getDeprecated_Form_RegistryService()
    {
        @trigger_error('The service "deprecated.form.registry" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0', E_USER_DEPRECATED);

        $this->services['deprecated.form.registry'] = $instance = new \stdClass();

        $instance->registry = array(0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->getForm_TypeGuesser_ValidatorService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->getForm_Type_ChoiceService()) && false ?: '_'}, 2 => ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->getForm_Type_FormService()) && false ?: '_'}, 3 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->getForm_TypeExtension_Form_HttpFoundationService()) && false ?: '_'}, 4 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->getForm_TypeExtension_Form_ValidatorService()) && false ?: '_'}, 5 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : $this->getForm_TypeExtension_Repeated_ValidatorService()) && false ?: '_'}, 6 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : $this->getForm_TypeExtension_Submit_ValidatorService()) && false ?: '_'}, 7 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->getForm_TypeExtension_Upload_ValidatorService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'deprecated.form.registry.csrf' shared service.
     *
     * @return \stdClass
     *
     * @deprecated The service "deprecated.form.registry.csrf" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0
     */
    protected function getDeprecated_Form_Registry_CsrfService()
    {
        @trigger_error('The service "deprecated.form.registry.csrf" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0', E_USER_DEPRECATED);

        $this->services['deprecated.form.registry.csrf'] = $instance = new \stdClass();

        $instance->registry = array(0 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->getForm_TypeExtension_CsrfService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'doctrine' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('default' => 'doctrine.dbal.default_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }

    /**
     * Gets the public 'doctrine.dbal.connection_factory' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ConnectionFactory
     */
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array());
    }

    /**
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = new \Doctrine\DBAL\Logging\LoggerChain();
        $a->addLogger(new \Symfony\Bridge\Doctrine\Logger\DbalLogger(${($_ = isset($this->services['monolog.logger.doctrine']) ? $this->services['monolog.logger.doctrine'] : $this->get('monolog.logger.doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
        $a->addLogger(${($_ = isset($this->services['doctrine.dbal.logger.profiling.default']) ? $this->services['doctrine.dbal.logger.profiling.default'] : $this->getDoctrine_Dbal_Logger_Profiling_DefaultService()) && false ?: '_'});

        $b = new \Doctrine\DBAL\Configuration();
        $b->setSQLLogger($a);

        $c = new \Gedmo\Timestampable\TimestampableListener();
        $c->setAnnotationReader(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'});

        $d = new \Doctrine\ORM\Tools\ResolveTargetEntityListener();
        $d->addResolveTargetEntity('CoreShop\\Component\\Rule\\Model\\ConditionInterface', 'CoreShop\\Component\\Rule\\Model\\Condition', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Rule\\Model\\ActionInterface', 'CoreShop\\Component\\Rule\\Model\\Action', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Configuration\\Model\\ConfigurationInterface', 'CoreShop\\Component\\Core\\Model\\Configuration', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Order\\Model\\CartPriceRuleInterface', 'CoreShop\\Component\\Order\\Model\\CartPriceRule', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCodeInterface', 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Product\\Model\\ProductPriceRuleInterface', 'CoreShop\\Component\\Product\\Model\\ProductPriceRule', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRuleInterface', 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Address\\Model\\CountryInterface', 'CoreShop\\Component\\Core\\Model\\Country', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Address\\Model\\CountryTranslationInterface', 'CoreShop\\Component\\Address\\Model\\CountryTranslation', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Address\\Model\\ZoneInterface', 'CoreShop\\Component\\Address\\Model\\Zone', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Address\\Model\\StateInterface', 'CoreShop\\Component\\Address\\Model\\State', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Address\\Model\\StateTranslationInterface', 'CoreShop\\Component\\Address\\Model\\StateTranslation', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Currency\\Model\\CurrencyInterface', 'CoreShop\\Component\\Core\\Model\\Currency', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Currency\\Model\\ExchangeRateInterface', 'CoreShop\\Component\\Currency\\Model\\ExchangeRate', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Taxation\\Model\\TaxRuleInterface', 'CoreShop\\Component\\Core\\Model\\TaxRule', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Taxation\\Model\\TaxRuleGroupInterface', 'CoreShop\\Component\\Core\\Model\\TaxRuleGroup', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Taxation\\Model\\TaxRateInterface', 'CoreShop\\Component\\Taxation\\Model\\TaxRate', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Taxation\\Model\\TaxRateTranslationInterface', 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Store\\Model\\StoreInterface', 'CoreShop\\Component\\Core\\Model\\Store', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Index\\Model\\IndexInterface', 'CoreShop\\Component\\Index\\Model\\Index', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Index\\Model\\IndexColumnInterface', 'CoreShop\\Component\\Index\\Model\\IndexColumn', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Index\\Model\\FilterInterface', 'CoreShop\\Component\\Index\\Model\\Filter', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Index\\Model\\FilterConditionInterface', 'CoreShop\\Component\\Index\\Model\\FilterCondition', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Shipping\\Model\\CarrierInterface', 'CoreShop\\Component\\Core\\Model\\Carrier', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Shipping\\Model\\ShippingRuleInterface', 'CoreShop\\Component\\Shipping\\Model\\ShippingRule', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroupInterface', 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Payment\\Model\\PaymentProviderInterface', 'CoreShop\\Component\\Core\\Model\\PaymentProvider', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslationInterface', 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Payment\\Model\\PaymentInterface', 'CoreShop\\Component\\Payment\\Model\\Payment', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Sequence\\Model\\SequenceInterface', 'CoreShop\\Component\\Sequence\\Model\\Sequence', array());
        $d->addResolveTargetEntity('CoreShop\\Component\\Notification\\Model\\NotificationRuleInterface', 'CoreShop\\Component\\Notification\\Model\\NotificationRule', array());

        $e = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $e->addEventSubscriber(${($_ = isset($this->services['coreshop.event_subscriber.orm_mapped_super_class']) ? $this->services['coreshop.event_subscriber.orm_mapped_super_class'] : $this->get('coreshop.event_subscriber.orm_mapped_super_class')) && false ?: '_'});
        $e->addEventSubscriber(${($_ = isset($this->services['coreshop.event_subscriber.orm_repository_class']) ? $this->services['coreshop.event_subscriber.orm_repository_class'] : $this->get('coreshop.event_subscriber.orm_repository_class')) && false ?: '_'});
        $e->addEventSubscriber(${($_ = isset($this->services['coreshop.translation.translatable_listener.doctrine.orm']) ? $this->services['coreshop.translation.translatable_listener.doctrine.orm'] : $this->get('coreshop.translation.translatable_listener.doctrine.orm')) && false ?: '_'});
        $e->addEventSubscriber(${($_ = isset($this->services['cmf_routing.persistence.doctrine.route_condition_metadata_listener']) ? $this->services['cmf_routing.persistence.doctrine.route_condition_metadata_listener'] : $this->get('cmf_routing.persistence.doctrine.route_condition_metadata_listener')) && false ?: '_'});
        $e->addEventSubscriber($c);
        $e->addEventListener(array(0 => 'loadClassMetadata'), ${($_ = isset($this->services['doctrine.orm.default_listeners.attach_entity_listeners']) ? $this->services['doctrine.orm.default_listeners.attach_entity_listeners'] : $this->get('doctrine.orm.default_listeners.attach_entity_listeners')) && false ?: '_'});
        $e->addEventListener(array(0 => 'loadClassMetadata'), $d);

        return $this->services['doctrine.dbal.default_connection'] = ${($_ = isset($this->services['doctrine.dbal.connection_factory']) ? $this->services['doctrine.dbal.connection_factory'] : $this->get('doctrine.dbal.connection_factory')) && false ?: '_'}->createConnection(array('driver' => 'pdo_mysql', 'host' => 'localhost', 'port' => '3306', 'dbname' => 'torick_project', 'user' => 'torick_project', 'password' => '123456', 'charset' => 'UTF8MB4', 'driverOptions' => array(), 'wrapperClass' => '\\Pimcore\\Db\\Connection', 'defaultTableOptions' => array('charset' => 'UTF8MB4', 'collate' => 'utf8mb4_unicode_ci')), $b, $e, array('enum' => 'string'));
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_listener_resolver' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver
     */
    protected function getDoctrine_Orm_DefaultEntityListenerResolverService()
    {
        return $this->services['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver($this);
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_manager' shared service.
     *
     * @return \Doctrine\ORM\EntityManager
     */
    public function getDoctrine_Orm_DefaultEntityManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['doctrine.orm.default_entity_manager'] = DoctrineORMEntityManager_0000000051554e2a000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getDoctrine_Orm_DefaultEntityManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = new \Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver(array(($this->targetDirs[3].'/vendor/payum/core/Payum/Core/Bridge/Doctrine/Resources/mapping') => 'Payum\\Core\\Model'));
        $a->setGlobalBasename('mapping');

        $b = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
        $b->addDriver($a, 'Payum\\Core\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\AnnotationDriver(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'}, array(0 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FixtureBundle/Entity'))), 'CoreShop\\Bundle\\FixtureBundle\\Entity');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/RuleBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Rule\\Model'), '.orm.yml')), 'CoreShop\\Component\\Rule\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ConfigurationBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Configuration\\Model'), '.orm.yml')), 'CoreShop\\Component\\Configuration\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Order\\Model'), '.orm.yml')), 'CoreShop\\Component\\Order\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Product\\Model'), '.orm.yml')), 'CoreShop\\Component\\Product\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Address\\Model'), '.orm.yml')), 'CoreShop\\Component\\Address\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Currency\\Model'), '.orm.yml')), 'CoreShop\\Component\\Currency\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Taxation\\Model'), '.orm.yml')), 'CoreShop\\Component\\Taxation\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Store\\Model'), '.orm.yml')), 'CoreShop\\Component\\Store\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Index\\Model'), '.orm.yml')), 'CoreShop\\Component\\Index\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Shipping\\Model'), '.orm.yml')), 'CoreShop\\Component\\Shipping\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Payment\\Model'), '.orm.yml')), 'CoreShop\\Component\\Payment\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/SequenceBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Sequence\\Model'), '.orm.yml')), 'CoreShop\\Component\\Sequence\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Notification\\Model'), '.orm.yml')), 'CoreShop\\Component\\Notification\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PayumBundle/Resources/config/doctrine/model') => 'CoreShop\\Bundle\\PayumBundle\\Model'), '.orm.yml')), 'CoreShop\\Bundle\\PayumBundle\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\YamlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/config/doctrine/model') => 'CoreShop\\Component\\Core\\Model'), '.orm.yml')), 'CoreShop\\Component\\Core\\Model');

        $c = new \Doctrine\ORM\Configuration();
        $c->setEntityNamespaces(array('payum' => 'Payum\\Core\\Model', 'CoreShopFixtureBundle' => 'CoreShop\\Bundle\\FixtureBundle\\Entity'));
        $c->setMetadataCacheImpl(${($_ = isset($this->services['doctrine_cache.providers.coreshop_pimcore_metadata_cache']) ? $this->services['doctrine_cache.providers.coreshop_pimcore_metadata_cache'] : $this->get('doctrine_cache.providers.coreshop_pimcore_metadata_cache')) && false ?: '_'});
        $c->setQueryCacheImpl(${($_ = isset($this->services['doctrine_cache.providers.coreshop_pimcore_query_cache']) ? $this->services['doctrine_cache.providers.coreshop_pimcore_query_cache'] : $this->get('doctrine_cache.providers.coreshop_pimcore_query_cache')) && false ?: '_'});
        $c->setResultCacheImpl(${($_ = isset($this->services['doctrine_cache.providers.coreshop_pimcore_result_cache']) ? $this->services['doctrine_cache.providers.coreshop_pimcore_result_cache'] : $this->get('doctrine_cache.providers.coreshop_pimcore_result_cache')) && false ?: '_'});
        $c->setMetadataDriverImpl($b);
        $c->setProxyDir((__DIR__.'/doctrine/orm/Proxies'));
        $c->setProxyNamespace('Proxies');
        $c->setAutoGenerateProxyClasses(true);
        $c->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $c->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $c->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $c->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $c->setEntityListenerResolver(${($_ = isset($this->services['doctrine.orm.default_entity_listener_resolver']) ? $this->services['doctrine.orm.default_entity_listener_resolver'] : $this->get('doctrine.orm.default_entity_listener_resolver')) && false ?: '_'});

        $instance = \Doctrine\ORM\EntityManager::create(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, $c);

        ${($_ = isset($this->services['doctrine.orm.default_manager_configurator']) ? $this->services['doctrine.orm.default_manager_configurator'] : $this->get('doctrine.orm.default_manager_configurator')) && false ?: '_'}->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'doctrine.orm.default_entity_manager.property_info_extractor' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor
     */
    protected function getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService()
    {
        return $this->services['doctrine.orm.default_entity_manager.property_info_extractor'] = new \Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}->getMetadataFactory());
    }

    /**
     * Gets the public 'doctrine.orm.default_listeners.attach_entity_listeners' shared service.
     *
     * @return \Doctrine\ORM\Tools\AttachEntityListenersListener
     */
    protected function getDoctrine_Orm_DefaultListeners_AttachEntityListenersService()
    {
        return $this->services['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener();
    }

    /**
     * Gets the public 'doctrine.orm.default_manager_configurator' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator
     */
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array());
    }

    /**
     * Gets the public 'doctrine.orm.validator.unique' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator
     */
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'doctrine.orm.validator_initializer' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer
     */
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'doctrine_cache.providers.coreshop_pimcore_metadata_cache' shared service.
     *
     * @return \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache
     */
    protected function getDoctrineCache_Providers_CoreshopPimcoreMetadataCacheService()
    {
        return $this->services['doctrine_cache.providers.coreshop_pimcore_metadata_cache'] = new \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache();
    }

    /**
     * Gets the public 'doctrine_cache.providers.coreshop_pimcore_query_cache' shared service.
     *
     * @return \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache
     */
    protected function getDoctrineCache_Providers_CoreshopPimcoreQueryCacheService()
    {
        return $this->services['doctrine_cache.providers.coreshop_pimcore_query_cache'] = new \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache();
    }

    /**
     * Gets the public 'doctrine_cache.providers.coreshop_pimcore_result_cache' shared service.
     *
     * @return \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache
     */
    protected function getDoctrineCache_Providers_CoreshopPimcoreResultCacheService()
    {
        return $this->services['doctrine_cache.providers.coreshop_pimcore_result_cache'] = new \CoreShop\Component\Resource\Doctrine\Cache\PimcoreCache();
    }

    /**
     * Gets the public 'file_locator' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Config\FileLocator
     */
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ($this->targetDirs[3].'/app/Resources'), array(0 => ($this->targetDirs[3].'/app')));
    }

    /**
     * Gets the public 'filesystem' shared service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the public 'form.factory' shared service.
     *
     * @return \Symfony\Component\Form\FormFactory
     */
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory(${($_ = isset($this->services['form.registry']) ? $this->services['form.registry'] : $this->get('form.registry')) && false ?: '_'}, ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : $this->get('form.resolved_type_factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(array('CoreShop\\Bundle\\AddressBundle\\Form\\Type\\AddressType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.address']) ? $this->services['coreshop.form.type.address'] : $this->get('coreshop.form.type.address')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.country_choice']) ? $this->services['coreshop.form.type.country_choice'] : $this->get('coreshop.form.type.country_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryTranslationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.country_translation']) ? $this->services['coreshop.form.type.country_translation'] : $this->get('coreshop.form.type.country_translation')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.country']) ? $this->services['coreshop.form.type.country'] : $this->get('coreshop.form.type.country')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.state_choice']) ? $this->services['coreshop.form.type.state_choice'] : $this->get('coreshop.form.type.state_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateTranslationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.state_translation']) ? $this->services['coreshop.form.type.state_translation'] : $this->get('coreshop.form.type.state_translation')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.state']) ? $this->services['coreshop.form.type.state'] : $this->get('coreshop.form.type.state')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\ZoneChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.zone_choice']) ? $this->services['coreshop.form.type.zone_choice'] : $this->get('coreshop.form.type.zone_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\ZoneType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.zone']) ? $this->services['coreshop.form.type.zone'] : $this->get('coreshop.form.type.zone')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ConfigurationBundle\\Form\\Type\\ConfigurationCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.configuration.collection']) ? $this->services['coreshop.form.type.configuration.collection'] : $this->get('coreshop.form.type.configuration.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ConfigurationBundle\\Form\\Type\\ConfigurationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.configuration']) ? $this->services['coreshop.form.type.configuration'] : $this->get('coreshop.form.type.configuration')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\AddressChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.address_choice']) ? $this->services['coreshop.form.type.address_choice'] : $this->get('coreshop.form.type.address_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\AddressType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.checkout_address']) ? $this->services['coreshop.form.type.checkout_address'] : $this->get('coreshop.form.type.checkout_address')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\PaymentType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.checkout_payment']) ? $this->services['coreshop.form.type.checkout_payment'] : $this->get('coreshop.form.type.checkout_payment')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\CustomerRegistrationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.customer_registration']) ? $this->services['coreshop.form.type.customer_registration'] : $this->get('coreshop.form.type.customer_registration')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CoreBundle\\Form\\Type\\GuestRegistrationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.guest_registration']) ? $this->services['coreshop.form.type.guest_registration'] : $this->get('coreshop.form.type.guest_registration')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.currency_choice']) ? $this->services['coreshop.form.type.currency_choice'] : $this->get('coreshop.form.type.currency_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.currency']) ? $this->services['coreshop.form.type.currency'] : $this->get('coreshop.form.type.currency')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.exchange_rate']) ? $this->services['coreshop.form.type.exchange_rate'] : $this->get('coreshop.form.type.exchange_rate')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CustomerBundle\\Form\\Type\\CustomerType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.customer']) ? $this->services['coreshop.form.type.customer'] : $this->get('coreshop.form.type.customer')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CustomerBundle\\Form\\Type\\RequestResetPasswordType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.request_reset_password']) ? $this->services['coreshop.form.type.request_reset_password'] : $this->get('coreshop.form.type.request_reset_password')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\CustomerBundle\\Form\\Type\\ResetPasswordType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.reset_password']) ? $this->services['coreshop.form.type.reset_password'] : $this->get('coreshop.form.type.reset_password')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.filter.condition_choice_type']) ? $this->services['coreshop.form.type.filter.condition_choice_type'] : $this->get('coreshop.form.type.filter.condition_choice_type')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.filter.condition_type_collection']) ? $this->services['coreshop.form.type.filter.condition_type_collection'] : $this->get('coreshop.form.type.filter.condition_type_collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.filter.condition_type']) ? $this->services['coreshop.form.type.filter.condition_type'] : $this->get('coreshop.form.type.filter.condition_type')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.filter']) ? $this->services['coreshop.form.type.filter'] : $this->get('coreshop.form.type.filter')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index_choice']) ? $this->services['coreshop.form.type.index_choice'] : $this->get('coreshop.form.type.index_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index.index_column_choice']) ? $this->services['coreshop.form.type.index.index_column_choice'] : $this->get('coreshop.form.type.index.index_column_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index_column.type_collection']) ? $this->services['coreshop.form.type.index_column.type_collection'] : $this->get('coreshop.form.type.index_column.type_collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnGetterChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index.getter_choice']) ? $this->services['coreshop.form.type.index.getter_choice'] : $this->get('coreshop.form.type.index.getter_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnInterpreterChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index.interpter_choice']) ? $this->services['coreshop.form.type.index.interpter_choice'] : $this->get('coreshop.form.type.index.interpter_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index_column']) ? $this->services['coreshop.form.type.index_column'] : $this->get('coreshop.form.type.index_column')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index']) ? $this->services['coreshop.form.type.index'] : $this->get('coreshop.form.type.index')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexWorkerChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.index.worker_choice']) ? $this->services['coreshop.form.type.index.worker_choice'] : $this->get('coreshop.form.type.index.worker_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\MoneyBundle\\Form\\Type\\MoneyType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.money']) ? $this->services['coreshop.form.type.money'] : $this->get('coreshop.form.type.money')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleActionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule.type.rule_action_choice']) ? $this->services['coreshop.form.notification_rule.type.rule_action_choice'] : $this->get('coreshop.form.notification_rule.type.rule_action_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleActionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule.type.rule_action.collection']) ? $this->services['coreshop.form.notification_rule.type.rule_action.collection'] : $this->get('coreshop.form.notification_rule.type.rule_action.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleActionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.notification_rule.rule_action']) ? $this->services['coreshop.form.type.notification_rule.rule_action'] : $this->get('coreshop.form.type.notification_rule.rule_action')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule.type.rule_condition_choice']) ? $this->services['coreshop.form.notification_rule.type.rule_condition_choice'] : $this->get('coreshop.form.notification_rule.type.rule_condition_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule.type.rule_condition.collection']) ? $this->services['coreshop.form.notification_rule.type.rule_condition.collection'] : $this->get('coreshop.form.notification_rule.type.rule_condition.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule.type.rule_condition']) ? $this->services['coreshop.form.notification_rule.type.rule_condition'] : $this->get('coreshop.form.notification_rule.type.rule_condition')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.notification_rule']) ? $this->services['coreshop.form.type.notification_rule'] : $this->get('coreshop.form.type.notification_rule')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleTypeChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.notification_rule_type.type_choice']) ? $this->services['coreshop.form.notification_rule_type.type_choice'] : $this->get('coreshop.form.notification_rule_type.type_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleActionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.cart_price_rule.type.rule_action_choice']) ? $this->services['coreshop.form.cart_price_rule.type.rule_action_choice'] : $this->get('coreshop.form.cart_price_rule.type.rule_action_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleActionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.cart_price_rule.type.rule_action.collection']) ? $this->services['coreshop.form.cart_price_rule.type.rule_action.collection'] : $this->get('coreshop.form.cart_price_rule.type.rule_action.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleActionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.cart_price_rule.rule_action']) ? $this->services['coreshop.form.type.cart_price_rule.rule_action'] : $this->get('coreshop.form.type.cart_price_rule.rule_action')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type_cart_price_rule_choice']) ? $this->services['coreshop.form.type_cart_price_rule_choice'] : $this->get('coreshop.form.type_cart_price_rule_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.cart_price_rule.type.rule_condition_choice']) ? $this->services['coreshop.form.cart_price_rule.type.rule_condition_choice'] : $this->get('coreshop.form.cart_price_rule.type.rule_condition_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.cart_price_rule.type.rule_condition.collection']) ? $this->services['coreshop.form.cart_price_rule.type.rule_condition.collection'] : $this->get('coreshop.form.cart_price_rule.type.rule_condition.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.cart_rule.type.rule_condition']) ? $this->services['coreshop.form.cart_rule.type.rule_condition'] : $this->get('coreshop.form.cart_rule.type.rule_condition')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleGeneratorType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.cart_price_rule_generator']) ? $this->services['coreshop.form.type.cart_price_rule_generator'] : $this->get('coreshop.form.type.cart_price_rule_generator')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.cart_price_rule']) ? $this->services['coreshop.form.type.cart_price_rule'] : $this->get('coreshop.form.type.cart_price_rule')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\OrderDocumentCreationItemsType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.order_document_items']) ? $this->services['coreshop.form.type.order_document_items'] : $this->get('coreshop.form.type.order_document_items')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\OrderShipmentCreationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipment_creation']) ? $this->services['coreshop.form.type.shipment_creation'] : $this->get('coreshop.form.type.shipment_creation')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.payment_provider_choice']) ? $this->services['coreshop.form.type.payment_provider_choice'] : $this->get('coreshop.form.type.payment_provider_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderTranslationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.payment_provider_translation']) ? $this->services['coreshop.form.type.payment_provider_translation'] : $this->get('coreshop.form.type.payment_provider_translation')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.payment_provider']) ? $this->services['coreshop.form.type.payment_provider'] : $this->get('coreshop.form.type.payment_provider')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PayumBundle\\Form\\Type\\GatewayConfigType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.gateway.config']) ? $this->services['coreshop.form.type.gateway.config'] : $this->get('coreshop.form.type.gateway.config')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PayumBundle\\Form\\Type\\PaypalGatewayConfigurationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.gateway_configuration.paypal']) ? $this->services['coreshop.form.type.gateway_configuration.paypal'] : $this->get('coreshop.form.type.gateway_configuration.paypal')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\PayumBundle\\Form\\Type\\SofortGatewayConfigurationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.gateway_configuration.sofort']) ? $this->services['coreshop.form.type.gateway_configuration.sofort'] : $this->get('coreshop.form.type.gateway_configuration.sofort')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleActionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_price_rule.type.rule_action_choice']) ? $this->services['coreshop.form.product_price_rule.type.rule_action_choice'] : $this->get('coreshop.form.product_price_rule.type.rule_action_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleActionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_price_rule.type.rule_action.collection']) ? $this->services['coreshop.form.product_price_rule.type.rule_action.collection'] : $this->get('coreshop.form.product_price_rule.type.rule_action.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleActionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.product_price_rule.rule_action']) ? $this->services['coreshop.form.type.product_price_rule.rule_action'] : $this->get('coreshop.form.type.product_price_rule.rule_action')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_price_rule.type.rule_condition_choice']) ? $this->services['coreshop.form.product_price_rule.type.rule_condition_choice'] : $this->get('coreshop.form.product_price_rule.type.rule_condition_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_price_rule.type.rule_condition.collection']) ? $this->services['coreshop.form.product_price_rule.type.rule_condition.collection'] : $this->get('coreshop.form.product_price_rule.type.rule_condition.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_price_rule.type.rule_condition']) ? $this->services['coreshop.form.product_price_rule.type.rule_condition'] : $this->get('coreshop.form.product_price_rule.type.rule_condition')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.product_price_rule']) ? $this->services['coreshop.form.type.product_price_rule'] : $this->get('coreshop.form.type.product_price_rule')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleActionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_specific_price_rule.type.rule_action_choice']) ? $this->services['coreshop.form.product_specific_price_rule.type.rule_action_choice'] : $this->get('coreshop.form.product_specific_price_rule.type.rule_action_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleActionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_specific_price_rule.type.rule_action.collection']) ? $this->services['coreshop.form.product_specific_price_rule.type.rule_action.collection'] : $this->get('coreshop.form.product_specific_price_rule.type.rule_action.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleActionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.product_specific_price_rule.rule_action']) ? $this->services['coreshop.form.type.product_specific_price_rule.rule_action'] : $this->get('coreshop.form.type.product_specific_price_rule.rule_action')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_specific_price_rule.type.rule_condition_choice']) ? $this->services['coreshop.form.product_specific_price_rule.type.rule_condition_choice'] : $this->get('coreshop.form.product_specific_price_rule.type.rule_condition_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_specific_price_rule.type.rule_condition.collection']) ? $this->services['coreshop.form.product_specific_price_rule.type.rule_condition.collection'] : $this->get('coreshop.form.product_specific_price_rule.type.rule_condition.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.product_specific_price_rule.type.rule_condition']) ? $this->services['coreshop.form.product_specific_price_rule.type.rule_condition'] : $this->get('coreshop.form.product_specific_price_rule.type.rule_condition')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.product_specific_price_rule']) ? $this->services['coreshop.form.type.product_specific_price_rule'] : $this->get('coreshop.form.type.product_specific_price_rule')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ResourceBundle\\Form\\Type\\PimcoreClassChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.pimcore_class_choice']) ? $this->services['coreshop.form.type.pimcore_class_choice'] : $this->get('coreshop.form.type.pimcore_class_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ResourceBundle\\Form\\Type\\ResourceTranslationsType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.resource_translations']) ? $this->services['coreshop.form.type.resource_translations'] : $this->get('coreshop.form.type.resource_translations')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\CarrierChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.carrier_choice']) ? $this->services['coreshop.form.type.carrier_choice'] : $this->get('coreshop.form.type.carrier_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\CarrierType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.carrier']) ? $this->services['coreshop.form.type.carrier'] : $this->get('coreshop.form.type.carrier')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleActionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.shipping_rule.type.rule_action_choice']) ? $this->services['coreshop.form.shipping_rule.type.rule_action_choice'] : $this->get('coreshop.form.shipping_rule.type.rule_action_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleActionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.shipping_rule.type.rule_action.collection']) ? $this->services['coreshop.form.shipping_rule.type.rule_action.collection'] : $this->get('coreshop.form.shipping_rule.type.rule_action.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleActionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipping_rule.rule_action']) ? $this->services['coreshop.form.type.shipping_rule.rule_action'] : $this->get('coreshop.form.type.shipping_rule.rule_action')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipping_rule_choice']) ? $this->services['coreshop.form.type.shipping_rule_choice'] : $this->get('coreshop.form.type.shipping_rule_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleConditionChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.shipping_rule.type.rule_condition_choice']) ? $this->services['coreshop.form.shipping_rule.type.rule_condition_choice'] : $this->get('coreshop.form.shipping_rule.type.rule_condition_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleConditionCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.shipping_rule.type.rule_condition.collection']) ? $this->services['coreshop.form.shipping_rule.type.rule_condition.collection'] : $this->get('coreshop.form.shipping_rule.type.rule_condition.collection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleConditionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.shipping_rule.type.rule_condition']) ? $this->services['coreshop.form.shipping_rule.type.rule_condition'] : $this->get('coreshop.form.shipping_rule.type.rule_condition')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleGroupCollectionType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipping_rule_chollection']) ? $this->services['coreshop.form.type.shipping_rule_chollection'] : $this->get('coreshop.form.type.shipping_rule_chollection')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleGroupType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipping_rule_group']) ? $this->services['coreshop.form.type.shipping_rule_group'] : $this->get('coreshop.form.type.shipping_rule_group')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.shipping_rule']) ? $this->services['coreshop.form.type.shipping_rule'] : $this->get('coreshop.form.type.shipping_rule')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\StoreBundle\\Form\\Type\\StoreChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.store_choice']) ? $this->services['coreshop.form.type.store_choice'] : $this->get('coreshop.form.type.store_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\StoreBundle\\Form\\Type\\StoreType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.store']) ? $this->services['coreshop.form.type.store'] : $this->get('coreshop.form.type.store')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rule_choice']) ? $this->services['coreshop.form.type.tax_rule_choice'] : $this->get('coreshop.form.type.tax_rule_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateTranslationType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rate_translation']) ? $this->services['coreshop.form.type.tax_rate_translation'] : $this->get('coreshop.form.type.tax_rate_translation')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rate']) ? $this->services['coreshop.form.type.tax_rate'] : $this->get('coreshop.form.type.tax_rate')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleGroupChoiceType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rule_group_choice']) ? $this->services['coreshop.form.type.tax_rule_group_choice'] : $this->get('coreshop.form.type.tax_rule_group_choice')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleGroupType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rule_group']) ? $this->services['coreshop.form.type.tax_rule_group'] : $this->get('coreshop.form.type.tax_rule_group')) && false ?: '_'};
        }, 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleType' => function () {
            return ${($_ = isset($this->services['coreshop.form.type.tax_rule']) ? $this->services['coreshop.form.type.tax_rule'] : $this->get('coreshop.form.type.tax_rule')) && false ?: '_'};
        }, 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\CreditCardExpirationDateType' => function () {
            return ${($_ = isset($this->services['payum.form.type.credit_card_expiration_date']) ? $this->services['payum.form.type.credit_card_expiration_date'] : $this->get('payum.form.type.credit_card_expiration_date')) && false ?: '_'};
        }, 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\CreditCardType' => function () {
            return ${($_ = isset($this->services['payum.form.type.credit_card']) ? $this->services['payum.form.type.credit_card'] : $this->get('payum.form.type.credit_card')) && false ?: '_'};
        }, 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayConfigType' => function () {
            return ${($_ = isset($this->services['payum.form.type.gateway_config']) ? $this->services['payum.form.type.gateway_config'] : $this->get('payum.form.type.gateway_config')) && false ?: '_'};
        }, 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayFactoriesChoiceType' => function () {
            return ${($_ = isset($this->services['payum.form.type.gateway_factories_choice']) ? $this->services['payum.form.type.gateway_factories_choice'] : $this->get('payum.form.type.gateway_factories_choice')) && false ?: '_'};
        }, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
            return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->get('form.type.entity')) && false ?: '_'};
        }, 'Symfony\\Cmf\\Bundle\\RoutingBundle\\Form\\Type\\RouteTypeType' => function () {
            return ${($_ = isset($this->services['cmf_routing.route_type_form_type']) ? $this->services['cmf_routing.route_type_form_type'] : $this->get('cmf_routing.route_type_form_type')) && false ?: '_'};
        }, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
            return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->getForm_Type_ChoiceService()) && false ?: '_'};
        }, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
            return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->getForm_Type_FormService()) && false ?: '_'};
        })), array('CoreShop\\Bundle\\StoreBundle\\Form\\Type\\StoreType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.store']) ? $this->services['coreshop.form.extension.type.store'] : $this->get('coreshop.form.extension.type.store')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.tax_rule']) ? $this->services['coreshop.form.extension.type.tax_rule'] : $this->get('coreshop.form.extension.type.tax_rule')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleGroupType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.tax_rule_group']) ? $this->services['coreshop.form.extension.type.tax_rule_group'] : $this->get('coreshop.form.extension.type.tax_rule_group')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\CarrierType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.carrier']) ? $this->services['coreshop.form.extension.type.carrier'] : $this->get('coreshop.form.extension.type.carrier')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.country']) ? $this->services['coreshop.form.extension.type.country'] : $this->get('coreshop.form.extension.type.country')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.payment_provider']) ? $this->services['coreshop.form.extension.type.payment_provider'] : $this->get('coreshop.form.extension.type.payment_provider')) && false ?: '_'};
        }, 1), 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\OrderShipmentCreationType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['coreshop.form.extension.type.order_shipment_creation']) ? $this->services['coreshop.form.extension.type.order_shipment_creation'] : $this->get('coreshop.form.extension.type.order_shipment_creation')) && false ?: '_'};
        }, 1), 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayFactoriesChoiceType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['payum.form.extension.gateway_factories_choice']) ? $this->services['payum.form.extension.gateway_factories_choice'] : $this->get('payum.form.extension.gateway_factories_choice')) && false ?: '_'};
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->getForm_TypeExtension_Form_HttpFoundationService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->getForm_TypeExtension_Form_ValidatorService()) && false ?: '_'};
            yield 2 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->getForm_TypeExtension_Upload_ValidatorService()) && false ?: '_'};
            yield 3 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->getForm_TypeExtension_CsrfService()) && false ?: '_'};
            yield 4 => ${($_ = isset($this->services['form.type_extension.form.data_collector']) ? $this->services['form.type_extension.form.data_collector'] : $this->getForm_TypeExtension_Form_DataCollectorService()) && false ?: '_'};
        }, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : $this->getForm_TypeExtension_Repeated_ValidatorService()) && false ?: '_'};
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : $this->getForm_TypeExtension_Submit_ValidatorService()) && false ?: '_'};
        }, 1)), new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->getForm_TypeGuesser_ValidatorService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->get('form.type_guesser.doctrine')) && false ?: '_'};
        }, 2), NULL)), ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : $this->get('form.resolved_type_factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'form.resolved_type_factory' shared service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy
     */
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ${($_ = isset($this->services['data_collector.form']) ? $this->services['data_collector.form'] : $this->get('data_collector.form')) && false ?: '_'});
    }

    /**
     * Gets the public 'form.type.birthday' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\BirthdayType
     *
     * @deprecated The "form.type.birthday" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_BirthdayService()
    {
        @trigger_error('The "form.type.birthday" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }

    /**
     * Gets the public 'form.type.button' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ButtonType
     *
     * @deprecated The "form.type.button" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_ButtonService()
    {
        @trigger_error('The "form.type.button" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }

    /**
     * Gets the public 'form.type.checkbox' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CheckboxType
     *
     * @deprecated The "form.type.checkbox" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CheckboxService()
    {
        @trigger_error('The "form.type.checkbox" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }

    /**
     * Gets the public 'form.type.collection' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CollectionType
     *
     * @deprecated The "form.type.collection" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CollectionService()
    {
        @trigger_error('The "form.type.collection" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }

    /**
     * Gets the public 'form.type.country' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CountryType
     *
     * @deprecated The "form.type.country" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CountryService()
    {
        @trigger_error('The "form.type.country" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }

    /**
     * Gets the public 'form.type.currency' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CurrencyType
     *
     * @deprecated The "form.type.currency" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CurrencyService()
    {
        @trigger_error('The "form.type.currency" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }

    /**
     * Gets the public 'form.type.date' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateType
     *
     * @deprecated The "form.type.date" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_DateService()
    {
        @trigger_error('The "form.type.date" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }

    /**
     * Gets the public 'form.type.datetime' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateTimeType
     *
     * @deprecated The "form.type.datetime" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_DatetimeService()
    {
        @trigger_error('The "form.type.datetime" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }

    /**
     * Gets the public 'form.type.email' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\EmailType
     *
     * @deprecated The "form.type.email" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_EmailService()
    {
        @trigger_error('The "form.type.email" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }

    /**
     * Gets the public 'form.type.entity' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\Type\EntityType
     */
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'form.type.file' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FileType
     *
     * @deprecated The "form.type.file" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_FileService()
    {
        @trigger_error('The "form.type.file" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }

    /**
     * Gets the public 'form.type.hidden' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\HiddenType
     *
     * @deprecated The "form.type.hidden" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_HiddenService()
    {
        @trigger_error('The "form.type.hidden" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }

    /**
     * Gets the public 'form.type.integer' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\IntegerType
     *
     * @deprecated The "form.type.integer" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_IntegerService()
    {
        @trigger_error('The "form.type.integer" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }

    /**
     * Gets the public 'form.type.language' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LanguageType
     *
     * @deprecated The "form.type.language" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_LanguageService()
    {
        @trigger_error('The "form.type.language" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }

    /**
     * Gets the public 'form.type.locale' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LocaleType
     *
     * @deprecated The "form.type.locale" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_LocaleService()
    {
        @trigger_error('The "form.type.locale" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }

    /**
     * Gets the public 'form.type.money' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\MoneyType
     *
     * @deprecated The "form.type.money" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_MoneyService()
    {
        @trigger_error('The "form.type.money" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }

    /**
     * Gets the public 'form.type.number' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\NumberType
     *
     * @deprecated The "form.type.number" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_NumberService()
    {
        @trigger_error('The "form.type.number" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }

    /**
     * Gets the public 'form.type.password' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PasswordType
     *
     * @deprecated The "form.type.password" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_PasswordService()
    {
        @trigger_error('The "form.type.password" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }

    /**
     * Gets the public 'form.type.percent' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PercentType
     *
     * @deprecated The "form.type.percent" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_PercentService()
    {
        @trigger_error('The "form.type.percent" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }

    /**
     * Gets the public 'form.type.radio' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RadioType
     *
     * @deprecated The "form.type.radio" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RadioService()
    {
        @trigger_error('The "form.type.radio" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }

    /**
     * Gets the public 'form.type.range' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RangeType
     *
     * @deprecated The "form.type.range" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RangeService()
    {
        @trigger_error('The "form.type.range" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.range'] = new \Symfony\Component\Form\Extension\Core\Type\RangeType();
    }

    /**
     * Gets the public 'form.type.repeated' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RepeatedType
     *
     * @deprecated The "form.type.repeated" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RepeatedService()
    {
        @trigger_error('The "form.type.repeated" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }

    /**
     * Gets the public 'form.type.reset' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ResetType
     *
     * @deprecated The "form.type.reset" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_ResetService()
    {
        @trigger_error('The "form.type.reset" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }

    /**
     * Gets the public 'form.type.search' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SearchType
     *
     * @deprecated The "form.type.search" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_SearchService()
    {
        @trigger_error('The "form.type.search" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }

    /**
     * Gets the public 'form.type.submit' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SubmitType
     *
     * @deprecated The "form.type.submit" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_SubmitService()
    {
        @trigger_error('The "form.type.submit" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }

    /**
     * Gets the public 'form.type.text' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextType
     *
     * @deprecated The "form.type.text" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TextService()
    {
        @trigger_error('The "form.type.text" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }

    /**
     * Gets the public 'form.type.textarea' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextareaType
     *
     * @deprecated The "form.type.textarea" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TextareaService()
    {
        @trigger_error('The "form.type.textarea" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }

    /**
     * Gets the public 'form.type.time' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimeType
     *
     * @deprecated The "form.type.time" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TimeService()
    {
        @trigger_error('The "form.type.time" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }

    /**
     * Gets the public 'form.type.timezone' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimezoneType
     *
     * @deprecated The "form.type.timezone" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TimezoneService()
    {
        @trigger_error('The "form.type.timezone" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }

    /**
     * Gets the public 'form.type.url' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\UrlType
     *
     * @deprecated The "form.type.url" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_UrlService()
    {
        @trigger_error('The "form.type.url" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }

    /**
     * Gets the public 'form.type_guesser.doctrine' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser
     */
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'fos_rest.body_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\BodyListener
     */
    protected function getFosRest_BodyListenerService()
    {
        $this->services['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener(${($_ = isset($this->services['fos_rest.decoder_provider']) ? $this->services['fos_rest.decoder_provider'] : $this->get('fos_rest.decoder_provider')) && false ?: '_'}, false);

        $instance->setDefaultFormat(NULL);

        return $instance;
    }

    /**
     * Gets the public 'fos_rest.decoder.json' shared service.
     *
     * @return \FOS\RestBundle\Decoder\JsonDecoder
     */
    protected function getFosRest_Decoder_JsonService()
    {
        return $this->services['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder();
    }

    /**
     * Gets the public 'fos_rest.decoder.jsontoform' shared service.
     *
     * @return \FOS\RestBundle\Decoder\JsonToFormDecoder
     */
    protected function getFosRest_Decoder_JsontoformService()
    {
        return $this->services['fos_rest.decoder.jsontoform'] = new \FOS\RestBundle\Decoder\JsonToFormDecoder();
    }

    /**
     * Gets the public 'fos_rest.decoder.xml' shared service.
     *
     * @return \FOS\RestBundle\Decoder\XmlDecoder
     */
    protected function getFosRest_Decoder_XmlService()
    {
        return $this->services['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder();
    }

    /**
     * Gets the public 'fos_rest.decoder_provider' shared service.
     *
     * @return \FOS\RestBundle\Decoder\ContainerDecoderProvider
     */
    protected function getFosRest_DecoderProviderService()
    {
        return $this->services['fos_rest.decoder_provider'] = new \FOS\RestBundle\Decoder\ContainerDecoderProvider($this, array('json' => 'fos_rest.decoder.json', 'xml' => 'fos_rest.decoder.xml'));
    }

    /**
     * Gets the public 'fos_rest.format_listener' shared service.
     *
     * @return \FOS\RestBundle\EventListener\FormatListener
     */
    protected function getFosRest_FormatListenerService()
    {
        return $this->services['fos_rest.format_listener'] = new \FOS\RestBundle\EventListener\FormatListener(${($_ = isset($this->services['fos_rest.format_negotiator']) ? $this->services['fos_rest.format_negotiator'] : $this->get('fos_rest.format_negotiator')) && false ?: '_'});
    }

    /**
     * Gets the public 'fos_rest.format_negotiator' shared service.
     *
     * @return \FOS\RestBundle\Negotiation\FormatNegotiator
     */
    protected function getFosRest_FormatNegotiatorService()
    {
        $this->services['fos_rest.format_negotiator'] = $instance = new \FOS\RestBundle\Negotiation\FormatNegotiator(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/_profiler|_wdt/', NULL, NULL, NULL, array()), array('methods' => NULL, 'priorities' => array(0 => 'html', 1 => 'json'), 'fallback_format' => 'html', 'attributes' => array(), 'prefer_extension' => '2.0'));
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/coreshop', NULL, NULL, NULL, array()), array('priorities' => array(0 => 'json', 1 => 'xml'), 'fallback_format' => 'json', 'prefer_extension' => '2.0', 'methods' => NULL, 'attributes' => array(), 'stop' => false));
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/', NULL, NULL, NULL, array()), array('stop' => true, 'methods' => NULL, 'attributes' => array(), 'prefer_extension' => '2.0', 'fallback_format' => 'html', 'priorities' => array()));

        return $instance;
    }

    /**
     * Gets the public 'fos_rest.inflector' shared service.
     *
     * @return \FOS\RestBundle\Inflector\DoctrineInflector
     */
    protected function getFosRest_InflectorService()
    {
        return $this->services['fos_rest.inflector'] = new \FOS\RestBundle\Inflector\DoctrineInflector();
    }

    /**
     * Gets the public 'fos_rest.normalizer.camel_keys' shared service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizer
     */
    protected function getFosRest_Normalizer_CamelKeysService()
    {
        return $this->services['fos_rest.normalizer.camel_keys'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizer();
    }

    /**
     * Gets the public 'fos_rest.normalizer.camel_keys_with_leading_underscore' shared service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore
     */
    protected function getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService()
    {
        return $this->services['fos_rest.normalizer.camel_keys_with_leading_underscore'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore();
    }

    /**
     * Gets the public 'fos_rest.request.param_fetcher' shared service.
     *
     * @return \FOS\RestBundle\Request\ParamFetcher
     */
    protected function getFosRest_Request_ParamFetcherService()
    {
        return $this->services['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($this, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->getFosRest_Request_ParamFetcher_ReaderService()) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['validator']) ? $this->services['validator'] : $this->get('validator', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'fos_rest.serializer' shared service.
     *
     * @return \FOS\RestBundle\Serializer\JMSSerializerAdapter
     */
    public function getFosRest_SerializerService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['fos_rest.serializer'] = FOSRestBundleSerializerJMSSerializerAdapter_000000005155793b000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getFosRest_SerializerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \FOS\RestBundle\Serializer\JMSSerializerAdapter(${($_ = isset($this->services['jms_serializer']) ? $this->services['jms_serializer'] : $this->get('jms_serializer')) && false ?: '_'});
    }

    /**
     * Gets the public 'fos_rest.templating' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine
     */
    protected function getFosRest_TemplatingService()
    {
        $this->services['fos_rest.templating'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());

        $instance->addEngine(${($_ = isset($this->services['debug.templating.engine.php']) ? $this->services['debug.templating.engine.php'] : $this->get('debug.templating.engine.php')) && false ?: '_'});
        $instance->addEngine(${($_ = isset($this->services['pimcore.templating.engine.twig']) ? $this->services['pimcore.templating.engine.twig'] : $this->get('pimcore.templating.engine.twig')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'fos_rest.view_handler' shared service.
     *
     * @return \FOS\RestBundle\View\ViewHandler
     */
    protected function getFosRest_ViewHandlerService()
    {
        $this->services['fos_rest.view_handler'] = $instance = new \FOS\RestBundle\View\ViewHandler(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.serializer']) ? $this->services['fos_rest.serializer'] : $this->get('fos_rest.serializer')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, array('json' => false, 'xml' => false, 'html' => true), 400, 204, false, array('html' => 302), 'twig');

        $instance->setSerializeNullStrategy(false);

        return $instance;
    }

    /**
     * Gets the public 'fragment.handler' shared service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler
     */
    protected function getFragment_HandlerService()
    {
        return $this->services['fragment.handler'] = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler(${($_ = isset($this->services['service_locator.e64d23c3bf770e2cf44b71643280668d']) ? $this->services['service_locator.e64d23c3bf770e2cf44b71643280668d'] : $this->getServiceLocator_E64d23c3bf770e2cf44b71643280668dService()) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, true);
    }

    /**
     * Gets the public 'fragment.renderer.esi' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer
     */
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, ${($_ = isset($this->services['fragment.renderer.inline']) ? $this->services['fragment.renderer.inline'] : $this->get('fragment.renderer.inline')) && false ?: '_'}, ${($_ = isset($this->services['uri_signer']) ? $this->services['uri_signer'] : $this->get('uri_signer')) && false ?: '_'});

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the public 'fragment.renderer.hinclude' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer
     */
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer(${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'}, ${($_ = isset($this->services['uri_signer']) ? $this->services['uri_signer'] : $this->get('uri_signer')) && false ?: '_'}, NULL);

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the public 'fragment.renderer.inline' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer
     */
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer(${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->get('http_kernel')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the public 'fragment.renderer.ssi' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer
     */
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, ${($_ = isset($this->services['fragment.renderer.inline']) ? $this->services['fragment.renderer.inline'] : $this->get('fragment.renderer.inline')) && false ?: '_'}, ${($_ = isset($this->services['uri_signer']) ? $this->services['uri_signer'] : $this->get('uri_signer')) && false ?: '_'});

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['debug.controller_resolver']) ? $this->services['debug.controller_resolver'] : $this->get('debug.controller_resolver')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['debug.argument_resolver']) ? $this->services['debug.argument_resolver'] : $this->get('debug.argument_resolver')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer' shared service.
     *
     * @return \JMS\Serializer\Serializer
     */
    protected function getJmsSerializerService()
    {
        $a = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);
        $a->setCache(new \Metadata\Cache\FileCache((__DIR__.'/jms_serializer')));

        $b = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $b->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerializeTypedProxy'), 1 => NULL, 2 => NULL), 2 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL)), 'serializer.post_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL))));

        $this->services['jms_serializer'] = $instance = new \JMS\Serializer\Serializer($a, ${($_ = isset($this->services['jms_serializer.handler_registry']) ? $this->services['jms_serializer.handler_registry'] : $this->get('jms_serializer.handler_registry')) && false ?: '_'}, ${($_ = isset($this->services['jms_serializer.object_constructor']) ? $this->services['jms_serializer.object_constructor'] : $this->get('jms_serializer.object_constructor')) && false ?: '_'}, new \PhpCollection\Map(array('json' => ${($_ = isset($this->services['jms_serializer.json_serialization_visitor']) ? $this->services['jms_serializer.json_serialization_visitor'] : $this->get('jms_serializer.json_serialization_visitor')) && false ?: '_'}, 'xml' => ${($_ = isset($this->services['jms_serializer.xml_serialization_visitor']) ? $this->services['jms_serializer.xml_serialization_visitor'] : $this->get('jms_serializer.xml_serialization_visitor')) && false ?: '_'}, 'yml' => ${($_ = isset($this->services['jms_serializer.yaml_serialization_visitor']) ? $this->services['jms_serializer.yaml_serialization_visitor'] : $this->get('jms_serializer.yaml_serialization_visitor')) && false ?: '_'})), new \PhpCollection\Map(array('json' => ${($_ = isset($this->services['jms_serializer.json_deserialization_visitor']) ? $this->services['jms_serializer.json_deserialization_visitor'] : $this->get('jms_serializer.json_deserialization_visitor')) && false ?: '_'}, 'xml' => ${($_ = isset($this->services['jms_serializer.xml_deserialization_visitor']) ? $this->services['jms_serializer.xml_deserialization_visitor'] : $this->get('jms_serializer.xml_deserialization_visitor')) && false ?: '_'})), $b, NULL, ${($_ = isset($this->services['jms_serializer.expression_evaluator']) ? $this->services['jms_serializer.expression_evaluator'] : $this->get('jms_serializer.expression_evaluator')) && false ?: '_'});

        $instance->setSerializationContextFactory(${($_ = isset($this->services['jms_serializer.serialization_context_factory']) ? $this->services['jms_serializer.serialization_context_factory'] : $this->get('jms_serializer.serialization_context_factory')) && false ?: '_'});
        $instance->setDeserializationContextFactory(${($_ = isset($this->services['jms_serializer.deserialization_context_factory']) ? $this->services['jms_serializer.deserialization_context_factory'] : $this->get('jms_serializer.deserialization_context_factory')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'jms_serializer.accessor_strategy' shared service.
     *
     * @return \JMS\Serializer\Accessor\ExpressionAccessorStrategy
     */
    protected function getJmsSerializer_AccessorStrategyService()
    {
        return $this->services['jms_serializer.accessor_strategy'] = new \JMS\Serializer\Accessor\ExpressionAccessorStrategy(${($_ = isset($this->services['jms_serializer.expression_evaluator']) ? $this->services['jms_serializer.expression_evaluator'] : $this->get('jms_serializer.expression_evaluator')) && false ?: '_'}, new \JMS\Serializer\Accessor\DefaultAccessorStrategy());
    }

    /**
     * Gets the public 'jms_serializer.array_collection_handler' shared service.
     *
     * @return \JMS\Serializer\Handler\ArrayCollectionHandler
     */
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler(true);
    }

    /**
     * Gets the public 'jms_serializer.constraint_violation_handler' shared service.
     *
     * @return \JMS\Serializer\Handler\ConstraintViolationHandler
     */
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }

    /**
     * Gets the public 'jms_serializer.datetime_handler' shared service.
     *
     * @return \JMS\Serializer\Handler\DateHandler
     */
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('Y-m-d\\TH:i:sO', 'Europe/Moscow', true);
    }

    /**
     * Gets the public 'jms_serializer.deserialization_context_factory' shared service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory
     */
    protected function getJmsSerializer_DeserializationContextFactoryService()
    {
        return $this->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the public 'jms_serializer.doctrine_proxy_subscriber' shared service.
     *
     * @return \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber
     */
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber(false, true);
    }

    /**
     * Gets the public 'jms_serializer.expression_evaluator' shared service.
     *
     * @return \JMS\Serializer\Expression\ExpressionEvaluator
     */
    protected function getJmsSerializer_ExpressionEvaluatorService()
    {
        $a = new \Symfony\Component\ExpressionLanguage\ExpressionLanguage();
        $a->registerProvider(new \JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider());

        return $this->services['jms_serializer.expression_evaluator'] = new \JMS\Serializer\Expression\ExpressionEvaluator($a, array('container' => $this));
    }

    /**
     * Gets the public 'jms_serializer.form_error_handler' shared service.
     *
     * @return \FOS\RestBundle\Serializer\Normalizer\FormErrorHandler
     */
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \FOS\RestBundle\Serializer\Normalizer\FormErrorHandler(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.handler_registry' shared service.
     *
     * @return \FOS\RestBundle\Serializer\JMSHandlerRegistry
     */
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \FOS\RestBundle\Serializer\JMSHandlerRegistry(${($_ = isset($this->services['fos_rest.serializer.jms_handler_registry']) ? $this->services['fos_rest.serializer.jms_handler_registry'] : $this->getFosRest_Serializer_JmsHandlerRegistryService()) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.json_deserialization_visitor' shared service.
     *
     * @return \JMS\Serializer\JsonDeserializationVisitor
     */
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor(${($_ = isset($this->services['jms_serializer.naming_strategy']) ? $this->services['jms_serializer.naming_strategy'] : $this->get('jms_serializer.naming_strategy')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.json_serialization_visitor' shared service.
     *
     * @return \JMS\Serializer\JsonSerializationVisitor
     */
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor(${($_ = isset($this->services['jms_serializer.naming_strategy']) ? $this->services['jms_serializer.naming_strategy'] : $this->get('jms_serializer.naming_strategy')) && false ?: '_'}, ${($_ = isset($this->services['jms_serializer.accessor_strategy']) ? $this->services['jms_serializer.accessor_strategy'] : $this->get('jms_serializer.accessor_strategy')) && false ?: '_'});

        $instance->setOptions(0);

        return $instance;
    }

    /**
     * Gets the public 'jms_serializer.metadata_driver' shared service.
     *
     * @return \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver
     */
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = new \Metadata\Driver\FileLocator(array('JMS\\SerializerBundle' => ($this->targetDirs[3].'/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\ResourceBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ResourceBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\FixtureBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FixtureBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\MoneyBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/MoneyBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\RuleBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/RuleBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\LocaleBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/LocaleBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\ConfigurationBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ConfigurationBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\OrderBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\CustomerBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CustomerBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\ProductBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\AddressBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\CurrencyBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\TaxationBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\StoreBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\IndexBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\ShippingBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\PaymentBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\SequenceBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/SequenceBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\NotificationBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\TrackingBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TrackingBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\FrontendBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FrontendBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\PayumBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PayumBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\CoreBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/config/serializer'), 'FOS\\RestBundle' => ($this->targetDirs[3].'/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineCacheBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-cache-bundle/Resources/config/serializer'), 'Payum\\Bundle\\PayumBundle' => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/config/serializer'), 'Stof\\DoctrineExtensionsBundle' => ($this->targetDirs[3].'/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer'), 'Liip\\ThemeBundle' => ($this->targetDirs[3].'/vendor/liip/theme-bundle/Resources/config/serializer'), 'Hampe\\Bundle\\ZurbInkBundle' => ($this->targetDirs[3].'/vendor/hampe/zurb-ink-bundle/Hampe/Bundle/ZurbInkBundle/Resources/config/serializer'), 'Symfony\\Bundle\\FrameworkBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer'), 'Symfony\\Bundle\\SecurityBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer'), 'Symfony\\Bundle\\TwigBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer'), 'Symfony\\Bundle\\MonologBundle' => ($this->targetDirs[3].'/vendor/symfony/monolog-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\SwiftmailerBundle' => ($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Resources/config/serializer'), 'Sensio\\Bundle\\FrameworkExtraBundle' => ($this->targetDirs[3].'/vendor/sensio/framework-extra-bundle/Resources/config/serializer'), 'Symfony\\Cmf\\Bundle\\RoutingBundle' => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/src/Resources/config/serializer'), 'Symfony\\Bundle\\DebugBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer'), 'Symfony\\Bundle\\WebProfilerBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer'), 'Sensio\\Bundle\\DistributionBundle' => ($this->targetDirs[3].'/vendor/sensio/distribution-bundle/Resources/config/serializer'), 'Sensio\\Bundle\\GeneratorBundle' => ($this->targetDirs[3].'/vendor/sensio/generator-bundle/Resources/config/serializer'), 'Pimcore\\Bundle\\CoreBundle' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/CoreBundle/Resources/config/serializer'), 'Pimcore\\Bundle\\AdminBundle' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/AdminBundle/Resources/config/serializer'), 'Pimcore\\Bundle\\GeneratorBundle' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/GeneratorBundle/Resources/config/serializer'), 'AppBundle' => ($this->targetDirs[3].'/src/AppBundle/Resources/config/serializer'), 'Pimcore\\Bundle\\EcommerceFrameworkBundle' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/EcommerceFrameworkBundle/Resources/config/serializer'), 'CoreShop\\Bundle\\AdminBundle' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AdminBundle/Resources/config/serializer'), 'Pimcore' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ResourceBundle/Resources/config/serializer'), 'CoreShop\\Component\\Address' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/serializer'), 'CoreShop\\Component\\Currency' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/config/serializer'), 'CoreShop\\Component\\Store' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/config/serializer'), 'CoreShop\\Component\\Taxation' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/serializer'), 'CoreShop\\Component\\Product' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/config/serializer'), 'CoreShop\\Component\\Index' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/serializer'), 'CoreShop\\Component\\Shipping' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/serializer'), 'CoreShop\\Component\\Payment' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle/Resources/config/serializer'), 'CoreShop\\Component\\Order' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/config/serializer'), 'CoreShop\\Component\\Configuration' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ConfigurationBundle/Resources/config/serializer'), 'CoreShop\\Component\\Core' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/config/serializer')));

        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \JMS\Serializer\Metadata\Driver\PhpDriver($a), 3 => new \JMS\Serializer\Metadata\Driver\AnnotationDriver(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'}))), ${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.naming_strategy' shared service.
     *
     * @return \JMS\Serializer\Naming\CacheNamingStrategy
     */
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\IdenticalPropertyNamingStrategy('_', true)));
    }

    /**
     * Gets the public 'jms_serializer.object_constructor' shared service.
     *
     * @return \JMS\Serializer\Construction\DoctrineObjectConstructor
     */
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'}, new \JMS\Serializer\Construction\UnserializeObjectConstructor(), 'null');
    }

    /**
     * Gets the public 'jms_serializer.php_collection_handler' shared service.
     *
     * @return \JMS\Serializer\Handler\PhpCollectionHandler
     */
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }

    /**
     * Gets the public 'jms_serializer.serialization_context_factory' shared service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory
     */
    protected function getJmsSerializer_SerializationContextFactoryService()
    {
        return $this->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the public 'jms_serializer.stopwatch_subscriber' shared service.
     *
     * @return \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber
     */
    protected function getJmsSerializer_StopwatchSubscriberService()
    {
        return $this->services['jms_serializer.stopwatch_subscriber'] = new \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber(${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.templating.helper.serializer' shared service.
     *
     * @return \JMS\SerializerBundle\Templating\SerializerHelper
     */
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper(${($_ = isset($this->services['jms_serializer']) ? $this->services['jms_serializer'] : $this->get('jms_serializer')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.twig_extension.serializer_runtime_helper' shared service.
     *
     * @return \JMS\Serializer\Twig\SerializerRuntimeHelper
     */
    protected function getJmsSerializer_TwigExtension_SerializerRuntimeHelperService()
    {
        return $this->services['jms_serializer.twig_extension.serializer_runtime_helper'] = new \JMS\Serializer\Twig\SerializerRuntimeHelper(${($_ = isset($this->services['jms_serializer']) ? $this->services['jms_serializer'] : $this->get('jms_serializer')) && false ?: '_'});
    }

    /**
     * Gets the public 'jms_serializer.xml_deserialization_visitor' shared service.
     *
     * @return \JMS\Serializer\XmlDeserializationVisitor
     */
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor(${($_ = isset($this->services['jms_serializer.naming_strategy']) ? $this->services['jms_serializer.naming_strategy'] : $this->get('jms_serializer.naming_strategy')) && false ?: '_'});

        $instance->setDoctypeWhitelist(array());

        return $instance;
    }

    /**
     * Gets the public 'jms_serializer.xml_serialization_visitor' shared service.
     *
     * @return \JMS\Serializer\XmlSerializationVisitor
     */
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        $this->services['jms_serializer.xml_serialization_visitor'] = $instance = new \JMS\Serializer\XmlSerializationVisitor(${($_ = isset($this->services['jms_serializer.naming_strategy']) ? $this->services['jms_serializer.naming_strategy'] : $this->get('jms_serializer.naming_strategy')) && false ?: '_'}, ${($_ = isset($this->services['jms_serializer.accessor_strategy']) ? $this->services['jms_serializer.accessor_strategy'] : $this->get('jms_serializer.accessor_strategy')) && false ?: '_'});

        $instance->setFormatOutput(true);

        return $instance;
    }

    /**
     * Gets the public 'jms_serializer.yaml_serialization_visitor' shared service.
     *
     * @return \JMS\Serializer\YamlSerializationVisitor
     */
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor(${($_ = isset($this->services['jms_serializer.naming_strategy']) ? $this->services['jms_serializer.naming_strategy'] : $this->get('jms_serializer.naming_strategy')) && false ?: '_'}, ${($_ = isset($this->services['jms_serializer.accessor_strategy']) ? $this->services['jms_serializer.accessor_strategy'] : $this->get('jms_serializer.accessor_strategy')) && false ?: '_'});
    }

    /**
     * Gets the public 'kernel.class_cache.cache_warmer' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer
     *
     * @deprecated The "kernel.class_cache.cache_warmer" option is deprecated since version 3.3, to be removed in 4.0.
     */
    protected function getKernel_ClassCache_CacheWarmerService()
    {
        @trigger_error('The "kernel.class_cache.cache_warmer" option is deprecated since version 3.3, to be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['kernel.class_cache.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer(array(0 => 'Symfony\\Component\\HttpFoundation\\ParameterBag', 1 => 'Symfony\\Component\\HttpFoundation\\HeaderBag', 2 => 'Symfony\\Component\\HttpFoundation\\FileBag', 3 => 'Symfony\\Component\\HttpFoundation\\ServerBag', 4 => 'Symfony\\Component\\HttpFoundation\\Request', 5 => 'Symfony\\Component\\HttpKernel\\Kernel'));
    }

    /**
     * Gets the public 'liip_theme.active_theme' shared service.
     *
     * @return \Liip\ThemeBundle\ActiveTheme
     */
    protected function getLiipTheme_ActiveThemeService()
    {
        return $this->services['liip_theme.active_theme'] = new \Liip\ThemeBundle\ActiveTheme(NULL, array(), ${($_ = isset($this->services['liip_theme.theme_auto_detect']) ? $this->services['liip_theme.theme_auto_detect'] : $this->get('liip_theme.theme_auto_detect')) && false ?: '_'});
    }

    /**
     * Gets the public 'liip_theme.theme_auto_detect' shared service.
     *
     * @return \Liip\ThemeBundle\Helper\DeviceDetection
     */
    protected function getLiipTheme_ThemeAutoDetectService()
    {
        return $this->services['liip_theme.theme_auto_detect'] = new \Liip\ThemeBundle\Helper\DeviceDetection();
    }

    /**
     * Gets the public 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, 'en', ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'logger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.activation_strategy.not_found' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy
     */
    protected function getMonolog_ActivationStrategy_NotFoundService()
    {
        return $this->services['monolog.activation_strategy.not_found'] = new \Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy();
    }

    /**
     * Gets the public 'monolog.handler.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler
     */
    protected function getMonolog_Handler_ConsoleService()
    {
        $this->services['monolog.handler.console'] = $instance = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, array());

        $instance->pushProcessor(${($_ = isset($this->services['monolog.processor.psr_log_message']) ? $this->services['monolog.processor.psr_log_message'] : $this->getMonolog_Processor_PsrLogMessageService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.handler.fingers_crossed.error_level_activation_strategy' shared service.
     *
     * @return \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy
     */
    protected function getMonolog_Handler_FingersCrossed_ErrorLevelActivationStrategyService()
    {
        return $this->services['monolog.handler.fingers_crossed.error_level_activation_strategy'] = new \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy();
    }

    /**
     * Gets the public 'monolog.handler.main' shared service.
     *
     * @return \Monolog\Handler\StreamHandler
     */
    protected function getMonolog_Handler_MainService()
    {
        $this->services['monolog.handler.main'] = $instance = new \Monolog\Handler\StreamHandler(($this->targetDirs[2].'/logs/dev.log'), 100, true, NULL);

        $instance->pushProcessor(${($_ = isset($this->services['monolog.processor.psr_log_message']) ? $this->services['monolog.processor.psr_log_message'] : $this->getMonolog_Processor_PsrLogMessageService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.handler.null_internal' shared service.
     *
     * @return \Monolog\Handler\NullHandler
     */
    protected function getMonolog_Handler_NullInternalService()
    {
        return $this->services['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler();
    }

    /**
     * Gets the public 'monolog.logger.admin' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_AdminService()
    {
        $this->services['monolog.logger.admin'] = $instance = new \Symfony\Bridge\Monolog\Logger('admin');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.cache' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->services['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.console' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_ConsoleService()
    {
        $this->services['monolog.logger.console'] = $instance = new \Symfony\Bridge\Monolog\Logger('console');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.doctrine' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.event' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_EventService()
    {
        $this->services['monolog.logger.event'] = $instance = new \Symfony\Bridge\Monolog\Logger('event');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.null_internal']) ? $this->services['monolog.handler.null_internal'] : $this->get('monolog.handler.null_internal')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.init' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_InitService()
    {
        $this->services['monolog.logger.init'] = $instance = new \Symfony\Bridge\Monolog\Logger('init');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.payum' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PayumService()
    {
        $this->services['monolog.logger.payum'] = $instance = new \Symfony\Bridge\Monolog\Logger('payum');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.php' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreService()
    {
        $this->services['monolog.logger.pimcore'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore.maintenance' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_Pimcore_MaintenanceService()
    {
        $this->services['monolog.logger.pimcore.maintenance'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore.maintenance');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_admin.session' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreAdmin_SessionService()
    {
        $this->services['monolog.logger.pimcore_admin.session'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_admin.session');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_api' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreApiService()
    {
        $this->services['monolog.logger.pimcore_api'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_api');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceService()
    {
        $this->services['monolog.logger.pimcore_ecommerce'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce.installer' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerce_InstallerService()
    {
        $this->services['monolog.logger.pimcore_ecommerce.installer'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce.installer');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce_es' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceEsService()
    {
        $this->services['monolog.logger.pimcore_ecommerce_es'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce_es');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce_factfinder' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceFactfinderService()
    {
        $this->services['monolog.logger.pimcore_ecommerce_factfinder'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce_factfinder');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce_findologic' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceFindologicService()
    {
        $this->services['monolog.logger.pimcore_ecommerce_findologic'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce_findologic');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce_indexupdater' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceIndexupdaterService()
    {
        $this->services['monolog.logger.pimcore_ecommerce_indexupdater'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce_indexupdater');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.pimcore_ecommerce_sql' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PimcoreEcommerceSqlService()
    {
        $this->services['monolog.logger.pimcore_ecommerce_sql'] = $instance = new \Symfony\Bridge\Monolog\Logger('pimcore_ecommerce_sql');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.profiler' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_ProfilerService()
    {
        $this->services['monolog.logger.profiler'] = $instance = new \Symfony\Bridge\Monolog\Logger('profiler');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.request' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.router' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.routing' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RoutingService()
    {
        $this->services['monolog.logger.routing'] = $instance = new \Symfony\Bridge\Monolog\Logger('routing');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.security' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.session' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_SessionService()
    {
        $this->services['monolog.logger.session'] = $instance = new \Symfony\Bridge\Monolog\Logger('session');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.templating' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_TemplatingService()
    {
        $this->services['monolog.logger.templating'] = $instance = new \Symfony\Bridge\Monolog\Logger('templating');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'monolog.logger.translation' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');

        $instance->pushProcessor(${($_ = isset($this->services['debug.log_processor']) ? $this->services['debug.log_processor'] : $this->getDebug_LogProcessorService()) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.console']) ? $this->services['monolog.handler.console'] : $this->get('monolog.handler.console')) && false ?: '_'});
        $instance->pushHandler(${($_ = isset($this->services['monolog.handler.main']) ? $this->services['monolog.handler.main'] : $this->get('monolog.handler.main')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'payum' shared service.
     *
     * @return \Payum\Core\Payum
     */
    protected function getPayumService()
    {
        return $this->services['payum'] = ${($_ = isset($this->services['payum.builder']) ? $this->services['payum.builder'] : $this->get('payum.builder')) && false ?: '_'}->getPayum();
    }

    /**
     * Gets the public 'payum.action.get_http_request' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Action\GetHttpRequestAction
     */
    protected function getPayum_Action_GetHttpRequestService()
    {
        $this->services['payum.action.get_http_request'] = $instance = new \Payum\Core\Bridge\Symfony\Action\GetHttpRequestAction();

        $instance->setHttpRequestStack(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'payum.action.obtain_credit_card_builder' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Builder\ObtainCreditCardActionBuilder
     */
    protected function getPayum_Action_ObtainCreditCardBuilderService()
    {
        return $this->services['payum.action.obtain_credit_card_builder'] = new \Payum\Core\Bridge\Symfony\Builder\ObtainCreditCardActionBuilder(${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->get('form.factory')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.builder' shared service.
     *
     * @return \Payum\Core\PayumBuilder
     */
    protected function getPayum_BuilderService()
    {
        $a = new \Payum\Core\Bridge\Symfony\Builder\CoreGatewayFactoryBuilder();
        $a->setContainer($this);

        $this->services['payum.builder'] = $instance = new \Payum\Core\PayumBuilder();

        $instance->setMainRegistry(${($_ = isset($this->services['payum.static_registry']) ? $this->services['payum.static_registry'] : $this->get('payum.static_registry')) && false ?: '_'});
        $instance->setHttpRequestVerifier(new \Payum\Core\Bridge\Symfony\Builder\HttpRequestVerifierBuilder());
        $instance->setTokenFactory(new \Payum\Core\Bridge\Symfony\Builder\TokenFactoryBuilder(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}));
        $instance->setTokenStorage(${($_ = isset($this->services['payum.security.token_storage']) ? $this->services['payum.security.token_storage'] : $this->get('payum.security.token_storage')) && false ?: '_'});
        $instance->setGenericTokenFactoryPaths(array('capture' => 'payum_capture_do', 'notify' => 'payum_notify_do', 'authorize' => 'payum_authorize_do', 'refund' => 'payum_refund_do', 'cancel' => 'payum_cancel_do', 'payout' => 'payum_payout_do'));
        $instance->setCoreGatewayFactory($a);
        $instance->addCoreGatewayFactoryConfig(array('payum.template.layout' => '@PayumCore\\layout.html.twig', 'payum.template.obtain_credit_card' => '@PayumSymfonyBridge\\obtainCreditCard.html.twig', 'payum.paths' => array('PayumSymfonyBridge' => ($this->targetDirs[3].'/vendor/payum/core/Payum/Core/Bridge/Symfony/Resources/views')), 'payum.action.get_http_request' => ${($_ = isset($this->services['payum.action.get_http_request']) ? $this->services['payum.action.get_http_request'] : $this->get('payum.action.get_http_request')) && false ?: '_'}, 'payum.action.obtain_credit_card' => ${($_ = isset($this->services['payum.action.obtain_credit_card_builder']) ? $this->services['payum.action.obtain_credit_card_builder'] : $this->get('payum.action.obtain_credit_card_builder')) && false ?: '_'}));
        $instance->addGateway('offline', array('factory' => 'offline'));
        $instance->setGatewayConfigStorage(${($_ = isset($this->services['payum.dynamic_gateways.config_storage']) ? $this->services['payum.dynamic_gateways.config_storage'] : $this->get('payum.dynamic_gateways.config_storage')) && false ?: '_'});
        $instance->addCoreGatewayFactoryConfig(array('twig.env' => '@twig'));
        $instance->addCoreGatewayFactoryConfig(array('payum.action.coreshop.resolve_next_route' => '@coreshop.payum_action.resolve_next_route', 'payum.extension.coreshop.payum_extension.update_payment_state' => '@coreshop.payum_extension.update_payment_state', 'payum.prepend_extensions' => array(0 => 'payum.extension.coreshop.payum_extension.update_payment_state', 1 => 'payum.extension.coreshop.payum_extension.update_order_workflow_extension', 2 => 'payum.extension.profile_collector'), 'payum.extension.coreshop.payum_extension.update_order_workflow_extension' => '@coreshop.payum_extension.update_order_workflow_extension', 'payum.extension.psr_logger' => '@payum.extension.logger', 'payum.extension.log_executed_actions' => '@payum.extension.log_executed_actions', 'payum.extension.profile_collector' => '@payum.profiler.payum_collector', 'payum.extension.payum.extension.storage.coreshop_component_payment_model_payment' => '@payum.extension.storage.coreshop_component_payment_model_payment'));
        $instance->addGatewayFactoryConfig('offline', array('payum.action.coreshop.offline.convert_payment' => '@coreshop.payum_action.offline.convert_payment', 'payum.action.coreshop.offline.resolve_next_route' => '@coreshop.payum_action.offine.resolve_next_route', 'payum.action.coreshop.offline.status' => '@coreshop.payum_action.offline.status'));

        return $instance;
    }

    /**
     * Gets the public 'payum.converter.reply_to_http_response' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\ReplyToSymfonyResponseConverter
     */
    protected function getPayum_Converter_ReplyToHttpResponseService()
    {
        return $this->services['payum.converter.reply_to_http_response'] = new \Payum\Core\Bridge\Symfony\ReplyToSymfonyResponseConverter();
    }

    /**
     * Gets the public 'payum.dynamic_gateways.config_storage' shared service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage
     */
    protected function getPayum_DynamicGateways_ConfigStorageService()
    {
        return $this->services['payum.dynamic_gateways.config_storage'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, 'CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the public 'payum.dynamic_registry' shared service.
     *
     * @return \Payum\Core\Registry\DynamicRegistry
     */
    protected function getPayum_DynamicRegistryService()
    {
        return $this->services['payum.dynamic_registry'] = new \Payum\Core\Registry\DynamicRegistry(${($_ = isset($this->services['payum.dynamic_gateways.config_storage']) ? $this->services['payum.dynamic_gateways.config_storage'] : $this->get('payum.dynamic_gateways.config_storage')) && false ?: '_'}, ${($_ = isset($this->services['payum.static_registry']) ? $this->services['payum.static_registry'] : $this->get('payum.static_registry')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.extension.log_executed_actions' shared service.
     *
     * @return \Payum\Core\Bridge\Psr\Log\LogExecutedActionsExtension
     */
    protected function getPayum_Extension_LogExecutedActionsService()
    {
        return $this->services['payum.extension.log_executed_actions'] = new \Payum\Core\Bridge\Psr\Log\LogExecutedActionsExtension(${($_ = isset($this->services['monolog.logger.payum']) ? $this->services['monolog.logger.payum'] : $this->get('monolog.logger.payum', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.extension.logger' shared service.
     *
     * @return \Payum\Core\Bridge\Psr\Log\LoggerExtension
     */
    protected function getPayum_Extension_LoggerService()
    {
        return $this->services['payum.extension.logger'] = new \Payum\Core\Bridge\Psr\Log\LoggerExtension(${($_ = isset($this->services['monolog.logger.payum']) ? $this->services['monolog.logger.payum'] : $this->get('monolog.logger.payum', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.extension.storage.coreshop_component_payment_model_payment' shared service.
     *
     * @return \Payum\Core\Extension\StorageExtension
     */
    protected function getPayum_Extension_Storage_CoreshopComponentPaymentModelPaymentService()
    {
        return $this->services['payum.extension.storage.coreshop_component_payment_model_payment'] = new \Payum\Core\Extension\StorageExtension(${($_ = isset($this->services['payum.storage.coreshop_component_payment_model_payment']) ? $this->services['payum.storage.coreshop_component_payment_model_payment'] : $this->get('payum.storage.coreshop_component_payment_model_payment')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.form.extension.gateway_factories_choice' shared service.
     *
     * @return \Payum\Bundle\PayumBundle\Form\Extension\GatewayFactoriesChoiceTypeExtension
     */
    protected function getPayum_Form_Extension_GatewayFactoriesChoiceService()
    {
        return $this->services['payum.form.extension.gateway_factories_choice'] = new \Payum\Bundle\PayumBundle\Form\Extension\GatewayFactoriesChoiceTypeExtension(${($_ = isset($this->services['payum']) ? $this->services['payum'] : $this->get('payum')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.form.type.credit_card' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\CreditCardType
     */
    protected function getPayum_Form_Type_CreditCardService()
    {
        return $this->services['payum.form.type.credit_card'] = new \Payum\Core\Bridge\Symfony\Form\Type\CreditCardType();
    }

    /**
     * Gets the public 'payum.form.type.credit_card_expiration_date' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\CreditCardExpirationDateType
     */
    protected function getPayum_Form_Type_CreditCardExpirationDateService()
    {
        return $this->services['payum.form.type.credit_card_expiration_date'] = new \Payum\Core\Bridge\Symfony\Form\Type\CreditCardExpirationDateType();
    }

    /**
     * Gets the public 'payum.form.type.gateway_config' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\GatewayConfigType
     */
    protected function getPayum_Form_Type_GatewayConfigService()
    {
        return $this->services['payum.form.type.gateway_config'] = new \Payum\Core\Bridge\Symfony\Form\Type\GatewayConfigType(${($_ = isset($this->services['payum']) ? $this->services['payum'] : $this->get('payum')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.form.type.gateway_factories_choice' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\GatewayFactoriesChoiceType
     */
    protected function getPayum_Form_Type_GatewayFactoriesChoiceService()
    {
        return $this->services['payum.form.type.gateway_factories_choice'] = new \Payum\Core\Bridge\Symfony\Form\Type\GatewayFactoriesChoiceType(array());
    }

    /**
     * Gets the public 'payum.listener.reply_to_http_response' shared service.
     *
     * @return \Payum\Bundle\PayumBundle\EventListener\ReplyToHttpResponseListener
     */
    protected function getPayum_Listener_ReplyToHttpResponseService()
    {
        return $this->services['payum.listener.reply_to_http_response'] = new \Payum\Bundle\PayumBundle\EventListener\ReplyToHttpResponseListener(${($_ = isset($this->services['payum.converter.reply_to_http_response']) ? $this->services['payum.converter.reply_to_http_response'] : $this->get('payum.converter.reply_to_http_response')) && false ?: '_'});
    }

    /**
     * Gets the public 'payum.profiler.payum_collector' shared service.
     *
     * @return \Payum\Bundle\PayumBundle\Profiler\PayumCollector
     */
    protected function getPayum_Profiler_PayumCollectorService()
    {
        return $this->services['payum.profiler.payum_collector'] = new \Payum\Bundle\PayumBundle\Profiler\PayumCollector();
    }

    /**
     * Gets the public 'payum.security.token_storage' shared service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage
     */
    protected function getPayum_Security_TokenStorageService()
    {
        return $this->services['payum.security.token_storage'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, 'CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the public 'payum.static_registry' shared service.
     *
     * @return \Payum\Core\Bridge\Symfony\ContainerAwareRegistry
     */
    protected function getPayum_StaticRegistryService()
    {
        $this->services['payum.static_registry'] = $instance = new \Payum\Core\Bridge\Symfony\ContainerAwareRegistry(array(), array('CoreShop\\Component\\Payment\\Model\\Payment' => 'payum.storage.coreshop_component_payment_model_payment'), array());

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'payum.storage.coreshop_bundle_payumbundle_model_gatewayconfig' shared service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage
     */
    protected function getPayum_Storage_CoreshopBundlePayumbundleModelGatewayconfigService()
    {
        return $this->services['payum.storage.coreshop_bundle_payumbundle_model_gatewayconfig'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, 'CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the public 'payum.storage.coreshop_bundle_payumbundle_model_paymentsecuritytoken' shared service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage
     */
    protected function getPayum_Storage_CoreshopBundlePayumbundleModelPaymentsecuritytokenService()
    {
        return $this->services['payum.storage.coreshop_bundle_payumbundle_model_paymentsecuritytoken'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, 'CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the public 'payum.storage.coreshop_component_payment_model_payment' shared service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage
     */
    protected function getPayum_Storage_CoreshopComponentPaymentModelPaymentService()
    {
        return $this->services['payum.storage.coreshop_component_payment_model_payment'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->get('doctrine.orm.default_entity_manager')) && false ?: '_'}, 'CoreShop\\Component\\Payment\\Model\\Payment');
    }

    /**
     * Gets the public 'pimcore.bundle_locator' shared autowired service.
     *
     * @return \Pimcore\HttpKernel\BundleLocator\BundleLocator
     */
    protected function getPimcore_BundleLocatorService()
    {
        return $this->services['pimcore.bundle_locator'] = new \Pimcore\HttpKernel\BundleLocator\BundleLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.cache.core.handler' shared autowired service.
     *
     * @return \Pimcore\Cache\Core\EventDispatchingCoreHandler
     */
    protected function getPimcore_Cache_Core_HandlerService()
    {
        $this->services['pimcore.cache.core.handler'] = $instance = new \Pimcore\Cache\Core\EventDispatchingCoreHandler(${($_ = isset($this->services['pimcore.cache.core.pool.recorder']) ? $this->services['pimcore.cache.core.pool.recorder'] : $this->get('pimcore.cache.core.pool.recorder')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.cache.core.write_lock']) ? $this->services['pimcore.cache.core.write_lock'] : $this->get('pimcore.cache.core.write_lock')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.pool.array' shared autowired service.
     *
     * @return \Pimcore\Cache\Pool\SymfonyAdapterProxy
     */
    protected function getPimcore_Cache_Core_Pool_ArrayService()
    {
        $this->services['pimcore.cache.core.pool.array'] = $instance = new \Pimcore\Cache\Pool\SymfonyAdapterProxy(${($_ = isset($this->services['pimcore.cache.core.symfony_adapter.array']) ? $this->services['pimcore.cache.core.symfony_adapter.array'] : $this->get('pimcore.cache.core.symfony_adapter.array')) && false ?: '_'}, 2419200);

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.pool.doctrine' shared service.
     *
     * @return \Pimcore\Cache\Pool\Doctrine
     */
    protected function getPimcore_Cache_Core_Pool_DoctrineService()
    {
        $this->services['pimcore.cache.core.pool.doctrine'] = $instance = new \Pimcore\Cache\Pool\Doctrine(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'}, 2419200);

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.pool.filesystem' shared autowired service.
     *
     * @return \Pimcore\Cache\Pool\SymfonyAdapterProxy
     */
    protected function getPimcore_Cache_Core_Pool_FilesystemService()
    {
        $this->services['pimcore.cache.core.pool.filesystem'] = $instance = new \Pimcore\Cache\Pool\SymfonyAdapterProxy(${($_ = isset($this->services['pimcore.cache.core.symfony_adapter.filesystem']) ? $this->services['pimcore.cache.core.symfony_adapter.filesystem'] : $this->get('pimcore.cache.core.symfony_adapter.filesystem')) && false ?: '_'}, 2419200);

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.pool.recorder' shared service.
     *
     * @return \Pimcore\Cache\Pool\TraceablePimcoreAdapter
     */
    protected function getPimcore_Cache_Core_Pool_RecorderService()
    {
        return $this->services['pimcore.cache.core.pool.recorder'] = new \Pimcore\Cache\Pool\TraceablePimcoreAdapter(${($_ = isset($this->services['pimcore.cache.core.pool.doctrine']) ? $this->services['pimcore.cache.core.pool.doctrine'] : $this->get('pimcore.cache.core.pool.doctrine')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.cache.core.symfony_adapter.array' shared autowired service.
     *
     * @return \Symfony\Component\Cache\Adapter\ArrayAdapter
     */
    protected function getPimcore_Cache_Core_SymfonyAdapter_ArrayService()
    {
        $this->services['pimcore.cache.core.symfony_adapter.array'] = $instance = new \Symfony\Component\Cache\Adapter\ArrayAdapter(2419200, false);

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.symfony_adapter.filesystem' shared autowired service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    protected function getPimcore_Cache_Core_SymfonyAdapter_FilesystemService()
    {
        $this->services['pimcore.cache.core.symfony_adapter.filesystem'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('pimcore', 2419200, (__DIR__.'/pimcore'));

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.cache.core.write_lock' shared autowired service.
     *
     * @return \Pimcore\Cache\Core\WriteLock
     */
    protected function getPimcore_Cache_Core_WriteLockService()
    {
        $this->services['pimcore.cache.core.write_lock'] = $instance = new \Pimcore\Cache\Core\WriteLock(${($_ = isset($this->services['pimcore.cache.core.pool.recorder']) ? $this->services['pimcore.cache.core.pool.recorder'] : $this->get('pimcore.cache.core.pool.recorder')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.custom_report.adapter.factories' shared autowired service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getPimcore_CustomReport_Adapter_FactoriesService()
    {
        return $this->services['pimcore.custom_report.adapter.factories'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('analytics' => function () {
            return ${($_ = isset($this->services['pimcore.custom_report.adapter.factory.analytics']) ? $this->services['pimcore.custom_report.adapter.factory.analytics'] : $this->get('pimcore.custom_report.adapter.factory.analytics')) && false ?: '_'};
        }, 'sql' => function () {
            return ${($_ = isset($this->services['pimcore.custom_report.adapter.factory.sql']) ? $this->services['pimcore.custom_report.adapter.factory.sql'] : $this->get('pimcore.custom_report.adapter.factory.sql')) && false ?: '_'};
        }));
    }

    /**
     * Gets the public 'pimcore.custom_report.adapter.factory.analytics' shared autowired service.
     *
     * @return \Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory
     */
    protected function getPimcore_CustomReport_Adapter_Factory_AnalyticsService()
    {
        return $this->services['pimcore.custom_report.adapter.factory.analytics'] = new \Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory('Pimcore\\Model\\Tool\\CustomReport\\Adapter\\Analytics');
    }

    /**
     * Gets the public 'pimcore.custom_report.adapter.factory.sql' shared autowired service.
     *
     * @return \Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory
     */
    protected function getPimcore_CustomReport_Adapter_Factory_SqlService()
    {
        return $this->services['pimcore.custom_report.adapter.factory.sql'] = new \Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory('Pimcore\\Model\\Tool\\CustomReport\\Adapter\\Sql');
    }

    /**
     * Gets the public 'pimcore.dao.object_manager' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Pimcore\ObjectManager
     */
    protected function getPimcore_Dao_ObjectManagerService()
    {
        return $this->services['pimcore.dao.object_manager'] = new \CoreShop\Bundle\ResourceBundle\Pimcore\ObjectManager();
    }

    /**
     * Gets the public 'pimcore.document.newsletter.factory.csv' shared autowired service.
     *
     * @return \Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory
     */
    protected function getPimcore_Document_Newsletter_Factory_CsvService()
    {
        return $this->services['pimcore.document.newsletter.factory.csv'] = new \Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory('Pimcore\\Document\\Newsletter\\AddressSourceAdapter\\CsvList');
    }

    /**
     * Gets the public 'pimcore.document.newsletter.factory.default' shared autowired service.
     *
     * @return \Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory
     */
    protected function getPimcore_Document_Newsletter_Factory_DefaultService()
    {
        return $this->services['pimcore.document.newsletter.factory.default'] = new \Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory('Pimcore\\Document\\Newsletter\\AddressSourceAdapter\\DefaultAdapter');
    }

    /**
     * Gets the public 'pimcore.document.newsletter.factory.report' shared autowired service.
     *
     * @return \Pimcore\Document\Newsletter\ReportAddressSourceAdapterFactory
     */
    protected function getPimcore_Document_Newsletter_Factory_ReportService()
    {
        return $this->services['pimcore.document.newsletter.factory.report'] = new \Pimcore\Document\Newsletter\ReportAddressSourceAdapterFactory(${($_ = isset($this->services['pimcore.custom_report.adapter.factories']) ? $this->services['pimcore.custom_report.adapter.factories'] : $this->get('pimcore.custom_report.adapter.factories')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.document.tag.handler' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\DelegatingTagHandler
     */
    protected function getPimcore_Document_Tag_HandlerService()
    {
        $a = new \Pimcore\Document\Tag\TagHandler(${($_ = isset($this->services['Pimcore\Extension\Document\Areabrick\AreabrickManager']) ? $this->services['Pimcore\Extension\Document\Areabrick\AreabrickManager'] : $this->get('Pimcore\Extension\Document\Areabrick\AreabrickManager')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.bundle_locator']) ? $this->services['pimcore.bundle_locator'] : $this->get('pimcore.bundle_locator')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.web_path_resolver']) ? $this->services['pimcore.web_path_resolver'] : $this->get('pimcore.web_path_resolver')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, new \Pimcore\Bundle\AdminBundle\Translation\AdminUserTranslator(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserLoader')) && false ?: '_'}));
        $a->setLogger(${($_ = isset($this->services['monolog.logger.pimcore']) ? $this->services['monolog.logger.pimcore'] : $this->get('monolog.logger.pimcore')) && false ?: '_'});

        $this->services['pimcore.document.tag.handler'] = $instance = new \Pimcore\Document\Tag\DelegatingTagHandler();

        $instance->addHandler($a);

        return $instance;
    }

    /**
     * Gets the public 'pimcore.document.tag.naming.migration.strategy.analyze' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\NamingStrategy\Migration\AnalyzeMigrationStrategy
     */
    protected function getPimcore_Document_Tag_Naming_Migration_Strategy_AnalyzeService()
    {
        return $this->services['pimcore.document.tag.naming.migration.strategy.analyze'] = new \Pimcore\Document\Tag\NamingStrategy\Migration\AnalyzeMigrationStrategy(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.document.tag.naming.migration.strategy.render' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\NamingStrategy\Migration\RenderMigrationStrategy
     */
    protected function getPimcore_Document_Tag_Naming_Migration_Strategy_RenderService()
    {
        return $this->services['pimcore.document.tag.naming.migration.strategy.render'] = new \Pimcore\Document\Tag\NamingStrategy\Migration\RenderMigrationStrategy(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserLoader')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator']) ? $this->services['Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator'] : $this->getPimcore_Bundle_AdminBundle_Session_AdminSessionBagConfiguratorService()) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler']) ? $this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler'] : $this->getPimcore_Routing_Dynamic_DocumentRouteHandlerService()) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.document.tag.naming.strategy.legacy' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\NamingStrategy\LegacyNamingStrategy
     */
    protected function getPimcore_Document_Tag_Naming_Strategy_LegacyService()
    {
        return $this->services['pimcore.document.tag.naming.strategy.legacy'] = new \Pimcore\Document\Tag\NamingStrategy\LegacyNamingStrategy();
    }

    /**
     * Gets the public 'pimcore.document.tag.naming.strategy.nested' shared autowired service.
     *
     * @return \Pimcore\Document\Tag\NamingStrategy\NestedNamingStrategy
     */
    protected function getPimcore_Document_Tag_Naming_Strategy_NestedService()
    {
        return $this->services['pimcore.document.tag.naming.strategy.nested'] = new \Pimcore\Document\Tag\NamingStrategy\NestedNamingStrategy();
    }

    /**
     * Gets the public 'pimcore.http_client' shared autowired service.
     *
     * @return \GuzzleHttp\Client
     */
    protected function getPimcore_HttpClientService()
    {
        return $this->services['pimcore.http_client'] = \Pimcore\Http\ClientFactory::createHttpClient();
    }

    /**
     * Gets the public 'pimcore.implementation_loader.document.tag' shared autowired service.
     *
     * @return \Pimcore\Model\Document\Tag\Loader\TagLoader
     */
    protected function getPimcore_ImplementationLoader_Document_TagService()
    {
        return $this->services['pimcore.implementation_loader.document.tag'] = new \Pimcore\Model\Document\Tag\Loader\TagLoader(array(0 => new \Pimcore\Model\Document\Tag\Loader\PrefixLoader(array(0 => '\\Pimcore\\Model\\Document\\Tag\\', 1 => '\\Document_Tag_'))));
    }

    /**
     * Gets the public 'pimcore.implementation_loader.object.data' shared autowired service.
     *
     * @return \Pimcore\Model\DataObject\ClassDefinition\Loader\DataLoader
     */
    protected function getPimcore_ImplementationLoader_Object_DataService()
    {
        return $this->services['pimcore.implementation_loader.object.data'] = new \Pimcore\Model\DataObject\ClassDefinition\Loader\DataLoader(array(0 => new \Pimcore\Loader\ImplementationLoader\ClassMapLoader(array('coreShopMoney' => 'CoreShop\\Bundle\\MoneyBundle\\CoreExtension\\Money', 'coreShopCartPriceRule' => 'CoreShop\\Bundle\\OrderBundle\\CoreExtension\\CartPriceRule', 'coreShopProductSpecificPriceRules' => 'CoreShop\\Bundle\\ProductBundle\\CoreExtension\\ProductSpecificPriceRules', 'coreShopCountry' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\Country', 'coreShopState' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\State', 'coreShopCountryMultiselect' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\CountryMultiselect', 'coreShopCurrency' => 'CoreShop\\Bundle\\CurrencyBundle\\CoreExtension\\Currency', 'coreShopCurrencyMultiselect' => 'CoreShop\\Bundle\\CurrencyBundle\\CoreExtension\\CurrencyMultiselect', 'coreShopTaxRuleGroup' => 'CoreShop\\Bundle\\TaxationBundle\\CoreExtension\\TaxRuleGroup', 'coreShopStore' => 'CoreShop\\Bundle\\StoreBundle\\CoreExtension\\Store', 'coreShopStoreMultiselect' => 'CoreShop\\Bundle\\StoreBundle\\CoreExtension\\StoreMultiselect', 'coreShopFilter' => 'CoreShop\\Bundle\\IndexBundle\\CoreExtension\\Filter', 'coreShopCarrier' => 'CoreShop\\Bundle\\ShippingBundle\\CoreExtension\\Carrier', 'coreShopCarrierMultiselect' => 'CoreShop\\Bundle\\ShippingBundle\\CoreExtension\\CarrierMultiselect', 'coreShopPaymentProvider' => 'CoreShop\\Bundle\\PaymentBundle\\CoreExtension\\PaymentProvider', 'coreShopStorePrice' => 'CoreShop\\Bundle\\CoreBundle\\CoreExtension\\StorePrice', 'block' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Block', 'calculatedValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\CalculatedValue', 'checkbox' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Checkbox', 'classificationstore' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Classificationstore', 'country' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Country', 'countrymultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Countrymultiselect', 'date' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Date', 'datetime' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Datetime', 'email' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Email', 'externalImage' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\ExternalImage', 'fieldcollections' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Fieldcollections', 'firstname' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Firstname', 'gender' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Gender', 'geobounds' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geobounds', 'geopoint' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geopoint', 'geopolygon' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geopolygon', 'hotspotimage' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Hotspotimage', 'href' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Href', 'image' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Image', 'input' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Input', 'language' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Language', 'languagemultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Languagemultiselect', 'lastname' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Lastname', 'link' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Link', 'localizedfields' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Localizedfields', 'multihref' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Multihref', 'multihrefMetadata' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\MultihrefMetadata', 'multiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Multiselect', 'newsletterActive' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\NewsletterActive', 'nonownerobjects' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Nonownerobjects', 'numeric' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Numeric', 'objectbricks' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Objectbricks', 'objects' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Objects', 'objectsMetadata' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\ObjectsMetadata', 'password' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Password', 'persona' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Persona', 'personamultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Personamultiselect', 'quantityValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\QuantityValue', 'inputQuantityValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\InputQuantityValue', 'select' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Select', 'slider' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Slider', 'structuredTable' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\StructuredTable', 'table' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Table', 'textarea' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Textarea', 'time' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Time', 'user' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\User', 'video' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Video', 'wysiwyg' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Wysiwyg', 'indexFieldSelection' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelection', 'indexFieldSelectionCombo' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelectionCombo', 'indexFieldSelectionField' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelectionField')), 1 => new \Pimcore\Loader\ImplementationLoader\PrefixLoader(array(0 => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\', 1 => '\\Object_Class_Data_'))));
    }

    /**
     * Gets the public 'pimcore.implementation_loader.object.layout' shared autowired service.
     *
     * @return \Pimcore\Model\DataObject\ClassDefinition\Loader\LayoutLoader
     */
    protected function getPimcore_ImplementationLoader_Object_LayoutService()
    {
        return $this->services['pimcore.implementation_loader.object.layout'] = new \Pimcore\Model\DataObject\ClassDefinition\Loader\LayoutLoader(array(0 => new \Pimcore\Loader\ImplementationLoader\PrefixLoader(array(0 => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Layout\\', 1 => '\\Object_Class_Layout_'))));
    }

    /**
     * Gets the public 'pimcore.newsletter.address_source_adapter.factories' shared autowired service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getPimcore_Newsletter_AddressSourceAdapter_FactoriesService()
    {
        return $this->services['pimcore.newsletter.address_source_adapter.factories'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('csvList' => function () {
            return ${($_ = isset($this->services['pimcore.document.newsletter.factory.csv']) ? $this->services['pimcore.document.newsletter.factory.csv'] : $this->get('pimcore.document.newsletter.factory.csv')) && false ?: '_'};
        }, 'defaultAdapter' => function () {
            return ${($_ = isset($this->services['pimcore.document.newsletter.factory.default']) ? $this->services['pimcore.document.newsletter.factory.default'] : $this->get('pimcore.document.newsletter.factory.default')) && false ?: '_'};
        }, 'reportAdapter' => function () {
            return ${($_ = isset($this->services['pimcore.document.newsletter.factory.report']) ? $this->services['pimcore.document.newsletter.factory.report'] : $this->get('pimcore.document.newsletter.factory.report')) && false ?: '_'};
        }));
    }

    /**
     * Gets the public 'pimcore.routing.router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected function getPimcore_Routing_Router_RequestContextService()
    {
        return $this->services['pimcore.routing.router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }

    /**
     * Gets the public 'pimcore.service.context.pimcore_context_guesser' shared autowired service.
     *
     * @return \Pimcore\Http\Context\PimcoreContextGuesser
     */
    protected function getPimcore_Service_Context_PimcoreContextGuesserService()
    {
        $this->services['pimcore.service.context.pimcore_context_guesser'] = $instance = new \Pimcore\Http\Context\PimcoreContextGuesser(${($_ = isset($this->services['pimcore.service.request_matcher_factory']) ? $this->services['pimcore.service.request_matcher_factory'] : $this->get('pimcore.service.request_matcher_factory')) && false ?: '_'});

        $instance->addContextRoutes('profiler', array(0 => array('path' => '^/_(_profiler|wdt)', 'route' => false, 'host' => false, 'methods' => array())));
        $instance->addContextRoutes('admin', array(0 => array('path' => '^/admin', 'route' => false, 'host' => false, 'methods' => array()), 1 => array('route' => '^pimcore_admin_', 'path' => false, 'host' => false, 'methods' => array())));
        $instance->addContextRoutes('webservice', array(0 => array('path' => '^/webservice', 'route' => false, 'host' => false, 'methods' => array()), 1 => array('route' => '^pimcore_webservice', 'path' => false, 'host' => false, 'methods' => array())));
        $instance->addContextRoutes('plugin', array(0 => array('path' => '^/plugin', 'route' => false, 'host' => false, 'methods' => array())));
        $instance->addContextRoutes('install', array(0 => array('path' => '^/install', 'route' => false, 'host' => false, 'methods' => array())));

        return $instance;
    }

    /**
     * Gets the public 'pimcore.service.request_matcher_factory' shared autowired service.
     *
     * @return \Pimcore\Http\RequestMatcherFactory
     */
    protected function getPimcore_Service_RequestMatcherFactoryService()
    {
        return $this->services['pimcore.service.request_matcher_factory'] = new \Pimcore\Http\RequestMatcherFactory();
    }

    /**
     * Gets the public 'pimcore.templating.action_renderer' shared autowired service.
     *
     * @return \Pimcore\Templating\Renderer\ActionRenderer
     */
    protected function getPimcore_Templating_ActionRendererService()
    {
        return $this->services['pimcore.templating.action_renderer'] = new \Pimcore\Templating\Renderer\ActionRenderer(${($_ = isset($this->services['templating.helper.actions']) ? $this->services['templating.helper.actions'] : $this->get('templating.helper.actions')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Controller\Config\ConfigNormalizer']) ? $this->services['Pimcore\Controller\Config\ConfigNormalizer'] : $this->get('Pimcore\Controller\Config\ConfigNormalizer')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.templating.engine.twig' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\TwigEngine
     */
    protected function getPimcore_Templating_Engine_TwigService()
    {
        return $this->services['pimcore.templating.engine.twig'] = new \Symfony\Bundle\TwigBundle\TwigEngine(${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, ${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : $this->get('templating.name_parser')) && false ?: '_'}, ${($_ = isset($this->services['templating.locator']) ? $this->services['templating.locator'] : $this->get('templating.locator')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.templating.include_renderer' shared autowired service.
     *
     * @return \Pimcore\Templating\Renderer\IncludeRenderer
     */
    protected function getPimcore_Templating_IncludeRendererService()
    {
        return $this->services['pimcore.templating.include_renderer'] = new \Pimcore\Templating\Renderer\IncludeRenderer(${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.templating.tag_renderer' shared autowired service.
     *
     * @return \Pimcore\Templating\Renderer\TagRenderer
     */
    protected function getPimcore_Templating_TagRendererService()
    {
        $this->services['pimcore.templating.tag_renderer'] = $instance = new \Pimcore\Templating\Renderer\TagRenderer(${($_ = isset($this->services['pimcore.implementation_loader.document.tag']) ? $this->services['pimcore.implementation_loader.document.tag'] : $this->get('pimcore.implementation_loader.document.tag')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore.templating.view_helper.placeholder.container_service' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Placeholder\ContainerService
     */
    protected function getPimcore_Templating_ViewHelper_Placeholder_ContainerServiceService()
    {
        return $this->services['pimcore.templating.view_helper.placeholder.container_service'] = new \Pimcore\Templating\Helper\Placeholder\ContainerService();
    }

    /**
     * Gets the public 'pimcore.templating.view_helper.translate' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Translate
     */
    protected function getPimcore_Templating_ViewHelper_TranslateService()
    {
        $this->services['pimcore.templating.view_helper.translate'] = $instance = new \Pimcore\Templating\Helper\Translate(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});

        $instance->setDomain('messages');

        return $instance;
    }

    /**
     * Gets the public 'pimcore.templating.view_helper.translate_admin' shared autowired service.
     *
     * @return \Pimcore\Templating\Helper\Translate
     */
    protected function getPimcore_Templating_ViewHelper_TranslateAdminService()
    {
        $this->services['pimcore.templating.view_helper.translate_admin'] = $instance = new \Pimcore\Templating\Helper\Translate(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});

        $instance->setDomain('admin');

        return $instance;
    }

    /**
     * Gets the public 'pimcore.twig.extension.document_tag' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\DocumentTagExtension
     */
    protected function getPimcore_Twig_Extension_DocumentTagService()
    {
        return $this->services['pimcore.twig.extension.document_tag'] = new \Pimcore\Twig\Extension\DocumentTagExtension(${($_ = isset($this->services['pimcore.templating.tag_renderer']) ? $this->services['pimcore.templating.tag_renderer'] : $this->get('pimcore.templating.tag_renderer')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.twig.extension.glossary' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\GlossaryExtension
     */
    protected function getPimcore_Twig_Extension_GlossaryService()
    {
        return $this->services['pimcore.twig.extension.glossary'] = new \Pimcore\Twig\Extension\GlossaryExtension(${($_ = isset($this->services['Pimcore\Templating\Helper\Glossary']) ? $this->services['Pimcore\Templating\Helper\Glossary'] : $this->get('Pimcore\Templating\Helper\Glossary')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.twig.extension.helpers' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\HelpersExtension
     */
    protected function getPimcore_Twig_Extension_HelpersService()
    {
        return $this->services['pimcore.twig.extension.helpers'] = new \Pimcore\Twig\Extension\HelpersExtension();
    }

    /**
     * Gets the public 'pimcore.twig.extension.navigation' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\NavigationExtension
     */
    protected function getPimcore_Twig_Extension_NavigationService()
    {
        return $this->services['pimcore.twig.extension.navigation'] = new \Pimcore\Twig\Extension\NavigationExtension(${($_ = isset($this->services['Pimcore\Templating\Helper\Navigation']) ? $this->services['Pimcore\Templating\Helper\Navigation'] : $this->get('Pimcore\Templating\Helper\Navigation')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.twig.extension.pimcore_object' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\PimcoreObjectExtension
     */
    protected function getPimcore_Twig_Extension_PimcoreObjectService()
    {
        return $this->services['pimcore.twig.extension.pimcore_object'] = new \Pimcore\Twig\Extension\PimcoreObjectExtension();
    }

    /**
     * Gets the public 'pimcore.twig.extension.subrequest' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\SubrequestExtension
     */
    protected function getPimcore_Twig_Extension_SubrequestService()
    {
        return $this->services['pimcore.twig.extension.subrequest'] = new \Pimcore\Twig\Extension\SubrequestExtension(${($_ = isset($this->services['Pimcore\Templating\Helper\Inc']) ? $this->services['Pimcore\Templating\Helper\Inc'] : $this->get('Pimcore\Templating\Helper\Inc')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Templating\Helper\Action']) ? $this->services['Pimcore\Templating\Helper\Action'] : $this->get('Pimcore\Templating\Helper\Action')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.twig.extension.templating_helper' shared autowired service.
     *
     * @return \Pimcore\Twig\Extension\TemplatingHelperExtension
     */
    protected function getPimcore_Twig_Extension_TemplatingHelperService()
    {
        return $this->services['pimcore.twig.extension.templating_helper'] = new \Pimcore\Twig\Extension\TemplatingHelperExtension(${($_ = isset($this->services['debug.templating.engine.php']) ? $this->services['debug.templating.engine.php'] : $this->get('debug.templating.engine.php')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore.web_path_resolver' shared autowired service.
     *
     * @return \Pimcore\HttpKernel\WebPathResolver
     */
    protected function getPimcore_WebPathResolverService()
    {
        return $this->services['pimcore.web_path_resolver'] = new \Pimcore\HttpKernel\WebPathResolver();
    }

    /**
     * Gets the public 'pimcore_admin.security.admin_authenticator' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator
     */
    protected function getPimcoreAdmin_Security_AdminAuthenticatorService()
    {
        $this->services['pimcore_admin.security.admin_authenticator'] = $instance = new \Pimcore\Bundle\AdminBundle\Security\Guard\AdminAuthenticator(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'}, ${($_ = isset($this->services['pimcore_admin.security.bruteforce_protection_handler']) ? $this->services['pimcore_admin.security.bruteforce_protection_handler'] : $this->get('pimcore_admin.security.bruteforce_protection_handler')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore_admin.security.bruteforce_protection_handler' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\BruteforceProtectionHandler
     */
    protected function getPimcoreAdmin_Security_BruteforceProtectionHandlerService()
    {
        $this->services['pimcore_admin.security.bruteforce_protection_handler'] = $instance = new \Pimcore\Bundle\AdminBundle\Security\BruteforceProtectionHandler(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore_admin.security.logout_success_handler' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\LogoutSuccessHandler
     */
    protected function getPimcoreAdmin_Security_LogoutSuccessHandlerService()
    {
        $this->services['pimcore_admin.security.logout_success_handler'] = $instance = new \Pimcore\Bundle\AdminBundle\Security\LogoutSuccessHandler(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore_admin.security.password_encoder_factory' shared autowired service.
     *
     * @return \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory
     */
    protected function getPimcoreAdmin_Security_PasswordEncoderFactoryService()
    {
        return $this->services['pimcore_admin.security.password_encoder_factory'] = new \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory('Pimcore\\Bundle\\AdminBundle\\Security\\Encoder\\AdminPasswordEncoder');
    }

    /**
     * Gets the public 'pimcore_admin.security.webservice_authenticator' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Security\Guard\WebserviceAuthenticator
     */
    protected function getPimcoreAdmin_Security_WebserviceAuthenticatorService()
    {
        $this->services['pimcore_admin.security.webservice_authenticator'] = $instance = new \Pimcore\Bundle\AdminBundle\Security\Guard\WebserviceAuthenticator();

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'pimcore_admin.serializer' shared autowired service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected function getPimcoreAdmin_SerializerService()
    {
        return $this->services['pimcore_admin.serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => ${($_ = isset($this->services['pimcore_admin.serializer.normalizer.reference_loop']) ? $this->services['pimcore_admin.serializer.normalizer.reference_loop'] : $this->getPimcoreAdmin_Serializer_Normalizer_ReferenceLoopService()) && false ?: '_'}), array(0 => ${($_ = isset($this->services['pimcore_admin.serializer.encoder.json']) ? $this->services['pimcore_admin.serializer.encoder.json'] : $this->getPimcoreAdmin_Serializer_Encoder_JsonService()) && false ?: '_'}));
    }

    /**
     * Gets the public 'pimcore_admin.webservice.service' shared autowired service.
     *
     * @return \Pimcore\Model\Webservice\Service
     */
    protected function getPimcoreAdmin_Webservice_ServiceService()
    {
        return $this->services['pimcore_admin.webservice.service'] = new \Pimcore\Model\Webservice\Service();
    }

    /**
     * Gets the public 'pimcore_ecommerce.availability_system.default' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\AvailabilitySystem\AvailabilitySystem
     */
    protected function getPimcoreEcommerce_AvailabilitySystem_DefaultService()
    {
        return $this->services['pimcore_ecommerce.availability_system.default'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\AvailabilitySystem\AvailabilitySystem();
    }

    /**
     * Gets the public 'pimcore_ecommerce.cart_manager.default' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\MultiCartManager
     */
    protected function getPimcoreEcommerce_CartManager_DefaultService()
    {
        return $this->services['pimcore_ecommerce.cart_manager.default'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\MultiCartManager(${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, new \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\CartFactory(array('cart_class_name' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CartManager\\Cart', 'guest_cart_class_name' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CartManager\\SessionCart')), new \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\CartPriceCalculatorFactory(array()), ${($_ = isset($this->services['pimcore_ecommerce.locator.order_manager']) ? $this->services['pimcore_ecommerce.locator.order_manager'] : $this->get('pimcore_ecommerce.locator.order_manager')) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.pimcore_ecommerce']) ? $this->services['monolog.logger.pimcore_ecommerce'] : $this->get('monolog.logger.pimcore_ecommerce')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore_ecommerce.environment' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\SessionEnvironment
     */
    protected function getPimcoreEcommerce_EnvironmentService()
    {
        return $this->services['pimcore_ecommerce.environment'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\SessionEnvironment(${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore_ecommerce.factory' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Factory
     */
    protected function getPimcoreEcommerce_FactoryService()
    {
        return $this->services['pimcore_ecommerce.factory'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Factory($this, ${($_ = isset($this->services['pimcore_ecommerce.locator.cart_manager']) ? $this->services['pimcore_ecommerce.locator.cart_manager'] : $this->get('pimcore_ecommerce.locator.cart_manager')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.order_manager']) ? $this->services['pimcore_ecommerce.locator.order_manager'] : $this->get('pimcore_ecommerce.locator.order_manager')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.price_system']) ? $this->services['pimcore_ecommerce.locator.price_system'] : $this->get('pimcore_ecommerce.locator.price_system')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.availability_system']) ? $this->services['pimcore_ecommerce.locator.availability_system'] : $this->get('pimcore_ecommerce.locator.availability_system')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.checkout_manager.factory']) ? $this->services['pimcore_ecommerce.locator.checkout_manager.factory'] : $this->get('pimcore_ecommerce.locator.checkout_manager.factory')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.checkout_manager.commit_order_processor']) ? $this->services['pimcore_ecommerce.locator.checkout_manager.commit_order_processor'] : $this->get('pimcore_ecommerce.locator.checkout_manager.commit_order_processor')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.filter_service']) ? $this->services['pimcore_ecommerce.locator.filter_service'] : $this->get('pimcore_ecommerce.locator.filter_service')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore_ecommerce.index_service' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\IndexService
     */
    protected function getPimcoreEcommerce_IndexServiceService()
    {
        return $this->services['pimcore_ecommerce.index_service'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\IndexService(${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, array(0 => new \Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Worker\DefaultMysql(new \Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Config\DefaultMysql('default', array(), array(), array()), ${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection')) && false ?: '_'})));
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.availability_system' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\AvailabilitySystem\AvailabilitySystemLocator
     */
    protected function getPimcoreEcommerce_Locator_AvailabilitySystemService()
    {
        return $this->services['pimcore_ecommerce.locator.availability_system'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\AvailabilitySystem\AvailabilitySystemLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.availability_system.default']) ? $this->services['pimcore_ecommerce.availability_system.default'] : $this->get('pimcore_ecommerce.availability_system.default')) && false ?: '_'};
        })));
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.cart_manager' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\CartManagerLocator
     */
    protected function getPimcoreEcommerce_Locator_CartManagerService()
    {
        return $this->services['pimcore_ecommerce.locator.cart_manager'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CartManager\CartManagerLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.cart_manager.default']) ? $this->services['pimcore_ecommerce.cart_manager.default'] : $this->get('pimcore_ecommerce.cart_manager.default')) && false ?: '_'};
        })), ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.checkout_manager.commit_order_processor' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CommitOrderProcessorLocator
     */
    protected function getPimcoreEcommerce_Locator_CheckoutManager_CommitOrderProcessorService()
    {
        return $this->services['pimcore_ecommerce.locator.checkout_manager.commit_order_processor'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CommitOrderProcessorLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.checkout_manager.default.commit_order_processor']) ? $this->services['pimcore_ecommerce.checkout_manager.default.commit_order_processor'] : $this->getPimcoreEcommerce_CheckoutManager_Default_CommitOrderProcessorService()) && false ?: '_'};
        })), ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.checkout_manager.factory' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CheckoutManagerFactoryLocator
     */
    protected function getPimcoreEcommerce_Locator_CheckoutManager_FactoryService()
    {
        return $this->services['pimcore_ecommerce.locator.checkout_manager.factory'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CheckoutManagerFactoryLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.checkout_manager.default.factory']) ? $this->services['pimcore_ecommerce.checkout_manager.default.factory'] : $this->getPimcoreEcommerce_CheckoutManager_Default_FactoryService()) && false ?: '_'};
        })), ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.filter_service' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterServiceLocator
     */
    protected function getPimcoreEcommerce_Locator_FilterServiceService()
    {
        return $this->services['pimcore_ecommerce.locator.filter_service'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterServiceLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.filter_service.default']) ? $this->services['pimcore_ecommerce.filter_service.default'] : $this->getPimcoreEcommerce_FilterService_DefaultService()) && false ?: '_'};
        })), ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.order_manager' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\OrderManager\OrderManagerLocator
     */
    protected function getPimcoreEcommerce_Locator_OrderManagerService()
    {
        return $this->services['pimcore_ecommerce.locator.order_manager'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\OrderManager\OrderManagerLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.order_manager.default']) ? $this->services['pimcore_ecommerce.order_manager.default'] : $this->get('pimcore_ecommerce.order_manager.default')) && false ?: '_'};
        })), ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'pimcore_ecommerce.locator.price_system' shared service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\PriceSystem\PriceSystemLocator
     */
    protected function getPimcoreEcommerce_Locator_PriceSystemService()
    {
        return $this->services['pimcore_ecommerce.locator.price_system'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\PriceSystem\PriceSystemLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('default' => function () {
            return ${($_ = isset($this->services['pimcore_ecommerce.price_system.default']) ? $this->services['pimcore_ecommerce.price_system.default'] : $this->get('pimcore_ecommerce.price_system.default')) && false ?: '_'};
        })));
    }

    /**
     * Gets the public 'pimcore_ecommerce.offer_tool' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\OfferTool\DefaultService
     */
    protected function getPimcoreEcommerce_OfferToolService()
    {
        return $this->services['pimcore_ecommerce.offer_tool'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\OfferTool\DefaultService('Pimcore\\Model\\DataObject\\OfferToolOffer', 'Pimcore\\Model\\DataObject\\OfferToolOfferItem', '/offertool/offers/%Y/%m');
    }

    /**
     * Gets the public 'pimcore_ecommerce.order_manager.default' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\OrderManager\OrderManager
     */
    protected function getPimcoreEcommerce_OrderManager_DefaultService()
    {
        $a = ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'};

        return $this->services['pimcore_ecommerce.order_manager.default'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\OrderManager\OrderManager($a, new \Pimcore\Bundle\EcommerceFrameworkBundle\OrderManager\Order\AgentFactory($a, ${($_ = isset($this->services['pimcore_ecommerce.payment_manager']) ? $this->services['pimcore_ecommerce.payment_manager'] : $this->get('pimcore_ecommerce.payment_manager')) && false ?: '_'}), ${($_ = isset($this->services['pimcore_ecommerce.voucher_service']) ? $this->services['pimcore_ecommerce.voucher_service'] : $this->get('pimcore_ecommerce.voucher_service')) && false ?: '_'}, array('order_class' => '\\Pimcore\\Model\\DataObject\\OnlineShopOrder', 'order_item_class' => '\\Pimcore\\Model\\DataObject\\OnlineShopOrderItem', 'list_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\OrderManager\\Order\\Listing', 'list_item_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\OrderManager\\Order\\Listing\\Item', 'parent_order_folder' => '/order/%Y/%m/%d'));
    }

    /**
     * Gets the public 'pimcore_ecommerce.payment_manager' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\PaymentManager\PaymentManager
     */
    protected function getPimcoreEcommerce_PaymentManagerService()
    {
        return $this->services['pimcore_ecommerce.payment_manager'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\PaymentManager\PaymentManager(new \Symfony\Component\DependencyInjection\ServiceLocator(array()));
    }

    /**
     * Gets the public 'pimcore_ecommerce.price_system.default' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\PriceSystem\AttributePriceSystem
     */
    protected function getPimcoreEcommerce_PriceSystem_DefaultService()
    {
        return $this->services['pimcore_ecommerce.price_system.default'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\PriceSystem\AttributePriceSystem(${($_ = isset($this->services['pimcore_ecommerce.pricing_manager']) ? $this->services['pimcore_ecommerce.pricing_manager'] : $this->get('pimcore_ecommerce.pricing_manager')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'});
    }

    /**
     * Gets the public 'pimcore_ecommerce.pricing_manager' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\PricingManager\PricingManager
     */
    protected function getPimcoreEcommerce_PricingManagerService()
    {
        $this->services['pimcore_ecommerce.pricing_manager'] = $instance = new \Pimcore\Bundle\EcommerceFrameworkBundle\PricingManager\PricingManager(array('Bracket' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Bracket', 'DateRange' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\DateRange', 'CartAmount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CartAmount', 'CatalogProduct' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CatalogProduct', 'CatalogCategory' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CatalogCategory', 'Token' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Token', 'Sold' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Sold', 'Sales' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Sales', 'ClientIp' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\ClientIp', 'VoucherToken' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\VoucherToken'), array('ProductDiscount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\ProductDiscount', 'CartDiscount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\CartDiscount', 'Gift' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\Gift', 'FreeShipping' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\FreeShipping'), ${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'}, array('rule_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Rule', 'price_info_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\PriceInfo', 'environment_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Environment'));

        $instance->setEnabled(true);

        return $instance;
    }

    /**
     * Gets the public 'pimcore_ecommerce.tracking.tracking_manager' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\Tracking\TrackingManager
     */
    protected function getPimcoreEcommerce_Tracking_TrackingManagerService()
    {
        return $this->services['pimcore_ecommerce.tracking.tracking_manager'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\Tracking\TrackingManager();
    }

    /**
     * Gets the public 'pimcore_ecommerce.voucher_service' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\VoucherService\DefaultService
     */
    protected function getPimcoreEcommerce_VoucherServiceService()
    {
        return $this->services['pimcore_ecommerce.voucher_service'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\VoucherService\DefaultService(array('reservation_minutes_threshold' => 5, 'statistics_days_threshold' => 30));
    }

    /**
     * Gets the public 'pimcore_ecommerce.voucher_service.token_manager_factory' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\VoucherService\TokenManager\TokenManagerFactory
     */
    protected function getPimcoreEcommerce_VoucherService_TokenManagerFactoryService()
    {
        return $this->services['pimcore_ecommerce.voucher_service.token_manager_factory'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\VoucherService\TokenManager\TokenManagerFactory(array('VoucherTokenTypePattern' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\VoucherService\\TokenManager\\Pattern', 'VoucherTokenTypeSingle' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\VoucherService\\TokenManager\\Single'));
    }

    /**
     * Gets the public 'profiler' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Profiler\Profiler
     */
    protected function getProfilerService()
    {
        $a = ${($_ = isset($this->services['monolog.logger.profiler']) ? $this->services['monolog.logger.profiler'] : $this->get('monolog.logger.profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $b = ${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};

        $c = new \Symfony\Component\Cache\DataCollector\CacheDataCollector();
        $c->addInstance('pimcore.cache.core', ${($_ = isset($this->services['pimcore.cache.core.pool.recorder']) ? $this->services['pimcore.cache.core.pool.recorder'] : $this->get('pimcore.cache.core.pool.recorder')) && false ?: '_'});
        $c->addInstance('cache.app', ${($_ = isset($this->services['cache.app']) ? $this->services['cache.app'] : $this->get('cache.app')) && false ?: '_'});
        $c->addInstance('cache.system', ${($_ = isset($this->services['cache.system']) ? $this->services['cache.system'] : $this->get('cache.system')) && false ?: '_'});
        $c->addInstance('cache.validator', ${($_ = isset($this->services['cache.validator']) ? $this->services['cache.validator'] : $this->getCache_ValidatorService()) && false ?: '_'});
        $c->addInstance('cache.serializer', ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'});
        $c->addInstance('cache.annotations', ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'});

        $d = new \Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine')) && false ?: '_'});
        $d->addLogger('default', ${($_ = isset($this->services['doctrine.dbal.logger.profiling.default']) ? $this->services['doctrine.dbal.logger.profiling.default'] : $this->getDoctrine_Dbal_Logger_Profiling_DefaultService()) && false ?: '_'});

        $e = new \Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector();
        if ($this->has('kernel')) {
            $e->setKernel($b);
        }

        $this->services['profiler'] = $instance = new \Symfony\Component\HttpKernel\Profiler\Profiler(new \Symfony\Component\HttpKernel\Profiler\FileProfilerStorage(('file:'.__DIR__.'/profiler')), $a);

        $instance->add(new \Pimcore\Bundle\CoreBundle\DataCollector\PimcoreDataCollector(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'}));
        $instance->add(${($_ = isset($this->services['data_collector.request']) ? $this->services['data_collector.request'] : $this->get('data_collector.request')) && false ?: '_'});
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\TimeDataCollector($b, ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector());
        $instance->add(${($_ = isset($this->services['data_collector.form']) ? $this->services['data_collector.form'] : $this->get('data_collector.form')) && false ?: '_'});
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector());
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector($a, (__DIR__.'/appDevDebugProjectContainer')));
        $instance->add(new \Symfony\Component\HttpKernel\DataCollector\EventDataCollector(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
        $instance->add(${($_ = isset($this->services['data_collector.router']) ? $this->services['data_collector.router'] : $this->get('data_collector.router')) && false ?: '_'});
        $instance->add($c);
        $instance->add(${($_ = isset($this->services['data_collector.translation']) ? $this->services['data_collector.translation'] : $this->get('data_collector.translation')) && false ?: '_'});
        $instance->add(new \Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['security.role_hierarchy']) ? $this->services['security.role_hierarchy'] : $this->getSecurity_RoleHierarchyService()) && false ?: '_'}, ${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'}, ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, ${($_ = isset($this->services['security.firewall.map']) ? $this->services['security.firewall.map'] : $this->getSecurity_Firewall_MapService()) && false ?: '_'}));
        $instance->add(new \Symfony\Bridge\Twig\DataCollector\TwigDataCollector(${($_ = isset($this->services['twig.profile']) ? $this->services['twig.profile'] : $this->get('twig.profile')) && false ?: '_'}));
        $instance->add($d);
        $instance->add(new \Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector($this));
        $instance->add(${($_ = isset($this->services['data_collector.dump']) ? $this->services['data_collector.dump'] : $this->get('data_collector.dump')) && false ?: '_'});
        $instance->add(${($_ = isset($this->services['coreshop.country_collector']) ? $this->services['coreshop.country_collector'] : $this->get('coreshop.country_collector')) && false ?: '_'});
        $instance->add(${($_ = isset($this->services['coreshop.store_collector']) ? $this->services['coreshop.store_collector'] : $this->get('coreshop.store_collector')) && false ?: '_'});
        $instance->add(${($_ = isset($this->services['coreshop.currency_collector']) ? $this->services['coreshop.currency_collector'] : $this->get('coreshop.currency_collector')) && false ?: '_'});
        $instance->add(${($_ = isset($this->services['payum.profiler.payum_collector']) ? $this->services['payum.profiler.payum_collector'] : $this->get('payum.profiler.payum_collector')) && false ?: '_'});
        $instance->add($e);

        return $instance;
    }

    /**
     * Gets the public 'profiler_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ProfilerListener
     */
    protected function getProfilerListenerService()
    {
        return $this->services['profiler_listener'] = new \Symfony\Component\HttpKernel\EventListener\ProfilerListener(${($_ = isset($this->services['profiler']) ? $this->services['profiler'] : $this->get('profiler')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, NULL, false, false);
    }

    /**
     * Gets the public 'property_accessor' shared service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor
     */
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false, new \Symfony\Component\Cache\Adapter\ArrayAdapter(0, false));
    }

    /**
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the public 'response_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ResponseListener
     */
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }

    /**
     * Gets the public 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['pimcore.routing.router.request_context']) ? $this->services['pimcore.routing.router.request_context'] : $this->get('pimcore.routing.router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.request']) ? $this->services['monolog.logger.request'] : $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'routing.loader' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader
     */
    protected function getRouting_LoaderService()
    {
        $a = ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->getControllerNameConverterService()) && false ?: '_'};
        $b = ${($_ = isset($this->services['file_locator']) ? $this->services['file_locator'] : $this->get('file_locator')) && false ?: '_'};
        $c = ${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'};

        $d = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();

        $e = new \Pimcore\Routing\Loader\AnnotatedRouteControllerLoader($c);

        $f = new \Symfony\Component\Config\Loader\LoaderResolver();
        $f->addLoader(new \CoreShop\Bundle\ResourceBundle\Routing\ResourceLoader(${($_ = isset($this->services['coreshop.resource_registry']) ? $this->services['coreshop.resource_registry'] : $this->get('coreshop.resource_registry')) && false ?: '_'}, new \CoreShop\Bundle\ResourceBundle\Routing\RouteFactory()));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($b, $d));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $b, $a, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($c, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->getFosRest_Request_ParamFetcher_ReaderService()) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.inflector']) ? $this->services['fos_rest.inflector'] : $this->get('fos_rest.inflector')) && false ?: '_'}, true, array('json' => false, 'xml' => false, 'html' => true)), $c), NULL));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($b, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));
        $f->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($b, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));
        $f->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
        $f->addLoader(new \Symfony\Component\Config\Loader\GlobFileLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
        $f->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
        $f->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $e));
        $f->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $e));
        $f->addLoader($e);
        $f->addLoader(new \Pimcore\Routing\Loader\BundleRoutingLoader(new \Pimcore\Config\BundleConfigLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'})));

        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, $f);
    }

    /**
     * Gets the public 'security.authentication.guard_handler' shared service.
     *
     * @return \Symfony\Component\Security\Guard\GuardAuthenticatorHandler
     */
    protected function getSecurity_Authentication_GuardHandlerService()
    {
        return $this->services['security.authentication.guard_handler'] = new \Symfony\Component\Security\Guard\GuardAuthenticatorHandler(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'security.authentication_utils' shared service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticationUtils
     */
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'security.authorization_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, false);
    }

    /**
     * Gets the public 'security.csrf.token_manager' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage(${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session')) && false ?: '_'}));
    }

    /**
     * Gets the public 'security.encoder_factory' shared autowired service.
     *
     * @return \Pimcore\Security\Encoder\EncoderFactory
     */
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Pimcore\Security\Encoder\EncoderFactory(new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array()), array('Pimcore\\Bundle\\AdminBundle\\Security\\User\\User' => ${($_ = isset($this->services['pimcore_admin.security.password_encoder_factory']) ? $this->services['pimcore_admin.security.password_encoder_factory'] : $this->get('pimcore_admin.security.password_encoder_factory')) && false ?: '_'}, 'AppBundle\\Model\\DataObject\\User' => ${($_ = isset($this->services['website_demo.security.password_encoder_factory']) ? $this->services['website_demo.security.password_encoder_factory'] : $this->get('website_demo.security.password_encoder_factory')) && false ?: '_'}, 'Pimcore\\Model\\DataObject\\CoreShopCustomer' => ${($_ = isset($this->services['coreshop.security.customer.password_encoder_factory']) ? $this->services['coreshop.security.customer.password_encoder_factory'] : $this->get('coreshop.security.customer.password_encoder_factory')) && false ?: '_'}));
    }

    /**
     * Gets the public 'security.firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\EventListener\FirewallListener
     */
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Bundle\SecurityBundle\EventListener\FirewallListener(${($_ = isset($this->services['security.firewall.map']) ? $this->services['security.firewall.map'] : $this->getSecurity_Firewall_MapService()) && false ?: '_'}, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'}, ${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'});
    }

    /**
     * Gets the public 'security.firewall.map.context.admin' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_AdminService()
    {
        $a = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'};
        $b = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'};
        $c = ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'};
        $d = ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};

        return $this->services['security.firewall.map.context.admin'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $b, ${($_ = isset($this->services['pimcore_admin.security.logout_success_handler']) ? $this->services['pimcore_admin.security.logout_success_handler'] : $this->get('pimcore_admin.security.logout_success_handler')) && false ?: '_'}, array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => '/admin/logout')), 2 => new \Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener(${($_ = isset($this->services['security.authentication.guard_handler']) ? $this->services['security.authentication.guard_handler'] : $this->get('security.authentication.guard_handler')) && false ?: '_'}, $c, 'admin', new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['pimcore_admin.security.admin_authenticator']) ? $this->services['pimcore_admin.security.admin_authenticator'] : $this->get('pimcore_admin.security.admin_authenticator')) && false ?: '_'};
        }, 1), $d), 3 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5a25fbf4000b66.10029197', $d, $c), 4 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'}, $b, 'admin', ${($_ = isset($this->services['pimcore_admin.security.admin_authenticator']) ? $this->services['pimcore_admin.security.admin_authenticator'] : $this->get('pimcore_admin.security.admin_authenticator')) && false ?: '_'}, NULL, NULL, $d, true), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('admin', 'security.user_checker', 'security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e', true, true, 'security.user.provider.concrete.pimcore_admin', NULL, 'Pimcore\\Bundle\\AdminBundle\\Security\\Guard\\AdminAuthenticator', NULL, NULL, array(0 => 'logout', 1 => 'guard', 2 => 'anonymous')));
    }

    /**
     * Gets the public 'security.firewall.map.context.admin_webdav' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_AdminWebdavService()
    {
        $a = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'};
        $b = ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $c = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};

        $d = new \Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint('Secured Area');

        return $this->services['security.firewall.map.context.admin_webdav'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, 1 => ${($_ = isset($this->services['website_demo.security.user_provider']) ? $this->services['website_demo.security.user_provider'] : $this->get('website_demo.security.user_provider')) && false ?: '_'}, 2 => ${($_ = isset($this->services['coreshop.security.customer.user_provider']) ? $this->services['coreshop.security.customer.user_provider'] : $this->get('coreshop.security.customer.user_provider')) && false ?: '_'}), 'admin_webdav', $b, ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, $c), 2 => new \Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener($a, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, 'admin_webdav', $d, $b), 3 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $c, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'}, 'admin_webdav', $d, NULL, NULL, $b, false), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('admin_webdav', 'security.user_checker', 'security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b', true, false, 'security.user.provider.concrete.pimcore_admin', 'admin_webdav', 'security.authentication.basic_entry_point.admin_webdav', NULL, NULL, array(0 => 'http_basic')));
    }

    /**
     * Gets the public 'security.firewall.map.context.coreshop_frontend' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_CoreshopFrontendService()
    {
        $a = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'};
        $b = ${($_ = isset($this->services['coreshop.security.customer.user_provider']) ? $this->services['coreshop.security.customer.user_provider'] : $this->get('coreshop.security.customer.user_provider')) && false ?: '_'};
        $c = ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $d = ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $e = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};
        $f = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'};
        $g = ${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->get('http_kernel')) && false ?: '_'};
        $h = ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'};
        $i = ${($_ = isset($this->services['security.authentication.session_strategy']) ? $this->services['security.authentication.session_strategy'] : $this->getSecurity_Authentication_SessionStrategyService()) && false ?: '_'};

        $j = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $b), 'fb0cd3e33f74127cd452bcd07a52e802188c5221', 'coreshop_frontend', array('name' => 'APP_CORESHOP_REMEMBER_ME', 'lifetime' => 31536000, 'remember_me_parameter' => '_remember_me', 'path' => '/', 'domain' => NULL, 'secure' => false, 'httponly' => true, 'always_remember_me' => false), $c);

        $k = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $f, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($f, 'coreshop_login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'coreshop_logout'));
        $k->addHandler($j);

        $l = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($f, array());
        $l->setOptions(array('login_path' => 'coreshop_login', 'default_target_path' => 'coreshop_index', 'use_referer' => true, 'always_use_default_target_path' => false, 'target_path_parameter' => '_target_path'));
        $l->setProviderKey('coreshop_frontend');

        $m = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($g, $f, array(), $c);
        $m->setOptions(array('login_path' => 'coreshop_login', 'failure_path' => 'coreshop_login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        $n = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $h, $i, $f, 'coreshop_frontend', $l, $m, array('check_path' => 'coreshop_login_check', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true), $c, $d, NULL);
        $n->setRememberMeServices($j);

        return $this->services['security.firewall.map.context.coreshop_frontend'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, 1 => ${($_ = isset($this->services['website_demo.security.user_provider']) ? $this->services['website_demo.security.user_provider'] : $this->get('website_demo.security.user_provider')) && false ?: '_'}, 2 => $b), 'shop', $c, $d, $e), 2 => $k, 3 => $n, 4 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($a, $j, $h, $c, $d, true, $i), 5 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5a25fbf4000b66.10029197', $c, $h), 6 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $e, $f, 'coreshop_frontend', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($g, $f, 'coreshop_login', false), NULL, NULL, $c, false), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('coreshop_frontend', 'security.user_checker', NULL, true, false, 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserProvider', 'shop', 'security.authentication.form_entry_point.coreshop_frontend', NULL, NULL, array(0 => 'logout', 1 => 'form_login', 2 => 'remember_me', 3 => 'anonymous')));
    }

    /**
     * Gets the public 'security.firewall.map.context.demo_cms_fw' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_DemoCmsFwService()
    {
        $a = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'};
        $b = ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $c = ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $d = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};
        $e = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'};
        $f = ${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->get('http_kernel')) && false ?: '_'};
        $g = ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'};

        $h = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $e, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($e, 'demo_login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'demo_logout'));
        $h->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());

        $i = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($e, array());
        $i->setOptions(array('login_path' => 'demo_login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false));
        $i->setProviderKey('demo_cms_fw');

        $j = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($f, $e, array(), $b);
        $j->setOptions(array('login_path' => 'demo_login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        return $this->services['security.firewall.map.context.demo_cms_fw'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, 1 => ${($_ = isset($this->services['website_demo.security.user_provider']) ? $this->services['website_demo.security.user_provider'] : $this->get('website_demo.security.user_provider')) && false ?: '_'}, 2 => ${($_ = isset($this->services['coreshop.security.customer.user_provider']) ? $this->services['coreshop.security.customer.user_provider'] : $this->get('coreshop.security.customer.user_provider')) && false ?: '_'}), 'demo_cms_fw', $b, $c, $d), 2 => $h, 3 => new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $g, ${($_ = isset($this->services['security.authentication.session_strategy']) ? $this->services['security.authentication.session_strategy'] : $this->getSecurity_Authentication_SessionStrategyService()) && false ?: '_'}, $e, 'demo_cms_fw', $i, $j, array('check_path' => 'demo_login', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true), $b, $c, NULL), 4 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5a25fbf4000b66.10029197', $b, $g), 5 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $d, $e, 'demo_cms_fw', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($f, $e, 'demo_login', false), NULL, NULL, $b, false), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('demo_cms_fw', 'security.user_checker', NULL, true, false, 'security.user.provider.concrete.demo_cms_provider', 'demo_cms_fw', 'security.authentication.form_entry_point.demo_cms_fw', NULL, NULL, array(0 => 'logout', 1 => 'form_login', 2 => 'anonymous')));
    }

    /**
     * Gets the public 'security.firewall.map.context.dev' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('dev', 'security.user_checker', 'security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d', false, '', '', '', '', '', '', array()));
    }

    /**
     * Gets the public 'security.firewall.map.context.webservice' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext
     */
    protected function getSecurity_Firewall_Map_Context_WebserviceService()
    {
        $a = ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};

        return $this->services['security.firewall.map.context.webservice'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener(${($_ = isset($this->services['security.authentication.guard_handler']) ? $this->services['security.authentication.guard_handler'] : $this->get('security.authentication.guard_handler')) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, 'webservice', new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['pimcore_admin.security.webservice_authenticator']) ? $this->services['pimcore_admin.security.webservice_authenticator'] : $this->get('pimcore_admin.security.webservice_authenticator')) && false ?: '_'};
        }, 1), $a), 2 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'}, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'}, 'webservice', ${($_ = isset($this->services['pimcore_admin.security.webservice_authenticator']) ? $this->services['pimcore_admin.security.webservice_authenticator'] : $this->get('pimcore_admin.security.webservice_authenticator')) && false ?: '_'}, NULL, NULL, $a, true), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('webservice', 'security.user_checker', 'security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc', true, true, 'security.user.provider.concrete.pimcore_admin', NULL, 'Pimcore\\Bundle\\AdminBundle\\Security\\Guard\\WebserviceAuthenticator', NULL, NULL, array(0 => 'guard')));
    }

    /**
     * Gets the public 'security.password_encoder' shared service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder
     */
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder(${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'security.rememberme.response_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\ResponseListener
     */
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }

    /**
     * Gets the public 'security.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }

    /**
     * Gets the public 'security.validator.user_password' shared service.
     *
     * @return \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator
     */
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_distribution.security_checker' shared service.
     *
     * @return \SensioLabs\Security\SecurityChecker
     */
    protected function getSensioDistribution_SecurityCheckerService()
    {
        return $this->services['sensio_distribution.security_checker'] = new \SensioLabs\Security\SecurityChecker();
    }

    /**
     * Gets the public 'sensio_distribution.security_checker.command' shared service.
     *
     * @return \SensioLabs\Security\Command\SecurityCheckerCommand
     */
    protected function getSensioDistribution_SecurityChecker_CommandService()
    {
        return $this->services['sensio_distribution.security_checker.command'] = new \SensioLabs\Security\Command\SecurityCheckerCommand(${($_ = isset($this->services['sensio_distribution.security_checker']) ? $this->services['sensio_distribution.security_checker'] : $this->get('sensio_distribution.security_checker')) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_framework_extra.cache.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener
     */
    protected function getSensioFrameworkExtra_Cache_ListenerService()
    {
        return $this->services['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener();
    }

    /**
     * Gets the public 'sensio_framework_extra.controller.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener
     */
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->services['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_framework_extra.converter.datetime' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter
     */
    protected function getSensioFrameworkExtra_Converter_DatetimeService()
    {
        return $this->services['sensio_framework_extra.converter.datetime'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter();
    }

    /**
     * Gets the public 'sensio_framework_extra.converter.doctrine.orm' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter
     */
    protected function getSensioFrameworkExtra_Converter_Doctrine_OrmService()
    {
        return $this->services['sensio_framework_extra.converter.doctrine.orm'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_framework_extra.converter.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener
     */
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        return $this->services['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener(${($_ = isset($this->services['sensio_framework_extra.converter.manager']) ? $this->services['sensio_framework_extra.converter.manager'] : $this->get('sensio_framework_extra.converter.manager')) && false ?: '_'}, true);
    }

    /**
     * Gets the public 'sensio_framework_extra.converter.manager' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager
     */
    protected function getSensioFrameworkExtra_Converter_ManagerService()
    {
        $this->services['sensio_framework_extra.converter.manager'] = $instance = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();

        $instance->add(${($_ = isset($this->services['sensio_framework_extra.converter.doctrine.orm']) ? $this->services['sensio_framework_extra.converter.doctrine.orm'] : $this->get('sensio_framework_extra.converter.doctrine.orm')) && false ?: '_'}, 0, 'doctrine.orm');
        $instance->add(${($_ = isset($this->services['sensio_framework_extra.converter.datetime']) ? $this->services['sensio_framework_extra.converter.datetime'] : $this->get('sensio_framework_extra.converter.datetime')) && false ?: '_'}, 0, 'datetime');

        return $instance;
    }

    /**
     * Gets the public 'sensio_framework_extra.security.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener
     */
    protected function getSensioFrameworkExtra_Security_ListenerService()
    {
        return $this->services['sensio_framework_extra.security.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener(NULL, new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage(), ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'}, ${($_ = isset($this->services['security.role_hierarchy']) ? $this->services['security.role_hierarchy'] : $this->getSecurity_RoleHierarchyService()) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_framework_extra.view.guesser' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser
     */
    protected function getSensioFrameworkExtra_View_GuesserService()
    {
        return $this->services['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'sensio_framework_extra.view.listener' shared service.
     *
     * @return \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener
     */
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->services['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener($this);
    }

    /**
     * Gets the public 'serializer' shared service.
     *
     * @return \Symfony\Component\Serializer\Serializer
     */
    protected function getSerializerService()
    {
        $a = ${($_ = isset($this->services['pimcore_admin.serializer']) ? $this->services['pimcore_admin.serializer'] : $this->get('pimcore_admin.serializer')) && false ?: '_'};

        return $this->services['serializer'] = new \Symfony\Component\Serializer\Serializer(array(0 => $a, 1 => ${($_ = isset($this->services['pimcore_admin.serializer.normalizer.reference_loop']) ? $this->services['pimcore_admin.serializer.normalizer.reference_loop'] : $this->getPimcoreAdmin_Serializer_Normalizer_ReferenceLoopService()) && false ?: '_'}, 2 => new \FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}), 3 => new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer(), 4 => new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer(), 5 => new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer(), 6 => new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), 7 => new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer(new \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Loader\LoaderChain(array()), NULL), NULL, ${($_ = isset($this->services['property_accessor']) ? $this->services['property_accessor'] : $this->get('property_accessor')) && false ?: '_'}, NULL)), array(0 => new \Symfony\Component\Serializer\Encoder\YamlEncoder(), 1 => new \Symfony\Component\Serializer\Encoder\CsvEncoder(), 2 => new \Symfony\Component\Serializer\Encoder\XmlEncoder(), 3 => new \Symfony\Component\Serializer\Encoder\JsonEncoder(), 4 => $a, 5 => ${($_ = isset($this->services['pimcore_admin.serializer.encoder.json']) ? $this->services['pimcore_admin.serializer.encoder.json'] : $this->getPimcoreAdmin_Serializer_Encoder_JsonService()) && false ?: '_'}));
    }

    /**
     * Gets the public 'serializer.mapping.cache.symfony' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\PhpArrayAdapter
     */
    protected function getSerializer_Mapping_Cache_SymfonyService()
    {
        return $this->services['serializer.mapping.cache.symfony'] = \Symfony\Component\Cache\Adapter\PhpArrayAdapter::create((__DIR__.'/serialization.php'), ${($_ = isset($this->services['cache.serializer']) ? $this->services['cache.serializer'] : $this->getCache_SerializerService()) && false ?: '_'});
    }

    /**
     * Gets the public 'session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    protected function getSessionService()
    {
        $a = new \Pimcore\Session\SessionConfigurator();
        $a->addConfigurator(${($_ = isset($this->services['coreshop.order.configurator.session_cart']) ? $this->services['coreshop.order.configurator.session_cart'] : $this->get('coreshop.order.configurator.session_cart')) && false ?: '_'});
        $a->addConfigurator(${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator']) ? $this->services['Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator'] : $this->getPimcore_Bundle_AdminBundle_Session_AdminSessionBagConfiguratorService()) && false ?: '_'});
        $a->addConfigurator(new \Pimcore\Bundle\EcommerceFrameworkBundle\Tools\SessionConfigurator());

        $this->services['session'] = $instance = new \Symfony\Component\HttpFoundation\Session\Session(${($_ = isset($this->services['session.storage.native']) ? $this->services['session.storage.native'] : $this->get('session.storage.native')) && false ?: '_'}, new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());

        $a->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'session.handler' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler
     */
    protected function getSession_HandlerService()
    {
        return $this->services['session.handler'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler(($this->targetDirs[3].'/app/../var/sessions'));
    }

    /**
     * Gets the public 'session.save_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SaveSessionListener
     */
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }

    /**
     * Gets the public 'session.storage.filesystem' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage
     */
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage((__DIR__.'/sessions'), 'MOCKSESSID', ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the public 'session.storage.native' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage
     */
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('cookie_httponly' => true, 'gc_probability' => 1), ${($_ = isset($this->services['session.handler']) ? $this->services['session.handler'] : $this->get('session.handler')) && false ?: '_'}, ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the public 'session.storage.php_bridge' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage
     */
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage(${($_ = isset($this->services['session.handler']) ? $this->services['session.handler'] : $this->get('session.handler')) && false ?: '_'}, ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the public 'session_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\ServiceLocator(array('session' => function () {
            return ${($_ = isset($this->services['session']) ? $this->services['session'] : $this->get('session', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        })));
    }

    /**
     * Gets the public 'stof_doctrine_extensions.uploadable.manager' shared service.
     *
     * @return \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager
     */
    protected function getStofDoctrineExtensions_Uploadable_ManagerService()
    {
        $a = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());
        $a->setAnnotationReader(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'});
        $a->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');

        return $this->services['stof_doctrine_extensions.uploadable.manager'] = new \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager($a, 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
    }

    /**
     * Gets the public 'streamed_response_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener
     */
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }

    /**
     * Gets the public 'swiftmailer.email_sender.listener' shared service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'swiftmailer.mailer.newsletter_mailer' shared service.
     *
     * @return \Swift_Mailer
     */
    protected function getSwiftmailer_Mailer_NewsletterMailerService()
    {
        return $this->services['swiftmailer.mailer.newsletter_mailer'] = new \Swift_Mailer(${($_ = isset($this->services['swiftmailer.mailer.newsletter_mailer.transport']) ? $this->services['swiftmailer.mailer.newsletter_mailer.transport'] : $this->get('swiftmailer.mailer.newsletter_mailer.transport')) && false ?: '_'});
    }

    /**
     * Gets the public 'swiftmailer.mailer.newsletter_mailer.plugin.messagelogger' shared service.
     *
     * @return \Swift_Plugins_MessageLogger
     */
    protected function getSwiftmailer_Mailer_NewsletterMailer_Plugin_MessageloggerService()
    {
        return $this->services['swiftmailer.mailer.newsletter_mailer.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the public 'swiftmailer.mailer.newsletter_mailer.transport' shared service.
     *
     * @return \Swift_Transport_MailTransport
     */
    protected function getSwiftmailer_Mailer_NewsletterMailer_TransportService()
    {
        $this->services['swiftmailer.mailer.newsletter_mailer.transport'] = $instance = new \Swift_Transport_MailTransport(${($_ = isset($this->services['swiftmailer.transport.mailinvoker']) ? $this->services['swiftmailer.transport.mailinvoker'] : $this->getSwiftmailer_Transport_MailinvokerService()) && false ?: '_'}, new \Swift_Events_SimpleEventDispatcher());

        $instance->registerPlugin(new \Pimcore\Mail\Plugins\RedirectingPlugin(array(0 => ''), array()));
        $instance->registerPlugin(${($_ = isset($this->services['swiftmailer.mailer.newsletter_mailer.plugin.messagelogger']) ? $this->services['swiftmailer.mailer.newsletter_mailer.plugin.messagelogger'] : $this->get('swiftmailer.mailer.newsletter_mailer.plugin.messagelogger')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'swiftmailer.mailer.pimcore_mailer' shared service.
     *
     * @return \Swift_Mailer
     */
    protected function getSwiftmailer_Mailer_PimcoreMailerService()
    {
        return $this->services['swiftmailer.mailer.pimcore_mailer'] = new \Swift_Mailer(${($_ = isset($this->services['swiftmailer.mailer.pimcore_mailer.transport']) ? $this->services['swiftmailer.mailer.pimcore_mailer.transport'] : $this->get('swiftmailer.mailer.pimcore_mailer.transport')) && false ?: '_'});
    }

    /**
     * Gets the public 'swiftmailer.mailer.pimcore_mailer.plugin.messagelogger' shared service.
     *
     * @return \Swift_Plugins_MessageLogger
     */
    protected function getSwiftmailer_Mailer_PimcoreMailer_Plugin_MessageloggerService()
    {
        return $this->services['swiftmailer.mailer.pimcore_mailer.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the public 'swiftmailer.mailer.pimcore_mailer.transport' shared service.
     *
     * @return \Swift_Transport_MailTransport
     */
    protected function getSwiftmailer_Mailer_PimcoreMailer_TransportService()
    {
        $this->services['swiftmailer.mailer.pimcore_mailer.transport'] = $instance = new \Swift_Transport_MailTransport(${($_ = isset($this->services['swiftmailer.transport.mailinvoker']) ? $this->services['swiftmailer.transport.mailinvoker'] : $this->getSwiftmailer_Transport_MailinvokerService()) && false ?: '_'}, new \Swift_Events_SimpleEventDispatcher());

        $instance->registerPlugin(${($_ = isset($this->services['swiftmailer.plugin.redirecting']) ? $this->services['swiftmailer.plugin.redirecting'] : $this->get('swiftmailer.plugin.redirecting')) && false ?: '_'});
        $instance->registerPlugin(${($_ = isset($this->services['swiftmailer.mailer.pimcore_mailer.plugin.messagelogger']) ? $this->services['swiftmailer.mailer.pimcore_mailer.plugin.messagelogger'] : $this->get('swiftmailer.mailer.pimcore_mailer.plugin.messagelogger')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'swiftmailer.plugin.redirecting' shared service.
     *
     * @return \Pimcore\Mail\Plugins\RedirectingPlugin
     */
    protected function getSwiftmailer_Plugin_RedirectingService()
    {
        return $this->services['swiftmailer.plugin.redirecting'] = new \Pimcore\Mail\Plugins\RedirectingPlugin(array(0 => ''), array());
    }

    /**
     * Gets the public 'templating.cache_warmer.template_paths' shared service.
     *
     * @return \Liip\ThemeBundle\CacheWarmer\TemplatePathsCacheWarmer
     */
    protected function getTemplating_CacheWarmer_TemplatePathsService()
    {
        return $this->services['templating.cache_warmer.template_paths'] = new \Liip\ThemeBundle\CacheWarmer\TemplatePathsCacheWarmer(${($_ = isset($this->services['templating.finder']) ? $this->services['templating.finder'] : $this->getTemplating_FinderService()) && false ?: '_'}, ${($_ = isset($this->services['templating.locator']) ? $this->services['templating.locator'] : $this->get('templating.locator')) && false ?: '_'}, ${($_ = isset($this->services['liip_theme.active_theme']) ? $this->services['liip_theme.active_theme'] : $this->get('liip_theme.active_theme')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.filename_parser' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser
     */
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }

    /**
     * Gets the public 'templating.globals' shared service.
     *
     * @return \Pimcore\Templating\GlobalVariables
     */
    protected function getTemplating_GlobalsService()
    {
        return $this->services['templating.globals'] = new \Pimcore\Templating\GlobalVariables($this);
    }

    /**
     * Gets the public 'templating.helper.actions' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper
     */
    protected function getTemplating_Helper_ActionsService()
    {
        return $this->services['templating.helper.actions'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper(${($_ = isset($this->services['fragment.handler']) ? $this->services['fragment.handler'] : $this->get('fragment.handler')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.assets' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper
     */
    protected function getTemplating_Helper_AssetsService()
    {
        return $this->services['templating.helper.assets'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper(${($_ = isset($this->services['assets.packages']) ? $this->services['assets.packages'] : $this->get('assets.packages')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.code' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper
     */
    protected function getTemplating_Helper_CodeService()
    {
        return $this->services['templating.helper.code'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper(${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'}, ($this->targetDirs[3].'/app'), 'UTF-8');
    }

    /**
     * Gets the public 'templating.helper.form' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper
     */
    protected function getTemplating_Helper_FormService()
    {
        return $this->services['templating.helper.form'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper(new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine(${($_ = isset($this->services['debug.templating.engine.php']) ? $this->services['debug.templating.engine.php'] : $this->get('debug.templating.engine.php')) && false ?: '_'}, array(0 => 'FrameworkBundle:Form')), ${($_ = isset($this->services['security.csrf.token_manager']) ? $this->services['security.csrf.token_manager'] : $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
    }

    /**
     * Gets the public 'templating.helper.logout_url' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper
     */
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.request' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper
     */
    protected function getTemplating_Helper_RequestService()
    {
        return $this->services['templating.helper.request'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.router' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper
     */
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.security' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper
     */
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper(${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.session' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper
     */
    protected function getTemplating_Helper_SessionService()
    {
        return $this->services['templating.helper.session'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.slots' shared service.
     *
     * @return \Symfony\Component\Templating\Helper\SlotsHelper
     */
    protected function getTemplating_Helper_SlotsService()
    {
        return $this->services['templating.helper.slots'] = new \Symfony\Component\Templating\Helper\SlotsHelper();
    }

    /**
     * Gets the public 'templating.helper.stopwatch' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper
     */
    protected function getTemplating_Helper_StopwatchService()
    {
        return $this->services['templating.helper.stopwatch'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper(${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.helper.translator' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper
     */
    protected function getTemplating_Helper_TranslatorService()
    {
        return $this->services['templating.helper.translator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.loader' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader
     */
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader(${($_ = isset($this->services['templating.locator']) ? $this->services['templating.locator'] : $this->get('templating.locator')) && false ?: '_'});
    }

    /**
     * Gets the public 'templating.locator' shared service.
     *
     * @return \Liip\ThemeBundle\Locator\TemplateLocator
     */
    protected function getTemplating_LocatorService()
    {
        $a = ${($_ = isset($this->services['liip_theme.active_theme']) ? $this->services['liip_theme.active_theme'] : $this->get('liip_theme.active_theme')) && false ?: '_'};

        return $this->services['templating.locator'] = new \Liip\ThemeBundle\Locator\TemplateLocator(new \Liip\ThemeBundle\Locator\FileLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, $a, ($this->targetDirs[3].'/app/Resources'), array(), array('app_resource' => array(), 'bundle_resource' => array(), 'bundle_resource_dir' => array())), __DIR__, $a);
    }

    /**
     * Gets the public 'templating.name_parser' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser
     */
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the public 'translation.dumper.csv' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\CsvFileDumper
     */
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.ini' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\IniFileDumper
     */
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.json' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\JsonFileDumper
     */
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.mo' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\MoFileDumper
     */
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.php' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\PhpFileDumper
     */
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.po' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\PoFileDumper
     */
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.qt' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\QtFileDumper
     */
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.res' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\IcuResFileDumper
     */
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.xliff' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\XliffFileDumper
     */
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }

    /**
     * Gets the public 'translation.dumper.yml' shared service.
     *
     * @return \Symfony\Component\Translation\Dumper\YamlFileDumper
     */
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }

    /**
     * Gets the public 'translation.extractor' shared service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor
     */
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', ${($_ = isset($this->services['translation.extractor.php']) ? $this->services['translation.extractor.php'] : $this->get('translation.extractor.php')) && false ?: '_'});
        $instance->addExtractor('twig', ${($_ = isset($this->services['twig.translation.extractor']) ? $this->services['twig.translation.extractor'] : $this->get('twig.translation.extractor')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'translation.extractor.php' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor
     */
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }

    /**
     * Gets the public 'translation.loader' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader
     */
    protected function getTranslation_LoaderService()
    {
        $a = ${($_ = isset($this->services['translation.loader.xliff']) ? $this->services['translation.loader.xliff'] : $this->get('translation.loader.xliff')) && false ?: '_'};

        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();

        $instance->addLoader('php', ${($_ = isset($this->services['translation.loader.php']) ? $this->services['translation.loader.php'] : $this->get('translation.loader.php')) && false ?: '_'});
        $instance->addLoader('yml', ${($_ = isset($this->services['translation.loader.yml']) ? $this->services['translation.loader.yml'] : $this->get('translation.loader.yml')) && false ?: '_'});
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', ${($_ = isset($this->services['translation.loader.po']) ? $this->services['translation.loader.po'] : $this->get('translation.loader.po')) && false ?: '_'});
        $instance->addLoader('mo', ${($_ = isset($this->services['translation.loader.mo']) ? $this->services['translation.loader.mo'] : $this->get('translation.loader.mo')) && false ?: '_'});
        $instance->addLoader('ts', ${($_ = isset($this->services['translation.loader.qt']) ? $this->services['translation.loader.qt'] : $this->get('translation.loader.qt')) && false ?: '_'});
        $instance->addLoader('csv', ${($_ = isset($this->services['translation.loader.csv']) ? $this->services['translation.loader.csv'] : $this->get('translation.loader.csv')) && false ?: '_'});
        $instance->addLoader('res', ${($_ = isset($this->services['translation.loader.res']) ? $this->services['translation.loader.res'] : $this->get('translation.loader.res')) && false ?: '_'});
        $instance->addLoader('dat', ${($_ = isset($this->services['translation.loader.dat']) ? $this->services['translation.loader.dat'] : $this->get('translation.loader.dat')) && false ?: '_'});
        $instance->addLoader('ini', ${($_ = isset($this->services['translation.loader.ini']) ? $this->services['translation.loader.ini'] : $this->get('translation.loader.ini')) && false ?: '_'});
        $instance->addLoader('json', ${($_ = isset($this->services['translation.loader.json']) ? $this->services['translation.loader.json'] : $this->get('translation.loader.json')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'translation.loader.csv' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader
     */
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /**
     * Gets the public 'translation.loader.dat' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader
     */
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /**
     * Gets the public 'translation.loader.ini' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader
     */
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /**
     * Gets the public 'translation.loader.json' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader
     */
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /**
     * Gets the public 'translation.loader.mo' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader
     */
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /**
     * Gets the public 'translation.loader.php' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader
     */
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /**
     * Gets the public 'translation.loader.po' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader
     */
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /**
     * Gets the public 'translation.loader.qt' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader
     */
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /**
     * Gets the public 'translation.loader.res' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader
     */
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /**
     * Gets the public 'translation.loader.xliff' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader
     */
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /**
     * Gets the public 'translation.loader.yml' shared service.
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader
     */
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /**
     * Gets the public 'translation.writer' shared service.
     *
     * @return \Symfony\Component\Translation\Writer\TranslationWriter
     */
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();

        $instance->addDumper('php', ${($_ = isset($this->services['translation.dumper.php']) ? $this->services['translation.dumper.php'] : $this->get('translation.dumper.php')) && false ?: '_'});
        $instance->addDumper('xlf', ${($_ = isset($this->services['translation.dumper.xliff']) ? $this->services['translation.dumper.xliff'] : $this->get('translation.dumper.xliff')) && false ?: '_'});
        $instance->addDumper('po', ${($_ = isset($this->services['translation.dumper.po']) ? $this->services['translation.dumper.po'] : $this->get('translation.dumper.po')) && false ?: '_'});
        $instance->addDumper('mo', ${($_ = isset($this->services['translation.dumper.mo']) ? $this->services['translation.dumper.mo'] : $this->get('translation.dumper.mo')) && false ?: '_'});
        $instance->addDumper('yml', ${($_ = isset($this->services['translation.dumper.yml']) ? $this->services['translation.dumper.yml'] : $this->get('translation.dumper.yml')) && false ?: '_'});
        $instance->addDumper('ts', ${($_ = isset($this->services['translation.dumper.qt']) ? $this->services['translation.dumper.qt'] : $this->get('translation.dumper.qt')) && false ?: '_'});
        $instance->addDumper('csv', ${($_ = isset($this->services['translation.dumper.csv']) ? $this->services['translation.dumper.csv'] : $this->get('translation.dumper.csv')) && false ?: '_'});
        $instance->addDumper('ini', ${($_ = isset($this->services['translation.dumper.ini']) ? $this->services['translation.dumper.ini'] : $this->get('translation.dumper.ini')) && false ?: '_'});
        $instance->addDumper('json', ${($_ = isset($this->services['translation.dumper.json']) ? $this->services['translation.dumper.json'] : $this->get('translation.dumper.json')) && false ?: '_'});
        $instance->addDumper('res', ${($_ = isset($this->services['translation.dumper.res']) ? $this->services['translation.dumper.res'] : $this->get('translation.dumper.res')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'translator.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected function getTranslator_DefaultService()
    {
        $this->services['translator.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\ServiceLocator(array('translation.loader.csv' => function () {
            return ${($_ = isset($this->services['translation.loader.csv']) ? $this->services['translation.loader.csv'] : $this->get('translation.loader.csv')) && false ?: '_'};
        }, 'translation.loader.dat' => function () {
            return ${($_ = isset($this->services['translation.loader.dat']) ? $this->services['translation.loader.dat'] : $this->get('translation.loader.dat')) && false ?: '_'};
        }, 'translation.loader.ini' => function () {
            return ${($_ = isset($this->services['translation.loader.ini']) ? $this->services['translation.loader.ini'] : $this->get('translation.loader.ini')) && false ?: '_'};
        }, 'translation.loader.json' => function () {
            return ${($_ = isset($this->services['translation.loader.json']) ? $this->services['translation.loader.json'] : $this->get('translation.loader.json')) && false ?: '_'};
        }, 'translation.loader.mo' => function () {
            return ${($_ = isset($this->services['translation.loader.mo']) ? $this->services['translation.loader.mo'] : $this->get('translation.loader.mo')) && false ?: '_'};
        }, 'translation.loader.php' => function () {
            return ${($_ = isset($this->services['translation.loader.php']) ? $this->services['translation.loader.php'] : $this->get('translation.loader.php')) && false ?: '_'};
        }, 'translation.loader.po' => function () {
            return ${($_ = isset($this->services['translation.loader.po']) ? $this->services['translation.loader.po'] : $this->get('translation.loader.po')) && false ?: '_'};
        }, 'translation.loader.qt' => function () {
            return ${($_ = isset($this->services['translation.loader.qt']) ? $this->services['translation.loader.qt'] : $this->get('translation.loader.qt')) && false ?: '_'};
        }, 'translation.loader.res' => function () {
            return ${($_ = isset($this->services['translation.loader.res']) ? $this->services['translation.loader.res'] : $this->get('translation.loader.res')) && false ?: '_'};
        }, 'translation.loader.xliff' => function () {
            return ${($_ = isset($this->services['translation.loader.xliff']) ? $this->services['translation.loader.xliff'] : $this->get('translation.loader.xliff')) && false ?: '_'};
        }, 'translation.loader.yml' => function () {
            return ${($_ = isset($this->services['translation.loader.yml']) ? $this->services['translation.loader.yml'] : $this->get('translation.loader.yml')) && false ?: '_'};
        })), new \Symfony\Component\Translation\MessageSelector(), 'en', array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json')), array('cache_dir' => (__DIR__.'/translations'), 'debug' => true, 'resource_files' => array('pt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf')), 'el' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf')), 'eu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf')), 'mn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf')), 'zh_TW' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf')), 'fr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf'), 3 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.fr.yml'), 4 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/translations/validators.fr.yml')), 'fa' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf')), 'it' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf')), 'sk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf')), 'ro' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf')), 'pl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf')), 'cs' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf')), 'sl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf')), 'he' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf')), 'tr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf')), 'cy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf')), 'sr_Cyrl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf')), 'ar' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf')), 'da' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf')), 'lv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf')), 'lt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf')), 'ja' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf')), 'az' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf')), 'hr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf'), 3 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.hr.yml')), 'ca' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf')), 'lb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf')), 'id' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf')), 'es' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf')), 'zh_CN' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf')), 'no' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf')), 'th' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf')), 'fi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf')), 'pt_BR' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf')), 'sv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf')), 'nn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf')), 'hu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf')), 'sr_Latn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf')), 'bg' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf')), 'gl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf')), 'ru' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf')), 'af' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf')), 'et' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf')), 'sq' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf')), 'uk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf')), 'vi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf')), 'de' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf'), 3 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ResourceBundle/Resources/translations/admin.de.yml'), 4 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/MoneyBundle/Resources/translations/admin.de.yml'), 5 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/RuleBundle/Resources/translations/admin.de.yml'), 6 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/translations/admin.de.yml'), 7 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/translations/admin.de.yml'), 8 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/translations/admin.de.yml'), 9 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/translations/admin.de.yml'), 10 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/translations/admin.de.yml'), 11 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/translations/admin.de.yml'), 12 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/translations/admin.de.yml'), 13 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/translations/admin.de.yml'), 14 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle/Resources/translations/admin.de.yml'), 15 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle/Resources/translations/admin.de.yml'), 16 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/translations/admin.de.yml'), 17 => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/EcommerceFrameworkBundle/Resources/translations/admin.de.yml')), 'en' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf'), 3 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ResourceBundle/Resources/translations/admin.en.yml'), 4 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/MoneyBundle/Resources/translations/admin.en.yml'), 5 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/RuleBundle/Resources/translations/admin.en.yml'), 6 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/translations/admin.en.yml'), 7 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/translations/admin.en.yml'), 8 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/translations/admin.en.yml'), 9 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/translations/admin.en.yml'), 10 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/translations/admin.en.yml'), 11 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/translations/admin.en.yml'), 12 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/translations/admin.en.yml'), 13 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/translations/admin.en.yml'), 14 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle/Resources/translations/admin.en.yml'), 15 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle/Resources/translations/admin.en.yml'), 16 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/translations/admin.en.yml'), 17 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.en.yml'), 18 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/translations/validators.en.yml'), 19 => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/EcommerceFrameworkBundle/Resources/translations/admin.en.yml')), 'nl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf')), 'hy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf')), 'pt_PT' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf')), 'ua' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf')))));

        $instance->setConfigCacheFactory(${($_ = isset($this->services['config_cache_factory']) ? $this->services['config_cache_factory'] : $this->get('config_cache_factory')) && false ?: '_'});
        $instance->setFallbackLocales(array(0 => 'en'));

        return $instance;
    }

    /**
     * Gets the public 'translator_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\TranslatorListener
     */
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});
    }

    /**
     * Gets the public 'twig' shared service.
     *
     * @return \Twig\Environment
     */
    protected function getTwigService()
    {
        $a = ${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        $b = ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'};
        $c = ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'};

        $d = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 0);
        $d->setDisplayOptions(array('fileLinkFormat' => $b));

        $e = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 1);
        $e->setDisplayOptions(array('maxStringLength' => 4096, 'fileLinkFormat' => $b));

        $f = new \Symfony\Bridge\Twig\AppVariable();
        $f->setEnvironment('dev');
        $f->setDebug(true);
        if ($this->has('security.token_storage')) {
            $f->setTokenStorage(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }
        if ($this->has('request_stack')) {
            $f->setRequestStack($c);
        }

        $this->services['twig'] = $instance = new \Twig\Environment(${($_ = isset($this->services['twig.loader']) ? $this->services['twig.loader'] : $this->get('twig.loader')) && false ?: '_'}, array('debug' => true, 'strict_variables' => true, 'exception_controller' => 'twig.controller.exception:showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig'), 'autoescape' => 'name', 'cache' => (__DIR__.'/twig'), 'charset' => 'UTF-8', 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));

        $instance->addExtension(new \JMS\Serializer\Twig\SerializerRuntimeExtension());
        $instance->addExtension(new \CoreShop\Bundle\MoneyBundle\Twig\FormatMoneyExtension(${($_ = isset($this->services['coreshop.templating.helper.format_money']) ? $this->services['coreshop.templating.helper.format_money'] : $this->get('coreshop.templating.helper.format_money')) && false ?: '_'}));
        $instance->addExtension(new \CoreShop\Bundle\MoneyBundle\Twig\ConvertMoneyExtension(${($_ = isset($this->services['coreshop.templating.helper.convert_money']) ? $this->services['coreshop.templating.helper.convert_money'] : $this->get('coreshop.templating.helper.convert_money')) && false ?: '_'}));
        $instance->addExtension(new \CoreShop\Bundle\AddressBundle\Twig\FormatAddressExtension(${($_ = isset($this->services['coreshop.templating.helper.format_address']) ? $this->services['coreshop.templating.helper.format_address'] : $this->get('coreshop.templating.helper.format_address')) && false ?: '_'}));
        $instance->addExtension(new \CoreShop\Bundle\CurrencyBundle\Twig\CurrencyExtension(${($_ = isset($this->services['coreshop.templating.helper.currency']) ? $this->services['coreshop.templating.helper.currency'] : $this->get('coreshop.templating.helper.currency')) && false ?: '_'}));
        $instance->addExtension(${($_ = isset($this->services['coreshop.twig.extension.price']) ? $this->services['coreshop.twig.extension.price'] : $this->get('coreshop.twig.extension.price')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['coreshop.twig.extension.discount']) ? $this->services['coreshop.twig.extension.discount'] : $this->get('coreshop.twig.extension.discount')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['zurb_ink.inlinecss.twig']) ? $this->services['zurb_ink.inlinecss.twig'] : $this->get('zurb_ink.inlinecss.twig')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['zurb_ink.inky.twig']) ? $this->services['zurb_ink.inky.twig'] : $this->get('zurb_ink.inky.twig')) && false ?: '_'});
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension(${($_ = isset($this->services['twig.profile']) ? $this->services['twig.profile'] : $this->get('twig.profile')) && false ?: '_'}, $a));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(${($_ = isset($this->services['assets.packages']) ? $this->services['assets.packages'] : $this->get('assets.packages')) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension($b, ($this->targetDirs[3].'/app'), 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router')) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($a, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($c, ${($_ = isset($this->services['pimcore.routing.router.request_context']) ? $this->services['pimcore.routing.router.request_context'] : $this->get('pimcore.routing.router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}));
        $instance->addExtension(new \Twig\Extension\DebugExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(array(0 => $this, 1 => 'twig.form.renderer')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\WebLinkExtension($c));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\DumpExtension(${($_ = isset($this->services['var_dumper.cloner']) ? $this->services['var_dumper.cloner'] : $this->get('var_dumper.cloner')) && false ?: '_'}, $d));
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension($e));
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.helpers']) ? $this->services['pimcore.twig.extension.helpers'] : $this->get('pimcore.twig.extension.helpers')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.document_tag']) ? $this->services['pimcore.twig.extension.document_tag'] : $this->get('pimcore.twig.extension.document_tag')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.subrequest']) ? $this->services['pimcore.twig.extension.subrequest'] : $this->get('pimcore.twig.extension.subrequest')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.pimcore_object']) ? $this->services['pimcore.twig.extension.pimcore_object'] : $this->get('pimcore.twig.extension.pimcore_object')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.templating_helper']) ? $this->services['pimcore.twig.extension.templating_helper'] : $this->get('pimcore.twig.extension.templating_helper')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.navigation']) ? $this->services['pimcore.twig.extension.navigation'] : $this->get('pimcore.twig.extension.navigation')) && false ?: '_'});
        $instance->addExtension(${($_ = isset($this->services['pimcore.twig.extension.glossary']) ? $this->services['pimcore.twig.extension.glossary'] : $this->get('pimcore.twig.extension.glossary')) && false ?: '_'});
        $instance->addExtension(new \Pimcore\Twig\Extension\WebsiteConfigExtension());
        $instance->addExtension(new \Phive\Twig\Extensions\Deferred\DeferredExtension());
        $instance->addGlobal('app', $f);
        $instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\ServiceLocator(array('JMS\\Serializer\\Twig\\SerializerRuntimeHelper' => function () {
            return ${($_ = isset($this->services['jms_serializer.twig_extension.serializer_runtime_helper']) ? $this->services['jms_serializer.twig_extension.serializer_runtime_helper'] : $this->get('jms_serializer.twig_extension.serializer_runtime_helper')) && false ?: '_'};
        }, 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => function () {
            return ${($_ = isset($this->services['twig.runtime.httpkernel']) ? $this->services['twig.runtime.httpkernel'] : $this->get('twig.runtime.httpkernel')) && false ?: '_'};
        }, 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer' => function () {
            return ${($_ = isset($this->services['twig.form.renderer']) ? $this->services['twig.form.renderer'] : $this->get('twig.form.renderer')) && false ?: '_'};
        }))));
        $instance->addGlobal('container', $this);
        $instance->addGlobal('coreshop', ${($_ = isset($this->services['coreshop.context.shopper']) ? $this->services['coreshop.context.shopper'] : $this->get('coreshop.context.shopper')) && false ?: '_'});
        (new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'twig.controller.exception' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\ExceptionController
     */
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController(${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, true);
    }

    /**
     * Gets the public 'twig.controller.preview_error' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController
     */
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController(${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->get('http_kernel')) && false ?: '_'}, 'twig.controller.exception:showAction');
    }

    /**
     * Gets the public 'twig.exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ExceptionListener
     */
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('twig.controller.exception:showAction', ${($_ = isset($this->services['monolog.logger.request']) ? $this->services['monolog.logger.request'] : $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'twig.form.renderer' shared service.
     *
     * @return \Symfony\Bridge\Twig\Form\TwigRenderer
     */
    protected function getTwig_Form_RendererService()
    {
        return $this->services['twig.form.renderer'] = new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig'), ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}), ${($_ = isset($this->services['security.csrf.token_manager']) ? $this->services['security.csrf.token_manager'] : $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'twig.loader' shared service.
     *
     * @return \Liip\ThemeBundle\Twig\Loader\FilesystemLoader
     */
    protected function getTwig_LoaderService()
    {
        $this->services['twig.loader'] = $instance = new \Liip\ThemeBundle\Twig\Loader\FilesystemLoader(${($_ = isset($this->services['templating.locator']) ? $this->services['templating.locator'] : $this->get('templating.locator')) && false ?: '_'}, ${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : $this->get('templating.name_parser')) && false ?: '_'}, $this->targetDirs[3]);

        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle/Resources/views'), 'CoreShopOrder');
        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/views'), 'CoreShopAddress');
        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/views'), 'CoreShopStore');
        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TrackingBundle/Resources/views'), 'CoreShopTracking');
        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FrontendBundle/Resources/views'), 'CoreShopFrontend');
        $instance->addPath(($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/views'), 'CoreShopCore');
        $instance->addPath(($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/views'), 'Payum');
        $instance->addPath(($this->targetDirs[3].'/vendor/hampe/zurb-ink-bundle/Hampe/Bundle/ZurbInkBundle/Resources/views'), 'HampeZurbInk');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), 'Framework');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), 'Security');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views'), 'Twig');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath(($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views'), 'Debug');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views'), 'WebProfiler');
        $instance->addPath(($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/CoreBundle/Resources/views'), 'PimcoreCore');
        $instance->addPath(($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/AdminBundle/Resources/views'), 'PimcoreAdmin');
        $instance->addPath(($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/EcommerceFrameworkBundle/Resources/views'), 'PimcoreEcommerceFramework');
        $instance->addPath(($this->targetDirs[3].'/app/Resources/views'));
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'));
        $instance->setActiveTheme(${($_ = isset($this->services['liip_theme.active_theme']) ? $this->services['liip_theme.active_theme'] : $this->get('liip_theme.active_theme')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the public 'twig.profile' shared service.
     *
     * @return \Twig\Profiler\Profile
     */
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig\Profiler\Profile();
    }

    /**
     * Gets the public 'twig.runtime.httpkernel' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelRuntime
     */
    protected function getTwig_Runtime_HttpkernelService()
    {
        return $this->services['twig.runtime.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelRuntime(${($_ = isset($this->services['fragment.handler']) ? $this->services['fragment.handler'] : $this->get('fragment.handler')) && false ?: '_'});
    }

    /**
     * Gets the public 'twig.translation.extractor' shared service.
     *
     * @return \Symfony\Bridge\Twig\Translation\TwigExtractor
     */
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor(${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'});
    }

    /**
     * Gets the public 'uri_signer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\UriSigner
     */
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('fb0cd3e33f74127cd452bcd07a52e802188c5221');
    }

    /**
     * Gets the public 'validate_request_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener
     */
    protected function getValidateRequestListenerService()
    {
        return $this->services['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener();
    }

    /**
     * Gets the public 'validator' shared service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface
     */
    protected function getValidatorService()
    {
        return $this->services['validator'] = ${($_ = isset($this->services['validator.builder']) ? $this->services['validator.builder'] : $this->get('validator.builder')) && false ?: '_'}->getValidator();
    }

    /**
     * Gets the public 'validator.builder' shared service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilderInterface
     */
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\ServiceLocator(array('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => function () {
            return ${($_ = isset($this->services['doctrine.orm.validator.unique']) ? $this->services['doctrine.orm.validator.unique'] : $this->get('doctrine.orm.validator.unique')) && false ?: '_'};
        }, 'Symfony\\Cmf\\Bundle\\RoutingBundle\\Validator\\Constraints\\RouteDefaultsTemplatingValidator' => function () {
            return ${($_ = isset($this->services['cmf_routing.validator.route_defaults']) ? $this->services['cmf_routing.validator.route_defaults'] : $this->get('cmf_routing.validator.route_defaults')) && false ?: '_'};
        }, 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => function () {
            return ${($_ = isset($this->services['security.validator.user_password']) ? $this->services['security.validator.user_password'] : $this->get('security.validator.user_password')) && false ?: '_'};
        }, 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => function () {
            return ${($_ = isset($this->services['validator.email']) ? $this->services['validator.email'] : $this->get('validator.email')) && false ?: '_'};
        }, 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => function () {
            return ${($_ = isset($this->services['validator.expression']) ? $this->services['validator.expression'] : $this->get('validator.expression')) && false ?: '_'};
        }, 'cmf_routing.validator.route_defaults' => function () {
            return ${($_ = isset($this->services['cmf_routing.validator.route_defaults']) ? $this->services['cmf_routing.validator.route_defaults'] : $this->get('cmf_routing.validator.route_defaults')) && false ?: '_'};
        }, 'doctrine.orm.validator.unique' => function () {
            return ${($_ = isset($this->services['doctrine.orm.validator.unique']) ? $this->services['doctrine.orm.validator.unique'] : $this->get('doctrine.orm.validator.unique')) && false ?: '_'};
        }, 'security.validator.user_password' => function () {
            return ${($_ = isset($this->services['security.validator.user_password']) ? $this->services['security.validator.user_password'] : $this->get('security.validator.user_password')) && false ?: '_'};
        }, 'validator.expression' => function () {
            return ${($_ = isset($this->services['validator.expression']) ? $this->services['validator.expression'] : $this->get('validator.expression')) && false ?: '_'};
        }))));
        $instance->setTranslator(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'});
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml'), 1 => ($this->targetDirs[3].'/vendor/payum/payum-bundle/Resources/config/validation.xml')));
        $instance->addYamlMappings(array(0 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/config/validation/ProductSpecificPriceRule.yml'), 1 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle/Resources/config/validation/ProductPriceRule.yml'), 2 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/Zone.yml'), 3 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/StateTranslation.yml'), 4 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/State.yml'), 5 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/Address.yml'), 6 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/CountryTranslation.yml'), 7 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle/Resources/config/validation/Country.yml'), 8 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/config/validation/Currency.yml'), 9 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle/Resources/config/validation/ExchangeRate.yml'), 10 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/validation/TaxRuleGroup.yml'), 11 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/validation/TaxRate.yml'), 12 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/validation/TaxRateTranslation.yml'), 13 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle/Resources/config/validation/TaxRule.yml'), 14 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle/Resources/config/validation/Store.yml'), 15 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/validation/IndexColumn.yml'), 16 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/validation/Filter.yml'), 17 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/validation/Index.yml'), 18 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle/Resources/config/validation/FilterCondition.yml'), 19 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/validation/Carrier.yml'), 20 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/validation/ShippingRuleGroup.yml'), 21 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle/Resources/config/validation/ShippingRule.yml'), 22 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle/Resources/config/validation/NotificationRule.yml'), 23 => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle/Resources/config/validation/Store.yml')));
        $instance->enableAnnotationMapping(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'});
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers(array(0 => ${($_ = isset($this->services['doctrine.orm.validator_initializer']) ? $this->services['doctrine.orm.validator_initializer'] : $this->get('doctrine.orm.validator_initializer')) && false ?: '_'}));

        return $instance;
    }

    /**
     * Gets the public 'validator.email' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator
     */
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }

    /**
     * Gets the public 'validator.expression' shared service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator
     */
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator();
    }

    /**
     * Gets the public 'var_dumper.cli_dumper' shared service.
     *
     * @return \Symfony\Component\VarDumper\Dumper\CliDumper
     */
    protected function getVarDumper_CliDumperService()
    {
        return $this->services['var_dumper.cli_dumper'] = new \Symfony\Component\VarDumper\Dumper\CliDumper(NULL, 'UTF-8', 0);
    }

    /**
     * Gets the public 'var_dumper.cloner' shared service.
     *
     * @return \Symfony\Component\VarDumper\Cloner\VarCloner
     */
    protected function getVarDumper_ClonerService()
    {
        $this->services['var_dumper.cloner'] = $instance = new \Symfony\Component\VarDumper\Cloner\VarCloner();

        $instance->setMaxItems(2500);
        $instance->setMaxString(-1);

        return $instance;
    }

    /**
     * Gets the public 'web_profiler.controller.exception' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController
     */
    protected function getWebProfiler_Controller_ExceptionService()
    {
        return $this->services['web_profiler.controller.exception'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController(${($_ = isset($this->services['profiler']) ? $this->services['profiler'] : $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, true);
    }

    /**
     * Gets the public 'web_profiler.controller.profiler' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController
     */
    protected function getWebProfiler_Controller_ProfilerService()
    {
        return $this->services['web_profiler.controller.profiler'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController(${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['profiler']) ? $this->services['profiler'] : $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, array('Pimcore\\Bundle\\CoreBundle\\DataCollector\\PimcoreDataCollector' => array(0 => 'pimcore.data_collector', 1 => 'PimcoreCoreBundle:Profiler:data_collector.html.twig'), 'data_collector.request' => array(0 => 'request', 1 => '@WebProfiler/Collector/request.html.twig'), 'data_collector.time' => array(0 => 'time', 1 => '@WebProfiler/Collector/time.html.twig'), 'data_collector.memory' => array(0 => 'memory', 1 => '@WebProfiler/Collector/memory.html.twig'), 'data_collector.ajax' => array(0 => 'ajax', 1 => '@WebProfiler/Collector/ajax.html.twig'), 'data_collector.form' => array(0 => 'form', 1 => '@WebProfiler/Collector/form.html.twig'), 'data_collector.exception' => array(0 => 'exception', 1 => '@WebProfiler/Collector/exception.html.twig'), 'data_collector.logger' => array(0 => 'logger', 1 => '@WebProfiler/Collector/logger.html.twig'), 'data_collector.events' => array(0 => 'events', 1 => '@WebProfiler/Collector/events.html.twig'), 'data_collector.router' => array(0 => 'router', 1 => '@WebProfiler/Collector/router.html.twig'), 'data_collector.cache' => array(0 => 'cache', 1 => '@WebProfiler/Collector/cache.html.twig'), 'data_collector.translation' => array(0 => 'translation', 1 => '@WebProfiler/Collector/translation.html.twig'), 'data_collector.security' => array(0 => 'security', 1 => '@Security/Collector/security.html.twig'), 'data_collector.twig' => array(0 => 'twig', 1 => '@WebProfiler/Collector/twig.html.twig'), 'data_collector.doctrine' => array(0 => 'db', 1 => '@Doctrine/Collector/db.html.twig'), 'swiftmailer.data_collector' => array(0 => 'swiftmailer', 1 => '@Swiftmailer/Collector/swiftmailer.html.twig'), 'data_collector.dump' => array(0 => 'dump', 1 => '@Debug/Profiler/dump.html.twig'), 'coreshop.country_collector' => array(0 => 'coreshop.country_collector', 1 => 'CoreShopAddressBundle:Collector:country.html.twig'), 'coreshop.store_collector' => array(0 => 'coreshop.store_collector', 1 => 'CoreShopStoreBundle:Collector:store.html.twig'), 'coreshop.currency_collector' => array(0 => 'coreshop.currency_collector', 1 => 'CoreShopCoreBundle:Collector:currency.html.twig'), 'payum.profiler.payum_collector' => array(0 => 'payum', 1 => 'PayumBundle:Profiler:payum.html.twig'), 'data_collector.config' => array(0 => 'config', 1 => '@WebProfiler/Collector/config.html.twig')), 'bottom', ${($_ = isset($this->services['web_profiler.csp.handler']) ? $this->services['web_profiler.csp.handler'] : $this->getWebProfiler_Csp_HandlerService()) && false ?: '_'}, $this->targetDirs[3]);
    }

    /**
     * Gets the public 'web_profiler.controller.router' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\RouterController
     */
    protected function getWebProfiler_Controller_RouterService()
    {
        return $this->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController(${($_ = isset($this->services['profiler']) ? $this->services['profiler'] : $this->get('profiler', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the public 'web_profiler.debug_toolbar' shared service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\WebDebugToolbarListener
     */
    protected function getWebProfiler_DebugToolbarService()
    {
        $this->services['web_profiler.debug_toolbar'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\WebDebugToolbarListener(${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->get('twig')) && false ?: '_'}, false, 2, 'bottom', ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, '^/(app(_[\\w]+)?\\.php/)?_wdt', ${($_ = isset($this->services['web_profiler.csp.handler']) ? $this->services['web_profiler.csp.handler'] : $this->getWebProfiler_Csp_HandlerService()) && false ?: '_'});

        $instance->setRequestHelper(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'});
        $instance->setRequestMatcherFactory(${($_ = isset($this->services['pimcore.service.request_matcher_factory']) ? $this->services['pimcore.service.request_matcher_factory'] : $this->get('pimcore.service.request_matcher_factory')) && false ?: '_'});
        $instance->setExcludeRoutes(array());

        return $instance;
    }

    /**
     * Gets the public 'website_demo.area.brick.blockquote' shared autowired service.
     *
     * @return \AppBundle\Document\Areabrick\Blockquote
     */
    protected function getWebsiteDemo_Area_Brick_BlockquoteService()
    {
        $this->services['website_demo.area.brick.blockquote'] = $instance = new \AppBundle\Document\Areabrick\Blockquote();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the public 'website_demo.language_switcher' shared autowired service.
     *
     * @return \AppBundle\Templating\LanguageSwitcher
     */
    protected function getWebsiteDemo_LanguageSwitcherService()
    {
        return $this->services['website_demo.language_switcher'] = new \AppBundle\Templating\LanguageSwitcher(${($_ = isset($this->services['Pimcore\Model\Document\Service']) ? $this->services['Pimcore\Model\Document\Service'] : $this->get('Pimcore\Model\Document\Service')) && false ?: '_'});
    }

    /**
     * Gets the public 'website_demo.security.password_encoder_factory' shared autowired service.
     *
     * @return \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory
     */
    protected function getWebsiteDemo_Security_PasswordEncoderFactoryService()
    {
        return $this->services['website_demo.security.password_encoder_factory'] = new \Pimcore\Security\Encoder\Factory\UserAwareEncoderFactory('Pimcore\\Security\\Encoder\\PasswordFieldEncoder', array(0 => 'password'));
    }

    /**
     * Gets the public 'website_demo.security.user_provider' shared autowired service.
     *
     * @return \Pimcore\Security\User\ObjectUserProvider
     */
    protected function getWebsiteDemo_Security_UserProviderService()
    {
        return $this->services['website_demo.security.user_provider'] = new \Pimcore\Security\User\ObjectUserProvider('AppBundle\\Model\\DataObject\\User');
    }

    /**
     * Gets the public 'zurb_ink.inky' shared service.
     *
     * @return \Hampe\Inky\Inky
     */
    protected function getZurbInk_InkyService()
    {
        return $this->services['zurb_ink.inky'] = new \Hampe\Inky\Inky(12, array());
    }

    /**
     * Gets the public 'zurb_ink.inky.twig' shared service.
     *
     * @return \Hampe\Bundle\ZurbInkBundle\Twig\InkyExtension
     */
    protected function getZurbInk_Inky_TwigService()
    {
        return $this->services['zurb_ink.inky.twig'] = new \Hampe\Bundle\ZurbInkBundle\Twig\InkyExtension(${($_ = isset($this->services['zurb_ink.inky']) ? $this->services['zurb_ink.inky'] : $this->get('zurb_ink.inky')) && false ?: '_'});
    }

    /**
     * Gets the public 'zurb_ink.inlinecss' shared service.
     *
     * @return \Hampe\Bundle\ZurbInkBundle\Service\InlineCss
     */
    protected function getZurbInk_InlinecssService()
    {
        return $this->services['zurb_ink.inlinecss'] = new \Hampe\Bundle\ZurbInkBundle\Service\InlineCss();
    }

    /**
     * Gets the public 'zurb_ink.inlinecss.twig' shared service.
     *
     * @return \Hampe\Bundle\ZurbInkBundle\Twig\InlineCssExtension
     */
    protected function getZurbInk_Inlinecss_TwigService()
    {
        return $this->services['zurb_ink.inlinecss.twig'] = new \Hampe\Bundle\ZurbInkBundle\Twig\InlineCssExtension(${($_ = isset($this->services['zurb_ink.inlinecss']) ? $this->services['zurb_ink.inlinecss'] : $this->get('zurb_ink.inlinecss')) && false ?: '_'}, ${($_ = isset($this->services['file_locator']) ? $this->services['file_locator'] : $this->get('file_locator')) && false ?: '_'});
    }

    /**
     * Gets the public '‌coreshop.listeners.index.post_save' shared service.
     *
     * @return \CoreShop\Bundle\IndexBundle\EventListener\CreateIndexListener
     */
    protected function get‌coreshop_Listeners_Index_PostSaveService()
    {
        return $this->services['‌coreshop.listeners.index.post_save'] = new \CoreShop\Bundle\IndexBundle\EventListener\CreateIndexListener(${($_ = isset($this->services['coreshop.registry.index.worker']) ? $this->services['coreshop.registry.index.worker'] : $this->get('coreshop.registry.index.worker')) && false ?: '_'});
    }

    /**
     * Gets the public '‌coreshop.listeners.notification_rule.pre_create' shared service.
     *
     * @return \CoreShop\Bundle\NotificationBundle\EventListener\NotificationRuleEventListener
     */
    protected function get‌coreshop_Listeners_NotificationRule_PreCreateService()
    {
        return $this->services['‌coreshop.listeners.notification_rule.pre_create'] = new \CoreShop\Bundle\NotificationBundle\EventListener\NotificationRuleEventListener(${($_ = isset($this->services['coreshop.repository.notification_rule']) ? $this->services['coreshop.repository.notification_rule'] : $this->get('coreshop.repository.notification_rule')) && false ?: '_'});
    }

    /**
     * Gets the private '1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker
     */
    protected function get113bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService()
    {
        return $this->services['1_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e'] = new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($this);
    }

    /**
     * Gets the private '2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e' shared service.
     *
     * @return \Symfony\Component\Config\Resource\SelfCheckingResourceChecker
     */
    protected function get213bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582eService()
    {
        return $this->services['2_13bc7fc838d255dcd08e17fbe6024fb73aca0b213d980b36627f7cec15d3582e'] = new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker();
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_AdminAuthenticationDoubleCheckListenerService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener'] = new \Pimcore\Bundle\AdminBundle\EventListener\AdminAuthenticationDoubleCheckListener(${($_ = isset($this->services['pimcore.service.request_matcher_factory']) ? $this->services['pimcore.service.request_matcher_factory'] : $this->get('pimcore.service.request_matcher_factory')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver')) && false ?: '_'}, array(0 => array('route' => 'pimcore_admin_login', 'path' => false, 'host' => false, 'methods' => array()), 1 => array('route' => 'pimcore_admin_webdav', 'path' => false, 'host' => false, 'methods' => array())));
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_AdminExceptionListenerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener'] = $instance = new \Pimcore\Bundle\AdminBundle\EventListener\AdminExceptionListener();

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_BruteforceProtectionListenerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener'] = $instance = new \Pimcore\Bundle\AdminBundle\EventListener\BruteforceProtectionListener(${($_ = isset($this->services['pimcore_admin.security.bruteforce_protection_handler']) ? $this->services['pimcore_admin.security.bruteforce_protection_handler'] : $this->get('pimcore_admin.security.bruteforce_protection_handler')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_HttpCacheListenerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener'] = $instance = new \Pimcore\Bundle\AdminBundle\EventListener\HttpCacheListener(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_UsageStatisticsListenerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener'] = $instance = new \Pimcore\Bundle\AdminBundle\EventListener\UsageStatisticsListener(${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener
     */
    protected function getPimcore_Bundle_AdminBundle_EventListener_UserPerspectiveListenerService()
    {
        $this->services['Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener'] = $instance = new \Pimcore\Bundle\AdminBundle\EventListener\UserPerspectiveListener(${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\TokenStorageUserResolver')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.admin']) ? $this->services['monolog.logger.admin'] : $this->get('monolog.logger.admin')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator
     */
    protected function getPimcore_Bundle_AdminBundle_Session_AdminSessionBagConfiguratorService()
    {
        return $this->services['Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator'] = new \Pimcore\Bundle\AdminBundle\Session\AdminSessionBagConfigurator(array('pimcore_admin' => array('storage_key' => '_pimcore_admin'), 'pimcore_documents' => array('storage_key' => '_pimcore_documents'), 'pimcore_objects' => array('storage_key' => '_pimcore_objects'), 'pimcore_copy' => array('storage_key' => '_pimcore_copy'), 'pimcore_backup' => array('storage_key' => '_pimcore_backup')));
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_ControllerViewModelListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\ControllerViewModelListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\ViewModelResolver']) ? $this->services['Pimcore\Http\Request\Resolver\ViewModelResolver'] : $this->get('Pimcore\Http\Request\Resolver\ViewModelResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_ElementTagsListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\ElementTagsListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_EventedControllerListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\EventedControllerListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_BlockStateListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\BlockStateListener(${($_ = isset($this->services['Pimcore\Document\Tag\Block\BlockStateStack']) ? $this->services['Pimcore\Document\Tag\Block\BlockStateStack'] : $this->get('Pimcore\Document\Tag\Block\BlockStateStack')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_ContentTemplateListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\ContentTemplateListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\TemplateResolver']) ? $this->services['Pimcore\Http\Request\Resolver\TemplateResolver'] : $this->get('Pimcore\Http\Request\Resolver\TemplateResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentFallbackListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentFallbackListener(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\SiteResolver']) ? $this->services['Pimcore\Http\Request\Resolver\SiteResolver'] : $this->get('Pimcore\Http\Request\Resolver\SiteResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Model\Document\Service']) ? $this->services['Pimcore\Model\Document\Service'] : $this->get('Pimcore\Model\Document\Service')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_DocumentMetaDataListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\DocumentMetaDataListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Templating\Helper\HeadMeta']) ? $this->services['Pimcore\Templating\Helper\HeadMeta'] : $this->get('Pimcore\Templating\Helper\HeadMeta')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_EditmodeListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\EditmodeListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserLoader')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Extension\Bundle\PimcoreBundleManager']) ? $this->services['Pimcore\Extension\Bundle\PimcoreBundleManager'] : $this->get('Pimcore\Extension\Bundle\PimcoreBundleManager')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_ElementListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\ElementListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserLoader'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserLoader')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['monolog.logger.init']) ? $this->services['monolog.logger.init'] : $this->get('monolog.logger.init')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_FrontendRoutingListenerService()
    {
        $a = new \Pimcore\Routing\RedirectHandler();
        $a->setLogger(${($_ = isset($this->services['monolog.logger.routing']) ? $this->services['monolog.logger.routing'] : $this->get('monolog.logger.routing')) && false ?: '_'});

        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\FrontendRoutingListener(${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, $a, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\SiteResolver']) ? $this->services['Pimcore\Http\Request\Resolver\SiteResolver'] : $this->get('Pimcore\Http\Request\Resolver\SiteResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_GoogleSearchConsoleVerificationListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\GoogleSearchConsoleVerificationListener();

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_HardlinkCanonicalListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\HardlinkCanonicalListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'});

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_InternalWysiwygHtmlAttributeFilterListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\InternalWysiwygHtmlAttributeFilterListener();

        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_Frontend_LocaleListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\Frontend\LocaleListener();

        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_MaintenancePageListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\MaintenancePageListener(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});

        $instance->loadTemplateFromResource('@PimcoreCoreBundle/Resources/misc/maintenance.html');
        $instance->setResponseHelper(${($_ = isset($this->services['Pimcore\Http\ResponseHelper']) ? $this->services['Pimcore\Http\ResponseHelper'] : $this->get('Pimcore\Http\ResponseHelper')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_PimcoreContextListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\PimcoreContextListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'});

        $instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_PimcoreHeaderListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\PimcoreHeaderListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_ResponseExceptionListenerService()
    {
        $this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener'] = $instance = new \Pimcore\Bundle\CoreBundle\EventListener\ResponseExceptionListener(${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer')) && false ?: '_'}, false);

        $instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->get('logger')) && false ?: '_'});
        $instance->setPimcoreContextResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver']) ? $this->services['Pimcore\Http\Request\Resolver\PimcoreContextResolver'] : $this->get('Pimcore\Http\Request\Resolver\PimcoreContextResolver')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_ResponseHeaderListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\ResponseHeaderListener(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\ResponseHeaderResolver']) ? $this->services['Pimcore\Http\Request\Resolver\ResponseHeaderResolver'] : $this->get('Pimcore\Http\Request\Resolver\ResponseHeaderResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_SearchBackendListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\SearchBackendListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_TemplateControllerListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\TemplateControllerListener($this);
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_TranslationDebugListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\TranslationDebugListener(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, 'pimcore_debug_translations');
    }

    /**
     * Gets the private 'Pimcore\Bundle\CoreBundle\EventListener\UUIDListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\CoreBundle\EventListener\UUIDListener
     */
    protected function getPimcore_Bundle_CoreBundle_EventListener_UUIDListenerService()
    {
        return $this->services['Pimcore\Bundle\CoreBundle\EventListener\UUIDListener'] = new \Pimcore\Bundle\CoreBundle\EventListener\UUIDListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_IndexUpdateListenerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\IndexUpdateListener();
    }

    /**
     * Gets the private 'Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener
     */
    protected function getPimcore_Bundle_EcommerceFrameworkBundle_EventListener_SystemEventsListenerService()
    {
        return $this->services['Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\EventListener\SystemEventsListener($this);
    }

    /**
     * Gets the private 'Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver' shared autowired service.
     *
     * @return \Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver
     */
    protected function getPimcore_Controller_ArgumentValueResolver_DocumentValueResolverService()
    {
        return $this->services['Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver'] = new \Pimcore\Controller\ArgumentValueResolver\DocumentValueResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\DocumentResolver']) ? $this->services['Pimcore\Http\Request\Resolver\DocumentResolver'] : $this->get('Pimcore\Http\Request\Resolver\DocumentResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver' shared autowired service.
     *
     * @return \Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver
     */
    protected function getPimcore_Controller_ArgumentValueResolver_EditmodeValueResolverService()
    {
        return $this->services['Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver'] = new \Pimcore\Controller\ArgumentValueResolver\EditmodeValueResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\EditmodeResolver']) ? $this->services['Pimcore\Http\Request\Resolver\EditmodeResolver'] : $this->get('Pimcore\Http\Request\Resolver\EditmodeResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver' shared autowired service.
     *
     * @return \Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver
     */
    protected function getPimcore_Controller_ArgumentValueResolver_TemplateVarsValueResolverService()
    {
        return $this->services['Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver'] = new \Pimcore\Controller\ArgumentValueResolver\TemplateVarsValueResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\TemplateVarsResolver']) ? $this->services['Pimcore\Http\Request\Resolver\TemplateVarsResolver'] : $this->get('Pimcore\Http\Request\Resolver\TemplateVarsResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver' shared autowired service.
     *
     * @return \Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver
     */
    protected function getPimcore_Controller_ArgumentValueResolver_ViewModelValueResolverService()
    {
        return $this->services['Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver'] = new \Pimcore\Controller\ArgumentValueResolver\ViewModelValueResolver(${($_ = isset($this->services['Pimcore\Http\Request\Resolver\ViewModelResolver']) ? $this->services['Pimcore\Http\Request\Resolver\ViewModelResolver'] : $this->get('Pimcore\Http\Request\Resolver\ViewModelResolver')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver' shared autowired service.
     *
     * @return \Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver
     */
    protected function getPimcore_Controller_ArgumentValueResolver_WebsiteConfigValueResolverService()
    {
        return $this->services['Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver'] = new \Pimcore\Controller\ArgumentValueResolver\WebsiteConfigValueResolver();
    }

    /**
     * Gets the private 'Pimcore\Navigation\Renderer\Breadcrumbs' shared autowired service.
     *
     * @return \Pimcore\Navigation\Renderer\Breadcrumbs
     */
    protected function getPimcore_Navigation_Renderer_BreadcrumbsService()
    {
        return $this->services['Pimcore\Navigation\Renderer\Breadcrumbs'] = new \Pimcore\Navigation\Renderer\Breadcrumbs(${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Navigation\Renderer\Menu' shared autowired service.
     *
     * @return \Pimcore\Navigation\Renderer\Menu
     */
    protected function getPimcore_Navigation_Renderer_MenuService()
    {
        return $this->services['Pimcore\Navigation\Renderer\Menu'] = new \Pimcore\Navigation\Renderer\Menu(${($_ = isset($this->services['fos_rest.templating']) ? $this->services['fos_rest.templating'] : $this->get('fos_rest.templating')) && false ?: '_'});
    }

    /**
     * Gets the private 'Pimcore\Routing\Dynamic\DocumentRouteHandler' shared autowired service.
     *
     * @return \Pimcore\Routing\Dynamic\DocumentRouteHandler
     */
    protected function getPimcore_Routing_Dynamic_DocumentRouteHandlerService()
    {
        return $this->services['Pimcore\Routing\Dynamic\DocumentRouteHandler'] = new \Pimcore\Routing\Dynamic\DocumentRouteHandler(${($_ = isset($this->services['Pimcore\Model\Document\Service']) ? $this->services['Pimcore\Model\Document\Service'] : $this->get('Pimcore\Model\Document\Service')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\Request\Resolver\SiteResolver']) ? $this->services['Pimcore\Http\Request\Resolver\SiteResolver'] : $this->get('Pimcore\Http\Request\Resolver\SiteResolver')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Http\RequestHelper']) ? $this->services['Pimcore\Http\RequestHelper'] : $this->get('Pimcore\Http\RequestHelper')) && false ?: '_'}, ${($_ = isset($this->services['Pimcore\Controller\Config\ConfigNormalizer']) ? $this->services['Pimcore\Controller\Config\ConfigNormalizer'] : $this->get('Pimcore\Controller\Config\ConfigNormalizer')) && false ?: '_'});
    }

    /**
     * Gets the private 'annotations.reader' shared service.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader
     */
    protected function getAnnotations_ReaderService()
    {
        $a = new \Doctrine\Common\Annotations\AnnotationRegistry();
        $a->registerLoader('class_exists');

        $this->services['annotations.reader'] = $instance = new \Doctrine\Common\Annotations\AnnotationReader();

        $instance->addGlobalIgnoredName('required', $a);

        return $instance;
    }

    /**
     * Gets the private 'argument_resolver.default' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver
     */
    protected function getArgumentResolver_DefaultService()
    {
        return $this->services['argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver();
    }

    /**
     * Gets the private 'argument_resolver.request' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver
     */
    protected function getArgumentResolver_RequestService()
    {
        return $this->services['argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver();
    }

    /**
     * Gets the private 'argument_resolver.request_attribute' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver
     */
    protected function getArgumentResolver_RequestAttributeService()
    {
        return $this->services['argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver();
    }

    /**
     * Gets the private 'argument_resolver.service' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver
     */
    protected function getArgumentResolver_ServiceService()
    {
        return $this->services['argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\ServiceLocator(array('Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController:filterLocalizedFields' => function () {
            return ${($_ = isset($this->services['service_locator.ef50b66065b1737465a2d74a13598afe']) ? $this->services['service_locator.ef50b66065b1737465a2d74a13598afe'] : $this->getServiceLocator_Ef50b66065b1737465a2d74a13598afeService()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController:performFieldcollectionModificationCheck' => function () {
            return ${($_ = isset($this->services['service_locator.f4349e8894d66f427f9ad72c699461b7']) ? $this->services['service_locator.f4349e8894d66f427f9ad72c699461b7'] : $this->getServiceLocator_F4349e8894d66f427f9ad72c699461b7Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController:renderletAction' => function () {
            return ${($_ = isset($this->services['service_locator.1df818bdbc898e0ca4257f453525a80a']) ? $this->services['service_locator.1df818bdbc898e0ca4257f453525a80a'] : $this->getServiceLocator_1df818bdbc898e0ca4257f453525a80aService()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController:checkAction' => function () {
            return ${($_ = isset($this->services['service_locator.8fbaea2dc9ce39bb09e046ce631ea329']) ? $this->services['service_locator.8fbaea2dc9ce39bb09e046ce631ea329'] : $this->getServiceLocator_8fbaea2dc9ce39bb09e046ce631ea329Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController:getAvailableActionsAction' => function () {
            return ${($_ = isset($this->services['service_locator.38c73ce8067617f669e83e499e0bd337']) ? $this->services['service_locator.38c73ce8067617f669e83e499e0bd337'] : $this->getServiceLocator_38c73ce8067617f669e83e499e0bd337Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController:getAvailableControllersAction' => function () {
            return ${($_ = isset($this->services['service_locator.38c73ce8067617f669e83e499e0bd337']) ? $this->services['service_locator.38c73ce8067617f669e83e499e0bd337'] : $this->getServiceLocator_38c73ce8067617f669e83e499e0bd337Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController:getAvailableModulesAction' => function () {
            return ${($_ = isset($this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0']) ? $this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0'] : $this->getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController:getAvailableTemplatesAction' => function () {
            return ${($_ = isset($this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0']) ? $this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0'] : $this->getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController:toggleExtensionStateAction' => function () {
            return ${($_ = isset($this->services['service_locator.83603fcf2ec2e2d8755beebb160c60e0']) ? $this->services['service_locator.83603fcf2ec2e2d8755beebb160c60e0'] : $this->getServiceLocator_83603fcf2ec2e2d8755beebb160c60e0Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController::filterLocalizedFields' => function () {
            return ${($_ = isset($this->services['service_locator.ef50b66065b1737465a2d74a13598afe']) ? $this->services['service_locator.ef50b66065b1737465a2d74a13598afe'] : $this->getServiceLocator_Ef50b66065b1737465a2d74a13598afeService()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController::performFieldcollectionModificationCheck' => function () {
            return ${($_ = isset($this->services['service_locator.f4349e8894d66f427f9ad72c699461b7']) ? $this->services['service_locator.f4349e8894d66f427f9ad72c699461b7'] : $this->getServiceLocator_F4349e8894d66f427f9ad72c699461b7Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController::renderletAction' => function () {
            return ${($_ = isset($this->services['service_locator.1df818bdbc898e0ca4257f453525a80a']) ? $this->services['service_locator.1df818bdbc898e0ca4257f453525a80a'] : $this->getServiceLocator_1df818bdbc898e0ca4257f453525a80aService()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController::checkAction' => function () {
            return ${($_ = isset($this->services['service_locator.8fbaea2dc9ce39bb09e046ce631ea329']) ? $this->services['service_locator.8fbaea2dc9ce39bb09e046ce631ea329'] : $this->getServiceLocator_8fbaea2dc9ce39bb09e046ce631ea329Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController::getAvailableActionsAction' => function () {
            return ${($_ = isset($this->services['service_locator.38c73ce8067617f669e83e499e0bd337']) ? $this->services['service_locator.38c73ce8067617f669e83e499e0bd337'] : $this->getServiceLocator_38c73ce8067617f669e83e499e0bd337Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController::getAvailableControllersAction' => function () {
            return ${($_ = isset($this->services['service_locator.38c73ce8067617f669e83e499e0bd337']) ? $this->services['service_locator.38c73ce8067617f669e83e499e0bd337'] : $this->getServiceLocator_38c73ce8067617f669e83e499e0bd337Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController::getAvailableModulesAction' => function () {
            return ${($_ = isset($this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0']) ? $this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0'] : $this->getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController::getAvailableTemplatesAction' => function () {
            return ${($_ = isset($this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0']) ? $this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0'] : $this->getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service()) && false ?: '_'};
        }, 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController::toggleExtensionStateAction' => function () {
            return ${($_ = isset($this->services['service_locator.83603fcf2ec2e2d8755beebb160c60e0']) ? $this->services['service_locator.83603fcf2ec2e2d8755beebb160c60e0'] : $this->getServiceLocator_83603fcf2ec2e2d8755beebb160c60e0Service()) && false ?: '_'};
        })));
    }

    /**
     * Gets the private 'argument_resolver.session' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver
     */
    protected function getArgumentResolver_SessionService()
    {
        return $this->services['argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver();
    }

    /**
     * Gets the private 'argument_resolver.variadic' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver
     */
    protected function getArgumentResolver_VariadicService()
    {
        return $this->services['argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver();
    }

    /**
     * Gets the private 'autowired.Pimcore\Model\DataObject\AbstractObject' shared autowired service.
     *
     * @return \Pimcore\Model\DataObject\AbstractObject
     */
    protected function getAutowired_Pimcore_Model_DataObject_AbstractObjectService()
    {
        return $this->services['autowired.Pimcore\Model\DataObject\AbstractObject'] = new \Pimcore\Model\DataObject\AbstractObject();
    }

    /**
     * Gets the private 'autowired.Pimcore\Model\DataObject\Concrete' shared autowired service.
     *
     * @return \Pimcore\Model\DataObject\Concrete
     */
    protected function getAutowired_Pimcore_Model_DataObject_ConcreteService()
    {
        return $this->services['autowired.Pimcore\Model\DataObject\Concrete'] = new \Pimcore\Model\DataObject\Concrete();
    }

    /**
     * Gets the private 'cache.annotations' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected function getCache_AnnotationsService()
    {
        return $this->services['cache.annotations'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(${($_ = isset($this->services['cache.annotations.recorder_inner']) ? $this->services['cache.annotations.recorder_inner'] : $this->getCache_Annotations_RecorderInnerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.annotations.recorder_inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_Annotations_RecorderInnerService($lazyLoad = true)
    {
        return $this->services['cache.annotations.recorder_inner'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('HrwYEqnQ4n', 0, 'bthqSirMD0NDqlvjjteYP4', (__DIR__.'/pools'), ${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.app.recorder_inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter
     */
    public function getCache_App_RecorderInnerService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['cache.app.recorder_inner'] = SymfonyComponentCacheAdapterFilesystemAdapter_0000000051554ee7000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f::staticProxyConstructor(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getCache_App_RecorderInnerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('ECeoiKe04N', 0, (__DIR__.'/pools'));

        if ($this->has('monolog.logger.cache')) {
            $instance->setLogger(${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }

        return $instance;
    }

    /**
     * Gets the private 'cache.serializer' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected function getCache_SerializerService()
    {
        return $this->services['cache.serializer'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(${($_ = isset($this->services['cache.serializer.recorder_inner']) ? $this->services['cache.serializer.recorder_inner'] : $this->getCache_Serializer_RecorderInnerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.serializer.recorder_inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_Serializer_RecorderInnerService($lazyLoad = true)
    {
        return $this->services['cache.serializer.recorder_inner'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('kshr2b1Lis', 0, 'bthqSirMD0NDqlvjjteYP4', (__DIR__.'/pools'), ${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.system.recorder_inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_System_RecorderInnerService($lazyLoad = true)
    {
        return $this->services['cache.system.recorder_inner'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('yM-F0sKzv5', 0, 'bthqSirMD0NDqlvjjteYP4', (__DIR__.'/pools'), ${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.validator' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\TraceableAdapter
     */
    protected function getCache_ValidatorService()
    {
        return $this->services['cache.validator'] = new \Symfony\Component\Cache\Adapter\TraceableAdapter(${($_ = isset($this->services['cache.validator.recorder_inner']) ? $this->services['cache.validator.recorder_inner'] : $this->getCache_Validator_RecorderInnerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'cache.validator.recorder_inner' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_Validator_RecorderInnerService($lazyLoad = true)
    {
        return $this->services['cache.validator.recorder_inner'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('X1MP422J2T', 0, 'bthqSirMD0NDqlvjjteYP4', (__DIR__.'/pools'), ${($_ = isset($this->services['monolog.logger.cache']) ? $this->services['monolog.logger.cache'] : $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'console.error_listener' shared service.
     *
     * @return \Symfony\Component\Console\EventListener\ErrorListener
     */
    protected function getConsole_ErrorListenerService()
    {
        return $this->services['console.error_listener'] = new \Symfony\Component\Console\EventListener\ErrorListener(${($_ = isset($this->services['monolog.logger.console']) ? $this->services['monolog.logger.console'] : $this->get('monolog.logger.console', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'controller_name_converter' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser
     */
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'});
    }

    /**
     * Gets the private 'coreshop.resource_controller.event_dispatcher' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\EventDispatcher
     */
    protected function getCoreshop_ResourceController_EventDispatcherService()
    {
        return $this->services['coreshop.resource_controller.event_dispatcher'] = new \CoreShop\Bundle\ResourceBundle\Controller\EventDispatcher(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});
    }

    /**
     * Gets the private 'coreshop.resource_controller.view_handler' shared service.
     *
     * @return \CoreShop\Bundle\ResourceBundle\Controller\ViewHandler
     */
    protected function getCoreshop_ResourceController_ViewHandlerService()
    {
        return $this->services['coreshop.resource_controller.view_handler'] = new \CoreShop\Bundle\ResourceBundle\Controller\ViewHandler(${($_ = isset($this->services['jms_serializer']) ? $this->services['jms_serializer'] : $this->get('jms_serializer')) && false ?: '_'});
    }

    /**
     * Gets the private 'coreshop.transformer.event_dispatcher' shared service.
     *
     * @return \CoreShop\Bundle\OrderBundle\Transformer\TransformerEventDispatcher
     */
    protected function getCoreshop_Transformer_EventDispatcherService()
    {
        return $this->services['coreshop.transformer.event_dispatcher'] = new \CoreShop\Bundle\OrderBundle\Transformer\TransformerEventDispatcher(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});
    }

    /**
     * Gets the private 'debug.file_link_formatter' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\FileLinkFormatter
     */
    protected function getDebug_FileLinkFormatterService()
    {
        return $this->services['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, $this->targetDirs[3], '/_profiler/open?file=%f&line=%l#line%l');
    }

    /**
     * Gets the private 'debug.log_processor' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Processor\DebugProcessor
     */
    protected function getDebug_LogProcessorService()
    {
        return $this->services['debug.log_processor'] = new \Symfony\Bridge\Monolog\Processor\DebugProcessor();
    }

    /**
     * Gets the private 'debug.security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager
     */
    protected function getDebug_Security_Access_DecisionManagerService()
    {
        return $this->services['debug.security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager(new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['security.access.authenticated_voter']) ? $this->services['security.access.authenticated_voter'] : $this->getSecurity_Access_AuthenticatedVoterService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['security.access.role_hierarchy_voter']) ? $this->services['security.access.role_hierarchy_voter'] : $this->getSecurity_Access_RoleHierarchyVoterService()) && false ?: '_'};
            yield 2 => ${($_ = isset($this->services['security.access.expression_voter']) ? $this->services['security.access.expression_voter'] : $this->getSecurity_Access_ExpressionVoterService()) && false ?: '_'};
        }, 3), 'affirmative', false, true));
    }

    /**
     * Gets the private 'doctrine.dbal.logger.profiling.default' shared service.
     *
     * @return \Doctrine\DBAL\Logging\DebugStack
     */
    protected function getDoctrine_Dbal_Logger_Profiling_DefaultService()
    {
        return $this->services['doctrine.dbal.logger.profiling.default'] = new \Doctrine\DBAL\Logging\DebugStack();
    }

    /**
     * Gets the private 'form.type.choice' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ChoiceType
     */
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType(new \Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator(new \Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator(new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory(), ${($_ = isset($this->services['property_accessor']) ? $this->services['property_accessor'] : $this->get('property_accessor')) && false ?: '_'})));
    }

    /**
     * Gets the private 'form.type.form' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FormType
     */
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType(${($_ = isset($this->services['property_accessor']) ? $this->services['property_accessor'] : $this->get('property_accessor')) && false ?: '_'});
    }

    /**
     * Gets the private 'form.type_extension.csrf' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension
     */
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension(${($_ = isset($this->services['security.csrf.token_manager']) ? $this->services['security.csrf.token_manager'] : $this->get('security.csrf.token_manager')) && false ?: '_'}, true, '_token', ${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, 'validators', new \Symfony\Component\Form\Util\ServerParams(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack')) && false ?: '_'}));
    }

    /**
     * Gets the private 'form.type_extension.form.data_collector' shared service.
     *
     * @return \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension
     */
    protected function getForm_TypeExtension_Form_DataCollectorService()
    {
        return $this->services['form.type_extension.form.data_collector'] = new \Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension(${($_ = isset($this->services['data_collector.form']) ? $this->services['data_collector.form'] : $this->get('data_collector.form')) && false ?: '_'});
    }

    /**
     * Gets the private 'form.type_extension.form.http_foundation' shared service.
     *
     * @return \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension
     */
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \CoreShop\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler());
    }

    /**
     * Gets the private 'form.type_extension.form.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension
     */
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension(${($_ = isset($this->services['validator']) ? $this->services['validator'] : $this->get('validator')) && false ?: '_'});
    }

    /**
     * Gets the private 'form.type_extension.repeated.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension
     */
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }

    /**
     * Gets the private 'form.type_extension.submit.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension
     */
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }

    /**
     * Gets the private 'form.type_extension.upload.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension
     */
    protected function getForm_TypeExtension_Upload_ValidatorService()
    {
        return $this->services['form.type_extension.upload.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension(${($_ = isset($this->services['Pimcore\Translation\Translator']) ? $this->services['Pimcore\Translation\Translator'] : $this->get('Pimcore\Translation\Translator')) && false ?: '_'}, 'validators');
    }

    /**
     * Gets the private 'form.type_guesser.validator' shared service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser
     */
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser(${($_ = isset($this->services['validator']) ? $this->services['validator'] : $this->get('validator')) && false ?: '_'});
    }

    /**
     * Gets the private 'fos_rest.request.param_fetcher.reader' shared service.
     *
     * @return \FOS\RestBundle\Request\ParamReader
     */
    protected function getFosRest_Request_ParamFetcher_ReaderService()
    {
        return $this->services['fos_rest.request.param_fetcher.reader'] = new \FOS\RestBundle\Request\ParamReader(${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->get('annotation_reader')) && false ?: '_'});
    }

    /**
     * Gets the private 'fos_rest.serializer.jms_handler_registry' shared service.
     *
     * @return \JMS\Serializer\Handler\LazyHandlerRegistry
     */
    protected function getFosRest_Serializer_JmsHandlerRegistryService()
    {
        return $this->services['fos_rest.serializer.jms_handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(1 => array('relation' => array('json' => array(0 => 'coreshop.jms_serializer.handler.relation', 1 => 'serializeRelation')), 'relation<?>' => array('json' => array(0 => 'coreshop.jms_serializer.handler.relation', 1 => 'serializeRelation')), 'object' => array('json' => array(0 => 'coreshop.jms_serializer.handler.object', 1 => 'serializeRelation')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateTimeImmutable' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml'))), 2 => array('relation' => array('json' => array(0 => 'coreshop.jms_serializer.handler.relation', 1 => 'deserializeRelation')), 'relation<?>' => array('json' => array(0 => 'coreshop.jms_serializer.handler.relation', 1 => 'deserializeRelation')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'DateTimeImmutable' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromyml')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap')))));
    }

    /**
     * Gets the private 'monolog.processor.psr_log_message' shared service.
     *
     * @return \Monolog\Processor\PsrLogMessageProcessor
     */
    protected function getMonolog_Processor_PsrLogMessageService()
    {
        return $this->services['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor();
    }

    /**
     * Gets the private 'pimcore_admin.serializer.encoder.json' shared autowired service.
     *
     * @return \Symfony\Component\Serializer\Encoder\JsonEncoder
     */
    protected function getPimcoreAdmin_Serializer_Encoder_JsonService()
    {
        return $this->services['pimcore_admin.serializer.encoder.json'] = new \Symfony\Component\Serializer\Encoder\JsonEncoder();
    }

    /**
     * Gets the private 'pimcore_admin.serializer.normalizer.reference_loop' shared autowired service.
     *
     * @return \Pimcore\Bundle\AdminBundle\Serializer\Normalizer\ReferenceLoopNormalizer
     */
    protected function getPimcoreAdmin_Serializer_Normalizer_ReferenceLoopService()
    {
        return $this->services['pimcore_admin.serializer.normalizer.reference_loop'] = new \Pimcore\Bundle\AdminBundle\Serializer\Normalizer\ReferenceLoopNormalizer();
    }

    /**
     * Gets the private 'pimcore_ecommerce.checkout_manager.default.commit_order_processor' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CommitOrderProcessor
     */
    protected function getPimcoreEcommerce_CheckoutManager_Default_CommitOrderProcessorService()
    {
        return $this->services['pimcore_ecommerce.checkout_manager.default.commit_order_processor'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CommitOrderProcessor(${($_ = isset($this->services['pimcore_ecommerce.locator.order_manager']) ? $this->services['pimcore_ecommerce.locator.order_manager'] : $this->get('pimcore_ecommerce.locator.order_manager')) && false ?: '_'});
    }

    /**
     * Gets the private 'pimcore_ecommerce.checkout_manager.default.factory' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CheckoutManagerFactory
     */
    protected function getPimcoreEcommerce_CheckoutManager_Default_FactoryService()
    {
        return $this->services['pimcore_ecommerce.checkout_manager.default.factory'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\CheckoutManager\CheckoutManagerFactory(${($_ = isset($this->services['pimcore_ecommerce.environment']) ? $this->services['pimcore_ecommerce.environment'] : $this->get('pimcore_ecommerce.environment')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.order_manager']) ? $this->services['pimcore_ecommerce.locator.order_manager'] : $this->get('pimcore_ecommerce.locator.order_manager')) && false ?: '_'}, ${($_ = isset($this->services['pimcore_ecommerce.locator.checkout_manager.commit_order_processor']) ? $this->services['pimcore_ecommerce.locator.checkout_manager.commit_order_processor'] : $this->get('pimcore_ecommerce.locator.checkout_manager.commit_order_processor')) && false ?: '_'}, array(), NULL);
    }

    /**
     * Gets the private 'pimcore_ecommerce.filter_service.default' shared autowired service.
     *
     * @return \Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterService
     */
    protected function getPimcoreEcommerce_FilterService_DefaultService()
    {
        return $this->services['pimcore_ecommerce.filter_service.default'] = new \Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterService(new \Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterGroupHelper(), array());
    }

    /**
     * Gets the private 'resolve_controller_name_subscriber' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber
     */
    protected function getResolveControllerNameSubscriberService()
    {
        return $this->services['resolve_controller_name_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber(${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->getControllerNameConverterService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.access.authenticated_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter
     */
    protected function getSecurity_Access_AuthenticatedVoterService()
    {
        return $this->services['security.access.authenticated_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter(${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.access.expression_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter
     */
    protected function getSecurity_Access_ExpressionVoterService()
    {
        return $this->services['security.access.expression_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'}, ${($_ = isset($this->services['security.role_hierarchy']) ? $this->services['security.role_hierarchy'] : $this->getSecurity_RoleHierarchyService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.access.role_hierarchy_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter
     */
    protected function getSecurity_Access_RoleHierarchyVoterService()
    {
        return $this->services['security.access.role_hierarchy_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter(${($_ = isset($this->services['security.role_hierarchy']) ? $this->services['security.role_hierarchy'] : $this->getSecurity_RoleHierarchyService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.access_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AccessListener
     */
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'}, ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, ${($_ = isset($this->services['security.access_map']) ? $this->services['security.access_map'] : $this->getSecurity_AccessMapService()) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login$'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login/(login|lostpassword|deeplink)$'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin'), array(0 => 'ROLE_PIMCORE_USER'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/webservice'), array(0 => 'ROLE_PIMCORE_USER'), NULL);

        return $instance;
    }

    /**
     * Gets the private 'security.authentication.manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager
     */
    protected function getSecurity_Authentication_ManagerService()
    {
        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['security.authentication.provider.dao.admin_webdav']) ? $this->services['security.authentication.provider.dao.admin_webdav'] : $this->getSecurity_Authentication_Provider_Dao_AdminWebdavService()) && false ?: '_'};
            yield 1 => ${($_ = isset($this->services['security.authentication.provider.guard.admin']) ? $this->services['security.authentication.provider.guard.admin'] : $this->getSecurity_Authentication_Provider_Guard_AdminService()) && false ?: '_'};
            yield 2 => ${($_ = isset($this->services['security.authentication.provider.anonymous.admin']) ? $this->services['security.authentication.provider.anonymous.admin'] : $this->getSecurity_Authentication_Provider_Anonymous_AdminService()) && false ?: '_'};
            yield 3 => ${($_ = isset($this->services['security.authentication.provider.guard.webservice']) ? $this->services['security.authentication.provider.guard.webservice'] : $this->getSecurity_Authentication_Provider_Guard_WebserviceService()) && false ?: '_'};
            yield 4 => ${($_ = isset($this->services['security.authentication.provider.dao.demo_cms_fw']) ? $this->services['security.authentication.provider.dao.demo_cms_fw'] : $this->getSecurity_Authentication_Provider_Dao_DemoCmsFwService()) && false ?: '_'};
            yield 5 => ${($_ = isset($this->services['security.authentication.provider.anonymous.demo_cms_fw']) ? $this->services['security.authentication.provider.anonymous.demo_cms_fw'] : $this->getSecurity_Authentication_Provider_Anonymous_DemoCmsFwService()) && false ?: '_'};
            yield 6 => ${($_ = isset($this->services['security.authentication.provider.dao.coreshop_frontend']) ? $this->services['security.authentication.provider.dao.coreshop_frontend'] : $this->getSecurity_Authentication_Provider_Dao_CoreshopFrontendService()) && false ?: '_'};
            yield 7 => ${($_ = isset($this->services['security.authentication.provider.rememberme.coreshop_frontend']) ? $this->services['security.authentication.provider.rememberme.coreshop_frontend'] : $this->getSecurity_Authentication_Provider_Rememberme_CoreshopFrontendService()) && false ?: '_'};
            yield 8 => ${($_ = isset($this->services['security.authentication.provider.anonymous.coreshop_frontend']) ? $this->services['security.authentication.provider.anonymous.coreshop_frontend'] : $this->getSecurity_Authentication_Provider_Anonymous_CoreshopFrontendService()) && false ?: '_'};
        }, 9), true);

        $instance->setEventDispatcher(${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->get('debug.event_dispatcher')) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the private 'security.authentication.provider.anonymous.admin' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Anonymous_AdminService()
    {
        return $this->services['security.authentication.provider.anonymous.admin'] = new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5a25fbf4000b66.10029197');
    }

    /**
     * Gets the private 'security.authentication.provider.anonymous.coreshop_frontend' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Anonymous_CoreshopFrontendService()
    {
        return $this->services['security.authentication.provider.anonymous.coreshop_frontend'] = new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5a25fbf4000b66.10029197');
    }

    /**
     * Gets the private 'security.authentication.provider.anonymous.demo_cms_fw' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Anonymous_DemoCmsFwService()
    {
        return $this->services['security.authentication.provider.anonymous.demo_cms_fw'] = new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('5a25fbf4000b66.10029197');
    }

    /**
     * Gets the private 'security.authentication.provider.dao.admin_webdav' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Dao_AdminWebdavService()
    {
        return $this->services['security.authentication.provider.dao.admin_webdav'] = new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider(${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'admin_webdav', ${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'}, true);
    }

    /**
     * Gets the private 'security.authentication.provider.dao.coreshop_frontend' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Dao_CoreshopFrontendService()
    {
        return $this->services['security.authentication.provider.dao.coreshop_frontend'] = new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider(${($_ = isset($this->services['coreshop.security.customer.user_provider']) ? $this->services['coreshop.security.customer.user_provider'] : $this->get('coreshop.security.customer.user_provider')) && false ?: '_'}, ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'coreshop_frontend', ${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'}, true);
    }

    /**
     * Gets the private 'security.authentication.provider.dao.demo_cms_fw' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Dao_DemoCmsFwService()
    {
        return $this->services['security.authentication.provider.dao.demo_cms_fw'] = new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider(${($_ = isset($this->services['website_demo.security.user_provider']) ? $this->services['website_demo.security.user_provider'] : $this->get('website_demo.security.user_provider')) && false ?: '_'}, ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'demo_cms_fw', ${($_ = isset($this->services['security.encoder_factory']) ? $this->services['security.encoder_factory'] : $this->get('security.encoder_factory')) && false ?: '_'}, true);
    }

    /**
     * Gets the private 'security.authentication.provider.guard.admin' shared service.
     *
     * @return \Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Guard_AdminService()
    {
        return $this->services['security.authentication.provider.guard.admin'] = new \Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider(new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['pimcore_admin.security.admin_authenticator']) ? $this->services['pimcore_admin.security.admin_authenticator'] : $this->get('pimcore_admin.security.admin_authenticator')) && false ?: '_'};
        }, 1), ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, 'admin', ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.authentication.provider.guard.webservice' shared service.
     *
     * @return \Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Guard_WebserviceService()
    {
        return $this->services['security.authentication.provider.guard.webservice'] = new \Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider(new RewindableGenerator(function () {
            yield 0 => ${($_ = isset($this->services['pimcore_admin.security.webservice_authenticator']) ? $this->services['pimcore_admin.security.webservice_authenticator'] : $this->get('pimcore_admin.security.webservice_authenticator')) && false ?: '_'};
        }, 1), ${($_ = isset($this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider']) ? $this->services['Pimcore\Bundle\AdminBundle\Security\User\UserProvider'] : $this->get('Pimcore\Bundle\AdminBundle\Security\User\UserProvider')) && false ?: '_'}, 'webservice', ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'});
    }

    /**
     * Gets the private 'security.authentication.provider.rememberme.coreshop_frontend' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider
     */
    protected function getSecurity_Authentication_Provider_Rememberme_CoreshopFrontendService()
    {
        return $this->services['security.authentication.provider.rememberme.coreshop_frontend'] = new \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider(${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'fb0cd3e33f74127cd452bcd07a52e802188c5221', 'coreshop_frontend');
    }

    /**
     * Gets the private 'security.authentication.session_strategy' shared service.
     *
     * @return \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy
     */
    protected function getSecurity_Authentication_SessionStrategyService()
    {
        return $this->services['security.authentication.session_strategy'] = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate');
    }

    /**
     * Gets the private 'security.authentication.trust_resolver' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver
     */
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }

    /**
     * Gets the private 'security.channel_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ChannelListener
     */
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener(${($_ = isset($this->services['security.access_map']) ? $this->services['security.access_map'] : $this->getSecurity_AccessMapService()) && false ?: '_'}, new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
    }

    /**
     * Gets the private 'security.firewall.map' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallMap
     */
    protected function getSecurity_Firewall_MapService()
    {
        return $this->services['security.firewall.map'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallMap(new \Symfony\Component\DependencyInjection\ServiceLocator(array('security.firewall.map.context.admin' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.admin']) ? $this->services['security.firewall.map.context.admin'] : $this->get('security.firewall.map.context.admin')) && false ?: '_'};
        }, 'security.firewall.map.context.admin_webdav' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.admin_webdav']) ? $this->services['security.firewall.map.context.admin_webdav'] : $this->get('security.firewall.map.context.admin_webdav')) && false ?: '_'};
        }, 'security.firewall.map.context.coreshop_frontend' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.coreshop_frontend']) ? $this->services['security.firewall.map.context.coreshop_frontend'] : $this->get('security.firewall.map.context.coreshop_frontend')) && false ?: '_'};
        }, 'security.firewall.map.context.demo_cms_fw' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.demo_cms_fw']) ? $this->services['security.firewall.map.context.demo_cms_fw'] : $this->get('security.firewall.map.context.demo_cms_fw')) && false ?: '_'};
        }, 'security.firewall.map.context.dev' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.dev']) ? $this->services['security.firewall.map.context.dev'] : $this->get('security.firewall.map.context.dev')) && false ?: '_'};
        }, 'security.firewall.map.context.webservice' => function () {
            return ${($_ = isset($this->services['security.firewall.map.context.webservice']) ? $this->services['security.firewall.map.context.webservice'] : $this->get('security.firewall.map.context.webservice')) && false ?: '_'};
        })), new RewindableGenerator(function () {
            yield 'security.firewall.map.context.dev' => ${($_ = isset($this->services['security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d']) ? $this->services['security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d'] : $this->getSecurity_RequestMatcher_5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1dService()) && false ?: '_'};
            yield 'security.firewall.map.context.admin_webdav' => ${($_ = isset($this->services['security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b']) ? $this->services['security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b'] : $this->getSecurity_RequestMatcher_A50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39bService()) && false ?: '_'};
            yield 'security.firewall.map.context.admin' => ${($_ = isset($this->services['security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e']) ? $this->services['security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e'] : $this->getSecurity_RequestMatcher_764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5eService()) && false ?: '_'};
            yield 'security.firewall.map.context.webservice' => ${($_ = isset($this->services['security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc']) ? $this->services['security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc'] : $this->getSecurity_RequestMatcher_739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fcService()) && false ?: '_'};
            yield 'security.firewall.map.context.demo_cms_fw' => NULL;
            yield 'security.firewall.map.context.coreshop_frontend' => NULL;
        }, 6));
    }

    /**
     * Gets the private 'security.http_utils' shared service.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils
     */
    protected function getSecurity_HttpUtilsService()
    {
        $a = ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};

        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }

    /**
     * Gets the private 'security.logout_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['cmf_routing.router']) ? $this->services['cmf_routing.router'] : $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});

        $instance->registerListener('admin', '/admin/logout', 'logout', '_csrf_token', NULL, NULL);
        $instance->registerListener('demo_cms_fw', 'demo_logout', 'logout', '_csrf_token', NULL, NULL);
        $instance->registerListener('coreshop_frontend', 'coreshop_logout', 'logout', '_csrf_token', NULL, 'shop');

        return $instance;
    }

    /**
     * Gets the private 'security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getSecurity_RequestMatcher_5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1dService()
    {
        return $this->services['security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/');
    }

    /**
     * Gets the private 'security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getSecurity_RequestMatcher_739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fcService()
    {
        return $this->services['security.request_matcher.739bd6996bb3b118cd48e18c1be9190a2a4e591a3fbb66796acc5de35bf3bcf24ff049fc'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/webservice');
    }

    /**
     * Gets the private 'security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getSecurity_RequestMatcher_764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5eService()
    {
        return $this->services['security.request_matcher.764e993b07f86c50f945d9bc29906d594dfc5b599c6dd619ee7f826206d068a50daecf5e'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin');
    }

    /**
     * Gets the private 'security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getSecurity_RequestMatcher_A50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39bService()
    {
        return $this->services['security.request_matcher.a50c8485b97e617ec992f80bdc28744923293294a669a247324029e17a79db4f8884d39b'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/asset/webdav');
    }

    /**
     * Gets the private 'security.role_hierarchy' shared service.
     *
     * @return \Symfony\Component\Security\Core\Role\RoleHierarchy
     */
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array('ROLE_PIMCORE_ADMIN' => array(0 => 'ROLE_PIMCORE_USER'), 'ROLE_ADMIN' => array(0 => 'ROLE_USER')));
    }

    /**
     * Gets the private 'security.user_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\User\UserChecker
     */
    protected function getSecurity_UserCheckerService()
    {
        return $this->services['security.user_checker'] = new \Symfony\Component\Security\Core\User\UserChecker();
    }

    /**
     * Gets the private 'security.user_value_resolver' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\SecurityUserValueResolver
     */
    protected function getSecurity_UserValueResolverService()
    {
        return $this->services['security.user_value_resolver'] = new \Symfony\Bundle\SecurityBundle\SecurityUserValueResolver(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->get('security.token_storage')) && false ?: '_'});
    }

    /**
     * Gets the private 'service_locator.1df818bdbc898e0ca4257f453525a80a' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_1df818bdbc898e0ca4257f453525a80aService()
    {
        return $this->services['service_locator.1df818bdbc898e0ca4257f453525a80a'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('actionRenderer' => function () {
            return ${($_ = isset($this->services['pimcore.templating.action_renderer']) ? $this->services['pimcore.templating.action_renderer'] : $this->get('pimcore.templating.action_renderer', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        }, 'localeService' => function () {
            $f = function (\Pimcore\Localization\Locale $v = null) { return $v; }; return $f(${($_ = isset($this->services['Pimcore\Localization\Locale']) ? $this->services['Pimcore\Localization\Locale'] : $this->get('Pimcore\Localization\Locale', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }, 'tagHandler' => function () {
            return ${($_ = isset($this->services['pimcore.document.tag.handler']) ? $this->services['pimcore.document.tag.handler'] : $this->get('pimcore.document.tag.handler', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        }));
    }

    /**
     * Gets the private 'service_locator.38c73ce8067617f669e83e499e0bd337' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_38c73ce8067617f669e83e499e0bd337Service()
    {
        return $this->services['service_locator.38c73ce8067617f669e83e499e0bd337'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('provider' => function () {
            $f = function (\Pimcore\Controller\Config\ControllerDataProvider $v = null) { return $v; }; return $f(${($_ = isset($this->services['Pimcore\Controller\Config\ControllerDataProvider']) ? $this->services['Pimcore\Controller\Config\ControllerDataProvider'] : $this->get('Pimcore\Controller\Config\ControllerDataProvider', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }));
    }

    /**
     * Gets the private 'service_locator.83603fcf2ec2e2d8755beebb160c60e0' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_83603fcf2ec2e2d8755beebb160c60e0Service()
    {
        return $this->services['service_locator.83603fcf2ec2e2d8755beebb160c60e0'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('assetsInstaller' => function () {
            $f = function (\Pimcore\Tool\AssetsInstaller $v = null) { return $v; }; return $f(${($_ = isset($this->services['Pimcore\Tool\AssetsInstaller']) ? $this->services['Pimcore\Tool\AssetsInstaller'] : $this->get('Pimcore\Tool\AssetsInstaller', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }));
    }

    /**
     * Gets the private 'service_locator.8fbaea2dc9ce39bb09e046ce631ea329' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_8fbaea2dc9ce39bb09e046ce631ea329Service()
    {
        return $this->services['service_locator.8fbaea2dc9ce39bb09e046ce631ea329'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('db' => function () {
            return ${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->get('doctrine.dbal.default_connection', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'};
        }));
    }

    /**
     * Gets the private 'service_locator.e64d23c3bf770e2cf44b71643280668d' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_E64d23c3bf770e2cf44b71643280668dService()
    {
        return $this->services['service_locator.e64d23c3bf770e2cf44b71643280668d'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('esi' => function () {
            return ${($_ = isset($this->services['fragment.renderer.esi']) ? $this->services['fragment.renderer.esi'] : $this->get('fragment.renderer.esi')) && false ?: '_'};
        }, 'hinclude' => function () {
            return ${($_ = isset($this->services['fragment.renderer.hinclude']) ? $this->services['fragment.renderer.hinclude'] : $this->get('fragment.renderer.hinclude')) && false ?: '_'};
        }, 'inline' => function () {
            return ${($_ = isset($this->services['fragment.renderer.inline']) ? $this->services['fragment.renderer.inline'] : $this->get('fragment.renderer.inline')) && false ?: '_'};
        }, 'ssi' => function () {
            return ${($_ = isset($this->services['fragment.renderer.ssi']) ? $this->services['fragment.renderer.ssi'] : $this->get('fragment.renderer.ssi')) && false ?: '_'};
        }));
    }

    /**
     * Gets the private 'service_locator.ecb3d2e49c7158cfbf629075292d1db0' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_Ecb3d2e49c7158cfbf629075292d1db0Service()
    {
        return $this->services['service_locator.ecb3d2e49c7158cfbf629075292d1db0'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('provider' => function () {
            $f = function (\Pimcore\Controller\Config\ControllerDataProvider $v = null) { return $v; }; return $f(${($_ = isset($this->services['Pimcore\Controller\Config\ControllerDataProvider']) ? $this->services['Pimcore\Controller\Config\ControllerDataProvider'] : $this->get('Pimcore\Controller\Config\ControllerDataProvider', ContainerInterface::NULL_ON_INVALID_REFERENCE)) && false ?: '_'});
        }));
    }

    /**
     * Gets the private 'service_locator.ef50b66065b1737465a2d74a13598afe' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_Ef50b66065b1737465a2d74a13598afeService()
    {
        return $this->services['service_locator.ef50b66065b1737465a2d74a13598afe'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('object' => function () {
            $f = function (\Pimcore\Model\DataObject\AbstractObject $v) { return $v; }; return $f(${($_ = isset($this->services['autowired.Pimcore\Model\DataObject\AbstractObject']) ? $this->services['autowired.Pimcore\Model\DataObject\AbstractObject'] : $this->getAutowired_Pimcore_Model_DataObject_AbstractObjectService()) && false ?: '_'});
        }));
    }

    /**
     * Gets the private 'service_locator.f4349e8894d66f427f9ad72c699461b7' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function getServiceLocator_F4349e8894d66f427f9ad72c699461b7Service()
    {
        return $this->services['service_locator.f4349e8894d66f427f9ad72c699461b7'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('object' => function () {
            $f = function (\Pimcore\Model\DataObject\Concrete $v) { return $v; }; return $f(${($_ = isset($this->services['autowired.Pimcore\Model\DataObject\Concrete']) ? $this->services['autowired.Pimcore\Model\DataObject\Concrete'] : $this->getAutowired_Pimcore_Model_DataObject_ConcreteService()) && false ?: '_'});
        }));
    }

    /**
     * Gets the private 'session.storage.metadata_bag' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag
     */
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }

    /**
     * Gets the private 'swiftmailer.transport.mailinvoker' shared service.
     *
     * @return \Swift_Transport_SimpleMailInvoker
     */
    protected function getSwiftmailer_Transport_MailinvokerService()
    {
        return $this->services['swiftmailer.transport.mailinvoker'] = new \Swift_Transport_SimpleMailInvoker();
    }

    /**
     * Gets the private 'templating.finder' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder
     */
    protected function getTemplating_FinderService()
    {
        return $this->services['templating.finder'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ${($_ = isset($this->services['templating.filename_parser']) ? $this->services['templating.filename_parser'] : $this->get('templating.filename_parser')) && false ?: '_'}, ($this->targetDirs[3].'/app/Resources'));
    }

    /**
     * Gets the private 'translator.data_collector' shared service.
     *
     * @return \Symfony\Component\Translation\DataCollectorTranslator
     */
    protected function getTranslator_DataCollectorService()
    {
        return $this->services['translator.data_collector'] = new \Symfony\Component\Translation\DataCollectorTranslator(new \Symfony\Component\Translation\LoggingTranslator(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->get('translator.default')) && false ?: '_'}, ${($_ = isset($this->services['monolog.logger.translation']) ? $this->services['monolog.logger.translation'] : $this->get('monolog.logger.translation')) && false ?: '_'}));
    }

    /**
     * Gets the private 'web_profiler.csp.handler' shared service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler
     */
    protected function getWebProfiler_Csp_HandlerService()
    {
        return $this->services['web_profiler.csp.handler'] = new \Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler(new \Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator());
    }

    /**
     * {@inheritdoc}
     */
    public function getParameter($name)
    {
        $name = strtolower($name);

        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    /**
     * {@inheritdoc}
     */
    public function hasParameter($name)
    {
        $name = strtolower($name);

        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]);
    }

    /**
     * {@inheritdoc}
     */
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    /**
     * {@inheritdoc}
     */
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = array(
        'kernel.root_dir' => false,
        'kernel.project_dir' => false,
        'kernel.logs_dir' => false,
        'kernel.bundles_metadata' => false,
        'session.save_path' => false,
        'router.resource' => false,
        'doctrine_migrations.dir_name' => false,
    );
    private $dynamicParameters = array();

    /**
     * Computes a dynamic parameter.
     *
     * @param string The name of the dynamic parameter to load
     *
     * @return mixed The value of the dynamic parameter
     *
     * @throws InvalidArgumentException When the dynamic parameter does not exist
     */
    private function getDynamicParameter($name)
    {
        switch ($name) {
            case 'kernel.root_dir': $value = ($this->targetDirs[3].'/app'); break;
            case 'kernel.project_dir': $value = $this->targetDirs[3]; break;
            case 'kernel.logs_dir': $value = ($this->targetDirs[2].'/logs'); break;
            case 'kernel.bundles_metadata': $value = array(
                'JMSSerializerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/jms/serializer-bundle/JMS/SerializerBundle'),
                    'namespace' => 'JMS\\SerializerBundle',
                ),
                'CoreShopResourceBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ResourceBundle'),
                    'namespace' => 'CoreShop\\Bundle\\ResourceBundle',
                ),
                'CoreShopFixtureBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FixtureBundle'),
                    'namespace' => 'CoreShop\\Bundle\\FixtureBundle',
                ),
                'CoreShopMoneyBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/MoneyBundle'),
                    'namespace' => 'CoreShop\\Bundle\\MoneyBundle',
                ),
                'CoreShopRuleBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/RuleBundle'),
                    'namespace' => 'CoreShop\\Bundle\\RuleBundle',
                ),
                'CoreShopLocaleBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/LocaleBundle'),
                    'namespace' => 'CoreShop\\Bundle\\LocaleBundle',
                ),
                'CoreShopConfigurationBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ConfigurationBundle'),
                    'namespace' => 'CoreShop\\Bundle\\ConfigurationBundle',
                ),
                'CoreShopOrderBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/OrderBundle'),
                    'namespace' => 'CoreShop\\Bundle\\OrderBundle',
                ),
                'CoreShopCustomerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CustomerBundle'),
                    'namespace' => 'CoreShop\\Bundle\\CustomerBundle',
                ),
                'CoreShopProductBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ProductBundle'),
                    'namespace' => 'CoreShop\\Bundle\\ProductBundle',
                ),
                'CoreShopAddressBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AddressBundle'),
                    'namespace' => 'CoreShop\\Bundle\\AddressBundle',
                ),
                'CoreShopCurrencyBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CurrencyBundle'),
                    'namespace' => 'CoreShop\\Bundle\\CurrencyBundle',
                ),
                'CoreShopTaxationBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TaxationBundle'),
                    'namespace' => 'CoreShop\\Bundle\\TaxationBundle',
                ),
                'CoreShopStoreBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/StoreBundle'),
                    'namespace' => 'CoreShop\\Bundle\\StoreBundle',
                ),
                'CoreShopIndexBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/IndexBundle'),
                    'namespace' => 'CoreShop\\Bundle\\IndexBundle',
                ),
                'CoreShopShippingBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/ShippingBundle'),
                    'namespace' => 'CoreShop\\Bundle\\ShippingBundle',
                ),
                'CoreShopPaymentBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PaymentBundle'),
                    'namespace' => 'CoreShop\\Bundle\\PaymentBundle',
                ),
                'CoreShopSequenceBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/SequenceBundle'),
                    'namespace' => 'CoreShop\\Bundle\\SequenceBundle',
                ),
                'CoreShopNotificationBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/NotificationBundle'),
                    'namespace' => 'CoreShop\\Bundle\\NotificationBundle',
                ),
                'CoreShopTrackingBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/TrackingBundle'),
                    'namespace' => 'CoreShop\\Bundle\\TrackingBundle',
                ),
                'CoreShopFrontendBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/FrontendBundle'),
                    'namespace' => 'CoreShop\\Bundle\\FrontendBundle',
                ),
                'CoreShopPayumBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/PayumBundle'),
                    'namespace' => 'CoreShop\\Bundle\\PayumBundle',
                ),
                'CoreShopCoreBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/CoreBundle'),
                    'namespace' => 'CoreShop\\Bundle\\CoreBundle',
                ),
                'FOSRestBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/friendsofsymfony/rest-bundle'),
                    'namespace' => 'FOS\\RestBundle',
                ),
                'DoctrineCacheBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-cache-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineCacheBundle',
                ),
                'PayumBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/payum/payum-bundle'),
                    'namespace' => 'Payum\\Bundle\\PayumBundle',
                ),
                'StofDoctrineExtensionsBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/stof/doctrine-extensions-bundle'),
                    'namespace' => 'Stof\\DoctrineExtensionsBundle',
                ),
                'LiipThemeBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/liip/theme-bundle'),
                    'namespace' => 'Liip\\ThemeBundle',
                ),
                'HampeZurbInkBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/hampe/zurb-ink-bundle/Hampe/Bundle/ZurbInkBundle'),
                    'namespace' => 'Hampe\\Bundle\\ZurbInkBundle',
                ),
                'FrameworkBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ),
                'SecurityBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ),
                'TwigBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ),
                'MonologBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ),
                'SwiftmailerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SwiftmailerBundle',
                ),
                'DoctrineBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ),
                'SensioFrameworkExtraBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/sensio/framework-extra-bundle'),
                    'namespace' => 'Sensio\\Bundle\\FrameworkExtraBundle',
                ),
                'CmfRoutingBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/src'),
                    'namespace' => 'Symfony\\Cmf\\Bundle\\RoutingBundle',
                ),
                'DebugBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle'),
                    'namespace' => 'Symfony\\Bundle\\DebugBundle',
                ),
                'WebProfilerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle'),
                    'namespace' => 'Symfony\\Bundle\\WebProfilerBundle',
                ),
                'SensioDistributionBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/sensio/distribution-bundle'),
                    'namespace' => 'Sensio\\Bundle\\DistributionBundle',
                ),
                'SensioGeneratorBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/sensio/generator-bundle'),
                    'namespace' => 'Sensio\\Bundle\\GeneratorBundle',
                ),
                'PimcoreCoreBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/CoreBundle'),
                    'namespace' => 'Pimcore\\Bundle\\CoreBundle',
                ),
                'PimcoreAdminBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/AdminBundle'),
                    'namespace' => 'Pimcore\\Bundle\\AdminBundle',
                ),
                'PimcoreGeneratorBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/GeneratorBundle'),
                    'namespace' => 'Pimcore\\Bundle\\GeneratorBundle',
                ),
                'AppBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/src/AppBundle'),
                    'namespace' => 'AppBundle',
                ),
                'PimcoreEcommerceFrameworkBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/pimcore/lib/Pimcore/Bundle/EcommerceFrameworkBundle'),
                    'namespace' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle',
                ),
                'CoreShopAdminBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[3].'/vendor/coreshop/core-shop/src/CoreShop/Bundle/AdminBundle'),
                    'namespace' => 'CoreShop\\Bundle\\AdminBundle',
                ),
            ); break;
            case 'session.save_path': $value = ($this->targetDirs[3].'/app/../var/sessions'); break;
            case 'router.resource': $value = ($this->targetDirs[3].'/app/config/routing_dev.yml'); break;
            case 'doctrine_migrations.dir_name': $value = ($this->targetDirs[3].'/app/DoctrineMigrations'); break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    /**
     * Gets the default parameters.
     *
     * @return array An array of the default parameters
     */
    protected function getDefaultParameters()
    {
        return array(
            'kernel.environment' => 'dev',
            'kernel.debug' => true,
            'kernel.name' => 'app',
            'kernel.cache_dir' => __DIR__,
            'kernel.bundles' => array(
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'CoreShopResourceBundle' => 'CoreShop\\Bundle\\ResourceBundle\\CoreShopResourceBundle',
                'CoreShopFixtureBundle' => 'CoreShop\\Bundle\\FixtureBundle\\CoreShopFixtureBundle',
                'CoreShopMoneyBundle' => 'CoreShop\\Bundle\\MoneyBundle\\CoreShopMoneyBundle',
                'CoreShopRuleBundle' => 'CoreShop\\Bundle\\RuleBundle\\CoreShopRuleBundle',
                'CoreShopLocaleBundle' => 'CoreShop\\Bundle\\LocaleBundle\\CoreShopLocaleBundle',
                'CoreShopConfigurationBundle' => 'CoreShop\\Bundle\\ConfigurationBundle\\CoreShopConfigurationBundle',
                'CoreShopOrderBundle' => 'CoreShop\\Bundle\\OrderBundle\\CoreShopOrderBundle',
                'CoreShopCustomerBundle' => 'CoreShop\\Bundle\\CustomerBundle\\CoreShopCustomerBundle',
                'CoreShopProductBundle' => 'CoreShop\\Bundle\\ProductBundle\\CoreShopProductBundle',
                'CoreShopAddressBundle' => 'CoreShop\\Bundle\\AddressBundle\\CoreShopAddressBundle',
                'CoreShopCurrencyBundle' => 'CoreShop\\Bundle\\CurrencyBundle\\CoreShopCurrencyBundle',
                'CoreShopTaxationBundle' => 'CoreShop\\Bundle\\TaxationBundle\\CoreShopTaxationBundle',
                'CoreShopStoreBundle' => 'CoreShop\\Bundle\\StoreBundle\\CoreShopStoreBundle',
                'CoreShopIndexBundle' => 'CoreShop\\Bundle\\IndexBundle\\CoreShopIndexBundle',
                'CoreShopShippingBundle' => 'CoreShop\\Bundle\\ShippingBundle\\CoreShopShippingBundle',
                'CoreShopPaymentBundle' => 'CoreShop\\Bundle\\PaymentBundle\\CoreShopPaymentBundle',
                'CoreShopSequenceBundle' => 'CoreShop\\Bundle\\SequenceBundle\\CoreShopSequenceBundle',
                'CoreShopNotificationBundle' => 'CoreShop\\Bundle\\NotificationBundle\\CoreShopNotificationBundle',
                'CoreShopTrackingBundle' => 'CoreShop\\Bundle\\TrackingBundle\\CoreShopTrackingBundle',
                'CoreShopFrontendBundle' => 'CoreShop\\Bundle\\FrontendBundle\\CoreShopFrontendBundle',
                'CoreShopPayumBundle' => 'CoreShop\\Bundle\\PayumBundle\\CoreShopPayumBundle',
                'CoreShopCoreBundle' => 'CoreShop\\Bundle\\CoreBundle\\CoreShopCoreBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'DoctrineCacheBundle' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\DoctrineCacheBundle',
                'PayumBundle' => 'Payum\\Bundle\\PayumBundle\\PayumBundle',
                'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle',
                'LiipThemeBundle' => 'Liip\\ThemeBundle\\LiipThemeBundle',
                'HampeZurbInkBundle' => 'Hampe\\Bundle\\ZurbInkBundle\\HampeZurbInkBundle',
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'CmfRoutingBundle' => 'Symfony\\Cmf\\Bundle\\RoutingBundle\\CmfRoutingBundle',
                'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle',
                'SensioGeneratorBundle' => 'Sensio\\Bundle\\GeneratorBundle\\SensioGeneratorBundle',
                'PimcoreCoreBundle' => 'Pimcore\\Bundle\\CoreBundle\\PimcoreCoreBundle',
                'PimcoreAdminBundle' => 'Pimcore\\Bundle\\AdminBundle\\PimcoreAdminBundle',
                'PimcoreGeneratorBundle' => 'Pimcore\\Bundle\\GeneratorBundle\\PimcoreGeneratorBundle',
                'AppBundle' => 'AppBundle\\AppBundle',
                'PimcoreEcommerceFrameworkBundle' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PimcoreEcommerceFrameworkBundle',
                'CoreShopAdminBundle' => 'CoreShop\\Bundle\\AdminBundle\\CoreShopAdminBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appDevDebugProjectContainer',
            'locale' => 'en',
            'swiftmailer.plugin.redirecting.class' => 'Pimcore\\Mail\\Plugins\\RedirectingPlugin',
            'secret' => 'fb0cd3e33f74127cd452bcd07a52e802188c5221',
            'pimcore_executable_composer' => 'php /usr/local/bin/composer',
            'pimcore_system_config.general.timezone' => 'Europe/Moscow',
            'pimcore_system_config.general.path_variable' => '',
            'pimcore_system_config.general.domain' => '',
            'pimcore_system_config.general.redirect_to_maindomain' => false,
            'pimcore_system_config.general.language' => 'ru',
            'pimcore_system_config.general.validlanguages' => 'ru,en,de',
            'pimcore_system_config.general.fallbacklanguages.ru' => '',
            'pimcore_system_config.general.fallbacklanguages.en' => '',
            'pimcore_system_config.general.fallbacklanguages.de' => '',
            'pimcore_system_config.general.defaultlanguage' => 'ru',
            'pimcore_system_config.general.loginscreencustomimage' => '',
            'pimcore_system_config.general.disableusagestatistics' => false,
            'pimcore_system_config.general.debug_admin_translations' => false,
            'pimcore_system_config.general.devmode' => false,
            'pimcore_system_config.general.instanceidentifier' => '',
            'pimcore_system_config.general.show_cookie_notice' => false,
            'pimcore_system_config.database.params.username' => 'torick_project',
            'pimcore_system_config.database.params.password' => '123456',
            'pimcore_system_config.database.params.dbname' => 'torick_project',
            'pimcore_system_config.database.params.host' => 'localhost',
            'pimcore_system_config.database.params.port' => '3306',
            'pimcore_system_config.documents.versions.days' => NULL,
            'pimcore_system_config.documents.versions.steps' => 10,
            'pimcore_system_config.documents.default_controller' => 'Default',
            'pimcore_system_config.documents.default_action' => 'default',
            'pimcore_system_config.documents.error_pages.default' => '/error',
            'pimcore_system_config.documents.createredirectwhenmoved' => false,
            'pimcore_system_config.documents.allowtrailingslash' => 'no',
            'pimcore_system_config.documents.generatepreview' => true,
            'pimcore_system_config.objects.versions.days' => NULL,
            'pimcore_system_config.objects.versions.steps' => 10,
            'pimcore_system_config.assets.versions.days' => NULL,
            'pimcore_system_config.assets.versions.steps' => 10,
            'pimcore_system_config.assets.icc_rgb_profile' => '',
            'pimcore_system_config.assets.icc_cmyk_profile' => '',
            'pimcore_system_config.assets.hide_edit_image' => false,
            'pimcore_system_config.assets.disable_tree_preview' => false,
            'pimcore_system_config.services.google.client_id' => '655439141282-tic94n6q3j7ca5c5as132sspeftu5pli.apps.googleusercontent.com',
            'pimcore_system_config.services.google.email' => '655439141282-tic94n6q3j7ca5c5as132sspeftu5pli@developer.gserviceaccount.com',
            'pimcore_system_config.services.google.simpleapikey' => 'AIzaSyCo9Wj49hYJWW2WgOju4iMYNTvdcBxmyQ8',
            'pimcore_system_config.services.google.browserapikey' => 'AIzaSyBJX16kWAmUVEz1c1amzp2iKqAfumbcoQQ',
            'pimcore_system_config.cache.enabled' => false,
            'pimcore_system_config.cache.lifetime' => NULL,
            'pimcore_system_config.cache.excludepatterns' => '',
            'pimcore_system_config.cache.excludecookie' => '',
            'pimcore_system_config.outputfilters.less' => false,
            'pimcore_system_config.outputfilters.lesscpath' => '',
            'pimcore_system_config.webservice.enabled' => true,
            'pimcore_system_config.httpclient.adapter' => 'Socket',
            'pimcore_system_config.httpclient.proxy_host' => '',
            'pimcore_system_config.httpclient.proxy_port' => '',
            'pimcore_system_config.httpclient.proxy_user' => '',
            'pimcore_system_config.httpclient.proxy_pass' => '',
            'pimcore_system_config.email.sender.name' => '',
            'pimcore_system_config.email.sender.email' => '',
            'pimcore_system_config.email.return.name' => '',
            'pimcore_system_config.email.return.email' => '',
            'pimcore_system_config.email.method' => 'mail',
            'pimcore_system_config.email.smtp.host' => '',
            'pimcore_system_config.email.smtp.port' => '',
            'pimcore_system_config.email.smtp.ssl' => NULL,
            'pimcore_system_config.email.smtp.name' => '',
            'pimcore_system_config.email.smtp.auth.method' => NULL,
            'pimcore_system_config.email.smtp.auth.username' => '',
            'pimcore_system_config.email.smtp.auth.password' => NULL,
            'pimcore_system_config.email.debug.emailaddresses' => '',
            'pimcore_system_config.newsletter.sender.name' => '',
            'pimcore_system_config.newsletter.sender.email' => '',
            'pimcore_system_config.newsletter.return.name' => '',
            'pimcore_system_config.newsletter.return.email' => '',
            'pimcore_system_config.newsletter.method' => 'mail',
            'pimcore_system_config.newsletter.smtp.host' => '',
            'pimcore_system_config.newsletter.smtp.port' => '',
            'pimcore_system_config.newsletter.smtp.ssl' => NULL,
            'pimcore_system_config.newsletter.smtp.name' => '',
            'pimcore_system_config.newsletter.smtp.auth.method' => NULL,
            'pimcore_system_config.newsletter.smtp.auth.username' => '',
            'pimcore_system_config.newsletter.smtp.auth.password' => NULL,
            'pimcore_system_config.newsletter.debug' => NULL,
            'pimcore_system_config.newsletter.usespecific' => false,
            'pimcore_system_config.applicationlog.mail_notification.send_log_summary' => false,
            'pimcore_system_config.applicationlog.mail_notification.filter_priority' => NULL,
            'pimcore_system_config.applicationlog.mail_notification.mail_receiver' => '',
            'pimcore_system_config.applicationlog.archive_treshold' => '30',
            'pimcore_system_config.applicationlog.archive_alternative_database' => '',
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\PhpDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\IdenticalPropertyNamingStrategy',
            'jms_serializer.identical_property_naming_strategy.class' => 'JMS\\Serializer\\Naming\\IdenticalPropertyNamingStrategy',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.twig_runtime_extension.class' => 'JMS\\Serializer\\Twig\\SerializerRuntimeExtension',
            'jms_serializer.twig_runtime_extension_helper.class' => 'JMS\\Serializer\\Twig\\SerializerRuntimeHelper',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 0,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(

            ),
            'jms_serializer.xml_serialization_visitor.format_output' => true,
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.form_error_handler.class' => 'FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'jms_serializer.configured_context_factory.class' => 'JMS\\SerializerBundle\\ContextFactory\\ConfiguredContextFactory',
            'jms_serializer.expression_evaluator.class' => 'JMS\\Serializer\\Expression\\ExpressionEvaluator',
            'jms_serializer.expression_language.class' => 'Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage',
            'jms_serializer.expression_language.function_provider.class' => 'JMS\\SerializerBundle\\ExpressionLanguage\\BasicSerializerFunctionsProvider',
            'jms_serializer.accessor_strategy.default.class' => 'JMS\\Serializer\\Accessor\\DefaultAccessorStrategy',
            'jms_serializer.accessor_strategy.expression.class' => 'JMS\\Serializer\\Accessor\\ExpressionAccessorStrategy',
            'coreshop.admin.route.base' => '/admin/coreshop',
            'coreshop.application.pimcore.admin.js' => array(
                0 => '/bundles/coreshopresource/pimcore/js/broker.js',
                1 => '/bundles/coreshopresource/pimcore/js/global.js',
                2 => '/bundles/coreshopresource/pimcore/js/resource.js',
                3 => '/bundles/coreshopresource/pimcore/js/resource/panel.js',
                4 => '/bundles/coreshopresource/pimcore/js/resource/item.js',
                5 => '/bundles/coreshopresource/pimcore/js/resource/comboBox.js',
                6 => '/bundles/coreshopresource/pimcore/js/object/elementHref.js',
                7 => '/bundles/coreshopresource/pimcore/js/object/objectMultihref.js',
                8 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/data.js',
                9 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/dataMultiselect.js',
                10 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/select.js',
                11 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/select.js',
                12 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/multiselect.js',
                13 => '/bundles/coreshopmoney/pimcore/js/coreExtension/data/coreShopMoney.js',
                14 => '/bundles/coreshopmoney/pimcore/js/coreExtension/tags/coreShopMoney.js',
                15 => '/bundles/coreshoprule/pimcore/js/rules/panel.js',
                16 => '/bundles/coreshoprule/pimcore/js/rules/item.js',
                17 => '/bundles/coreshoprule/pimcore/js/rules/abstract.js',
                18 => '/bundles/coreshoprule/pimcore/js/rules/condition.js',
                19 => '/bundles/coreshoprule/pimcore/js/rules/action.js',
                20 => '/bundles/coreshoprule/pimcore/js/rules/actions/abstract.js',
                21 => '/bundles/coreshoprule/pimcore/js/rules/conditions/abstract.js',
                22 => '/bundles/coreshoporder/pimcore/js/resource.js',
                23 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/panel.js',
                24 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/item.js',
                25 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/action.js',
                26 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/condition.js',
                27 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountAmount.js',
                28 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountPercent.js',
                29 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/amount.js',
                30 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/nested.js',
                31 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/timespan.js',
                32 => '/bundles/coreshoporder/pimcore/js/sale/detail.js',
                33 => '/bundles/coreshoporder/pimcore/js/sale/list.js',
                34 => '/bundles/coreshoporder/pimcore/js/sale/create/eventManager.js',
                35 => '/bundles/coreshoporder/pimcore/js/sale/create/panel.js',
                36 => '/bundles/coreshoporder/pimcore/js/sale/create/abstractStep.js',
                37 => '/bundles/coreshoporder/pimcore/js/sale/create/step/preparation.js',
                38 => '/bundles/coreshoporder/pimcore/js/sale/create/step/base.js',
                39 => '/bundles/coreshoporder/pimcore/js/sale/create/step/products.js',
                40 => '/bundles/coreshoporder/pimcore/js/sale/create/step/address.js',
                41 => '/bundles/coreshoporder/pimcore/js/sale/create/step/rules.js',
                42 => '/bundles/coreshoporder/pimcore/js/sale/create/step/payment.js',
                43 => '/bundles/coreshoporder/pimcore/js/sale/create/step/totals.js',
                44 => '/bundles/coreshoporder/pimcore/js/order/list.js',
                45 => '/bundles/coreshoporder/pimcore/js/order/create/panel.js',
                46 => '/bundles/coreshoporder/pimcore/js/helper.js',
                47 => '/bundles/coreshoporder/pimcore/js/order/detail.js',
                48 => '/bundles/coreshoporder/pimcore/js/order/invoice.js',
                49 => '/bundles/coreshoporder/pimcore/js/order/shipment.js',
                50 => '/bundles/coreshoporder/pimcore/js/order/createPayment.js',
                51 => '/bundles/coreshoporder/pimcore/js/order/editPayment.js',
                52 => '/bundles/coreshoporder/pimcore/js/order/invoice/render.js',
                53 => '/bundles/coreshoporder/pimcore/js/order/shipment/render.js',
                54 => '/bundles/coreshoporder/pimcore/js/quote/list.js',
                55 => '/bundles/coreshoporder/pimcore/js/quote/detail.js',
                56 => '/bundles/coreshoporder/pimcore/js/quote/create/panel.js',
                57 => '/bundles/coreshoporder/pimcore/js/coreExtension/data/coreShopCartPriceRule.js',
                58 => '/bundles/coreshoporder/pimcore/js/coreExtension/tags/coreShopCartPriceRule.js',
                59 => '/bundles/coreshopcustomer/pimcore/js/resource.js',
                60 => '/bundles/coreshopproduct/pimcore/js/resource.js',
                61 => '/bundles/coreshopproduct/pimcore/js/grid.js',
                62 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/panel.js',
                63 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/item.js',
                64 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/action.js',
                65 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/condition.js',
                66 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/categories.js',
                67 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/nested.js',
                68 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/products.js',
                69 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/timespan.js',
                70 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/weight.js',
                71 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountAmount.js',
                72 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountPercent.js',
                73 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/price.js',
                74 => '/bundles/coreshopproduct/pimcore/js/specificprice/action.js',
                75 => '/bundles/coreshopproduct/pimcore/js/specificprice//condition.js',
                76 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/price.js',
                77 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountAmount.js',
                78 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountPercent.js',
                79 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/nested.js',
                80 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/timespan.js',
                81 => '/bundles/coreshopproduct/pimcore/js/specificprice/object/item.js',
                82 => '/bundles/coreshopproduct/pimcore/js/coreExtension/data/coreShopProductSpecificPriceRules.js',
                83 => '/bundles/coreshopproduct/pimcore/js/coreExtension/tags/coreShopProductSpecificPriceRules.js',
                84 => '/bundles/coreshopaddress/pimcore/js/resource.js',
                85 => '/bundles/coreshopaddress/pimcore/js/resource/country.js',
                86 => '/bundles/coreshopaddress/pimcore/js/resource/state.js',
                87 => '/bundles/coreshopaddress/pimcore/js/resource/zone.js',
                88 => '/bundles/coreshopaddress/pimcore/js/country/item.js',
                89 => '/bundles/coreshopaddress/pimcore/js/country/panel.js',
                90 => '/bundles/coreshopaddress/pimcore/js/state/item.js',
                91 => '/bundles/coreshopaddress/pimcore/js/state/panel.js',
                92 => '/bundles/coreshopaddress/pimcore/js/zone/item.js',
                93 => '/bundles/coreshopaddress/pimcore/js/zone/panel.js',
                94 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountry.js',
                95 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountry.js',
                96 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountryMultiselect.js',
                97 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountryMultiselect.js',
                98 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopState.js',
                99 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopState.js',
                100 => '/bundles/coreshopcurrency/pimcore/js/resource.js',
                101 => '/bundles/coreshopcurrency/pimcore/js/resource/currency.js',
                102 => '/bundles/coreshopcurrency/pimcore/js/currency/item.js',
                103 => '/bundles/coreshopcurrency/pimcore/js/currency/panel.js',
                104 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrency.js',
                105 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrency.js',
                106 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrencyMultiselect.js',
                107 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrencyMultiselect.js',
                108 => '/bundles/coreshopcurrency/pimcore/js/exchangeRate/panel.js',
                109 => '/bundles/coreshoptaxation/pimcore/js/resource.js',
                110 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRate.js',
                111 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRuleGroup.js',
                112 => '/bundles/coreshoptaxation/pimcore/js/tax/item.js',
                113 => '/bundles/coreshoptaxation/pimcore/js/tax/panel.js',
                114 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/item.js',
                115 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/panel.js',
                116 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/data/coreShopTaxRuleGroup.js',
                117 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/tags/coreShopTaxRuleGroup.js',
                118 => '/bundles/coreshopstore/pimcore/js/resource.js',
                119 => '/bundles/coreshopstore/pimcore/js/resource/store.js',
                120 => '/bundles/coreshopstore/pimcore/js/item.js',
                121 => '/bundles/coreshopstore/pimcore/js/panel.js',
                122 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStore.js',
                123 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStore.js',
                124 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStoreMultiselect.js',
                125 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStoreMultiselect.js',
                126 => '/bundles/coreshopindex/pimcore/js/resource.js',
                127 => '/bundles/coreshopindex/pimcore/js/index/item.js',
                128 => '/bundles/coreshopindex/pimcore/js/index/panel.js',
                129 => '/bundles/coreshopindex/pimcore/js/index/fields.js',
                130 => '/bundles/coreshopindex/pimcore/js/index/getters/abstract.js',
                131 => '/bundles/coreshopindex/pimcore/js/index/getters/brick.js',
                132 => '/bundles/coreshopindex/pimcore/js/index/getters/classificationstore.js',
                133 => '/bundles/coreshopindex/pimcore/js/index/getters/fieldcollection.js',
                134 => '/bundles/coreshopindex/pimcore/js/index/getters/localizedfield.js',
                135 => '/bundles/coreshopindex/pimcore/js/index/interpreters/abstract.js',
                136 => '/bundles/coreshopindex/pimcore/js/index/interpreters/objectproperty.js',
                137 => '/bundles/coreshopindex/pimcore/js/index/objecttype/abstract.js',
                138 => '/bundles/coreshopindex/pimcore/js/index/type/abstract.js',
                139 => '/bundles/coreshopindex/pimcore/js/index/type/elasticsearch.js',
                140 => '/bundles/coreshopindex/pimcore/js/filter/item.js',
                141 => '/bundles/coreshopindex/pimcore/js/filter/panel.js',
                142 => '/bundles/coreshopindex/pimcore/js/filter/abstract.js',
                143 => '/bundles/coreshopindex/pimcore/js/filter/condition.js',
                144 => '/bundles/coreshopindex/pimcore/js/filter/similarity.js',
                145 => '/bundles/coreshopindex/pimcore/js/filter/conditions/abstract.js',
                146 => '/bundles/coreshopindex/pimcore/js/filter/conditions/boolean.js',
                147 => '/bundles/coreshopindex/pimcore/js/filter/conditions/combined.js',
                148 => '/bundles/coreshopindex/pimcore/js/filter/conditions/multiselect.js',
                149 => '/bundles/coreshopindex/pimcore/js/filter/conditions/range.js',
                150 => '/bundles/coreshopindex/pimcore/js/filter/conditions/select.js',
                151 => '/bundles/coreshopindex/pimcore/js/filter/similarities/abstract.js',
                152 => '/bundles/coreshopindex/pimcore/js/filter/similarities/field.js',
                153 => '/bundles/coreshopindex/pimcore/js/coreExtension/data/coreShopFilter.js',
                154 => '/bundles/coreshopindex/pimcore/js/coreExtension/tags/coreShopFilter.js',
                155 => '/bundles/coreshopshipping/pimcore/js/resource.js',
                156 => '/bundles/coreshopshipping/pimcore/js/carrier/item.js',
                157 => '/bundles/coreshopshipping/pimcore/js/carrier/panel.js',
                158 => '/bundles/coreshopshipping/pimcore/js/shippingrule/item.js',
                159 => '/bundles/coreshopshipping/pimcore/js/shippingrule/panel.js',
                160 => '/bundles/coreshopshipping/pimcore/js/shippingrule/action.js',
                161 => '/bundles/coreshopshipping/pimcore/js/shippingrule/condition.js',
                162 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionAmount.js',
                163 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionPercent.js',
                164 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountAmount.js',
                165 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountPercent.js',
                166 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/price.js',
                167 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/shippingRule.js',
                168 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/amount.js',
                169 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/dimension.js',
                170 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/nested.js',
                171 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/postcodes.js',
                172 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/shippingRule.js',
                173 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/weight.js',
                174 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrier.js',
                175 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrier.js',
                176 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrierMultiselect.js',
                177 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrierMultiselect.js',
                178 => '/bundles/coreshoppayment/pimcore/js/resource.js',
                179 => '/bundles/coreshoppayment/pimcore/js/provider/item.js',
                180 => '/bundles/coreshoppayment/pimcore/js/provider/panel.js',
                181 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/abstract.js',
                182 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/paypal_express_checkout.js',
                183 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/sofort.js',
                184 => '/bundles/coreshoppayment/pimcore/js/coreExtension/data/coreShopPaymentProvider.js',
                185 => '/bundles/coreshoppayment/pimcore/js/coreExtension/tags/coreShopPaymentProvider.js',
                186 => '/bundles/coreshopnotification/pimcore/js/resource.js',
                187 => '/bundles/coreshopnotification/pimcore/js/rule/item.js',
                188 => '/bundles/coreshopnotification/pimcore/js/rule/panel.js',
                189 => '/bundles/coreshopnotification/pimcore/js/rule/action.js',
                190 => '/bundles/coreshopnotification/pimcore/js/rule/condition.js',
                191 => '/bundles/coreshopnotification/pimcore/js/rule/actions/mail.js',
                192 => '/bundles/coreshopnotification/pimcore/js/rule/actions/orderMail.js',
                193 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/invoice/invoiceState.js',
                194 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/messaging/messageType.js',
                195 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/carriers.js',
                196 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/orderState.js',
                197 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/payment.js',
                198 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/payment/paymentState.js',
                199 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/shipment/shipmentState.js',
                200 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/user/userType.js',
                201 => '/bundles/coreshopcore/pimcore/js/payment/provider/item.js',
                202 => '/bundles/coreshopcore/pimcore/js/order/detail.js',
                203 => '/bundles/coreshopcore/pimcore/js/order/shipment.js',
                204 => '/bundles/coreshopcore/pimcore/js/sale/create/step/base.js',
                205 => '/bundles/coreshopcore/pimcore/js/sale/create/step/shipping.js',
                206 => '/bundles/coreshopcore/pimcore/js/quote/list.js',
                207 => '/bundles/coreshopcore/pimcore/js/store/item.js',
                208 => '/bundles/coreshopcore/pimcore/js/address/country/item.js',
                209 => '/bundles/coreshopcore/pimcore/js/report/abstract.js',
                210 => '/bundles/coreshopcore/pimcore/js/report/monitoring/abstract.js',
                211 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/disabledProducts.js',
                212 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/emptyCategories.js',
                213 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/outOfStockProducts.js',
                214 => '/bundles/coreshopcore/pimcore/js/report/reports/carriers.js',
                215 => '/bundles/coreshopcore/pimcore/js/report/reports/carts.js',
                216 => '/bundles/coreshopcore/pimcore/js/report/reports/carts_abandoned.js',
                217 => '/bundles/coreshopcore/pimcore/js/report/reports/categories.js',
                218 => '/bundles/coreshopcore/pimcore/js/report/reports/customers.js',
                219 => '/bundles/coreshopcore/pimcore/js/report/reports/payment_providers.js',
                220 => '/bundles/coreshopcore/pimcore/js/report/reports/products.js',
                221 => '/bundles/coreshopcore/pimcore/js/report/reports/sales.js',
                222 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/ordersAndCartsFromLastDays.js',
                223 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/salesFromLastDays.js',
                224 => '/bundles/coreshopcore/pimcore/js/object/variantGenerator.js',
                225 => '/bundles/coreshopcore/pimcore/js/shipping/carrier/item.js',
                226 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/categories.js',
                227 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/countries.js',
                228 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/currencies.js',
                229 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customerGroups.js',
                230 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customers.js',
                231 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/products.js',
                232 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/stores.js',
                233 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/zones.js',
                234 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/countries.js',
                235 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/currencies.js',
                236 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customerGroups.js',
                237 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customers.js',
                238 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/quantity.js',
                239 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/stores.js',
                240 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/zones.js',
                241 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/countries.js',
                242 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/currencies.js',
                243 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customerGroups.js',
                244 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customers.js',
                245 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/stores.js',
                246 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/zones.js',
                247 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/freeShipping.js',
                248 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/giftProduct.js',
                249 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/carriers.js',
                250 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/categories.js',
                251 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/countries.js',
                252 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/currencies.js',
                253 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customerGroups.js',
                254 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customers.js',
                255 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/products.js',
                256 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/stores.js',
                257 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/zones.js',
                258 => '/bundles/coreshopcore/pimcore/js/taxation/taxrulegroup/item.js',
                259 => '/bundles/coreshopcore/pimcore/js/coreExtension/data/coreShopStorePrice.js',
                260 => '/bundles/coreshopcore/pimcore/js/coreExtension/tags/coreShopStorePrice.js',
                261 => '/bundles/coreshopcore/pimcore/js/settings.js',
                262 => '/bundles/coreshopcore/pimcore/js/helpers.js',
                263 => '/bundles/coreshopcore/pimcore/js/coreshop.js',
            ),
            'core_shop_resource.pimcore.admin.js' => array(
                0 => '/bundles/coreshopresource/pimcore/js/broker.js',
                1 => '/bundles/coreshopresource/pimcore/js/global.js',
                2 => '/bundles/coreshopresource/pimcore/js/resource.js',
                3 => '/bundles/coreshopresource/pimcore/js/resource/panel.js',
                4 => '/bundles/coreshopresource/pimcore/js/resource/item.js',
                5 => '/bundles/coreshopresource/pimcore/js/resource/comboBox.js',
                6 => '/bundles/coreshopresource/pimcore/js/object/elementHref.js',
                7 => '/bundles/coreshopresource/pimcore/js/object/objectMultihref.js',
                8 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/data.js',
                9 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/dataMultiselect.js',
                10 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/select.js',
                11 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/select.js',
                12 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/multiselect.js',
            ),
            'resources.admin.js' => array(
                0 => '/bundles/coreshopresource/pimcore/js/broker.js',
                1 => '/bundles/coreshopresource/pimcore/js/global.js',
                2 => '/bundles/coreshopresource/pimcore/js/resource.js',
                3 => '/bundles/coreshopresource/pimcore/js/resource/panel.js',
                4 => '/bundles/coreshopresource/pimcore/js/resource/item.js',
                5 => '/bundles/coreshopresource/pimcore/js/resource/comboBox.js',
                6 => '/bundles/coreshopresource/pimcore/js/object/elementHref.js',
                7 => '/bundles/coreshopresource/pimcore/js/object/objectMultihref.js',
                8 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/data.js',
                9 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/dataMultiselect.js',
                10 => '/bundles/coreshopresource/pimcore/js/coreExtension/data/select.js',
                11 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/select.js',
                12 => '/bundles/coreshopresource/pimcore/js/coreExtension/tags/multiselect.js',
                13 => '/bundles/coreshopmoney/pimcore/js/coreExtension/data/coreShopMoney.js',
                14 => '/bundles/coreshopmoney/pimcore/js/coreExtension/tags/coreShopMoney.js',
                15 => '/bundles/coreshoprule/pimcore/js/rules/panel.js',
                16 => '/bundles/coreshoprule/pimcore/js/rules/item.js',
                17 => '/bundles/coreshoprule/pimcore/js/rules/abstract.js',
                18 => '/bundles/coreshoprule/pimcore/js/rules/condition.js',
                19 => '/bundles/coreshoprule/pimcore/js/rules/action.js',
                20 => '/bundles/coreshoprule/pimcore/js/rules/actions/abstract.js',
                21 => '/bundles/coreshoprule/pimcore/js/rules/conditions/abstract.js',
                22 => '/bundles/coreshoporder/pimcore/js/resource.js',
                23 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/panel.js',
                24 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/item.js',
                25 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/action.js',
                26 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/condition.js',
                27 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountAmount.js',
                28 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountPercent.js',
                29 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/amount.js',
                30 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/nested.js',
                31 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/timespan.js',
                32 => '/bundles/coreshoporder/pimcore/js/sale/detail.js',
                33 => '/bundles/coreshoporder/pimcore/js/sale/list.js',
                34 => '/bundles/coreshoporder/pimcore/js/sale/create/eventManager.js',
                35 => '/bundles/coreshoporder/pimcore/js/sale/create/panel.js',
                36 => '/bundles/coreshoporder/pimcore/js/sale/create/abstractStep.js',
                37 => '/bundles/coreshoporder/pimcore/js/sale/create/step/preparation.js',
                38 => '/bundles/coreshoporder/pimcore/js/sale/create/step/base.js',
                39 => '/bundles/coreshoporder/pimcore/js/sale/create/step/products.js',
                40 => '/bundles/coreshoporder/pimcore/js/sale/create/step/address.js',
                41 => '/bundles/coreshoporder/pimcore/js/sale/create/step/rules.js',
                42 => '/bundles/coreshoporder/pimcore/js/sale/create/step/payment.js',
                43 => '/bundles/coreshoporder/pimcore/js/sale/create/step/totals.js',
                44 => '/bundles/coreshoporder/pimcore/js/order/list.js',
                45 => '/bundles/coreshoporder/pimcore/js/order/create/panel.js',
                46 => '/bundles/coreshoporder/pimcore/js/helper.js',
                47 => '/bundles/coreshoporder/pimcore/js/order/detail.js',
                48 => '/bundles/coreshoporder/pimcore/js/order/invoice.js',
                49 => '/bundles/coreshoporder/pimcore/js/order/shipment.js',
                50 => '/bundles/coreshoporder/pimcore/js/order/createPayment.js',
                51 => '/bundles/coreshoporder/pimcore/js/order/editPayment.js',
                52 => '/bundles/coreshoporder/pimcore/js/order/invoice/render.js',
                53 => '/bundles/coreshoporder/pimcore/js/order/shipment/render.js',
                54 => '/bundles/coreshoporder/pimcore/js/quote/list.js',
                55 => '/bundles/coreshoporder/pimcore/js/quote/detail.js',
                56 => '/bundles/coreshoporder/pimcore/js/quote/create/panel.js',
                57 => '/bundles/coreshoporder/pimcore/js/coreExtension/data/coreShopCartPriceRule.js',
                58 => '/bundles/coreshoporder/pimcore/js/coreExtension/tags/coreShopCartPriceRule.js',
                59 => '/bundles/coreshopcustomer/pimcore/js/resource.js',
                60 => '/bundles/coreshopproduct/pimcore/js/resource.js',
                61 => '/bundles/coreshopproduct/pimcore/js/grid.js',
                62 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/panel.js',
                63 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/item.js',
                64 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/action.js',
                65 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/condition.js',
                66 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/categories.js',
                67 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/nested.js',
                68 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/products.js',
                69 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/timespan.js',
                70 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/weight.js',
                71 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountAmount.js',
                72 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountPercent.js',
                73 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/price.js',
                74 => '/bundles/coreshopproduct/pimcore/js/specificprice/action.js',
                75 => '/bundles/coreshopproduct/pimcore/js/specificprice//condition.js',
                76 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/price.js',
                77 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountAmount.js',
                78 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountPercent.js',
                79 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/nested.js',
                80 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/timespan.js',
                81 => '/bundles/coreshopproduct/pimcore/js/specificprice/object/item.js',
                82 => '/bundles/coreshopproduct/pimcore/js/coreExtension/data/coreShopProductSpecificPriceRules.js',
                83 => '/bundles/coreshopproduct/pimcore/js/coreExtension/tags/coreShopProductSpecificPriceRules.js',
                84 => '/bundles/coreshopaddress/pimcore/js/resource.js',
                85 => '/bundles/coreshopaddress/pimcore/js/resource/country.js',
                86 => '/bundles/coreshopaddress/pimcore/js/resource/state.js',
                87 => '/bundles/coreshopaddress/pimcore/js/resource/zone.js',
                88 => '/bundles/coreshopaddress/pimcore/js/country/item.js',
                89 => '/bundles/coreshopaddress/pimcore/js/country/panel.js',
                90 => '/bundles/coreshopaddress/pimcore/js/state/item.js',
                91 => '/bundles/coreshopaddress/pimcore/js/state/panel.js',
                92 => '/bundles/coreshopaddress/pimcore/js/zone/item.js',
                93 => '/bundles/coreshopaddress/pimcore/js/zone/panel.js',
                94 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountry.js',
                95 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountry.js',
                96 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountryMultiselect.js',
                97 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountryMultiselect.js',
                98 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopState.js',
                99 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopState.js',
                100 => '/bundles/coreshopcurrency/pimcore/js/resource.js',
                101 => '/bundles/coreshopcurrency/pimcore/js/resource/currency.js',
                102 => '/bundles/coreshopcurrency/pimcore/js/currency/item.js',
                103 => '/bundles/coreshopcurrency/pimcore/js/currency/panel.js',
                104 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrency.js',
                105 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrency.js',
                106 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrencyMultiselect.js',
                107 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrencyMultiselect.js',
                108 => '/bundles/coreshopcurrency/pimcore/js/exchangeRate/panel.js',
                109 => '/bundles/coreshoptaxation/pimcore/js/resource.js',
                110 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRate.js',
                111 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRuleGroup.js',
                112 => '/bundles/coreshoptaxation/pimcore/js/tax/item.js',
                113 => '/bundles/coreshoptaxation/pimcore/js/tax/panel.js',
                114 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/item.js',
                115 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/panel.js',
                116 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/data/coreShopTaxRuleGroup.js',
                117 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/tags/coreShopTaxRuleGroup.js',
                118 => '/bundles/coreshopstore/pimcore/js/resource.js',
                119 => '/bundles/coreshopstore/pimcore/js/resource/store.js',
                120 => '/bundles/coreshopstore/pimcore/js/item.js',
                121 => '/bundles/coreshopstore/pimcore/js/panel.js',
                122 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStore.js',
                123 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStore.js',
                124 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStoreMultiselect.js',
                125 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStoreMultiselect.js',
                126 => '/bundles/coreshopindex/pimcore/js/resource.js',
                127 => '/bundles/coreshopindex/pimcore/js/index/item.js',
                128 => '/bundles/coreshopindex/pimcore/js/index/panel.js',
                129 => '/bundles/coreshopindex/pimcore/js/index/fields.js',
                130 => '/bundles/coreshopindex/pimcore/js/index/getters/abstract.js',
                131 => '/bundles/coreshopindex/pimcore/js/index/getters/brick.js',
                132 => '/bundles/coreshopindex/pimcore/js/index/getters/classificationstore.js',
                133 => '/bundles/coreshopindex/pimcore/js/index/getters/fieldcollection.js',
                134 => '/bundles/coreshopindex/pimcore/js/index/getters/localizedfield.js',
                135 => '/bundles/coreshopindex/pimcore/js/index/interpreters/abstract.js',
                136 => '/bundles/coreshopindex/pimcore/js/index/interpreters/objectproperty.js',
                137 => '/bundles/coreshopindex/pimcore/js/index/objecttype/abstract.js',
                138 => '/bundles/coreshopindex/pimcore/js/index/type/abstract.js',
                139 => '/bundles/coreshopindex/pimcore/js/index/type/elasticsearch.js',
                140 => '/bundles/coreshopindex/pimcore/js/filter/item.js',
                141 => '/bundles/coreshopindex/pimcore/js/filter/panel.js',
                142 => '/bundles/coreshopindex/pimcore/js/filter/abstract.js',
                143 => '/bundles/coreshopindex/pimcore/js/filter/condition.js',
                144 => '/bundles/coreshopindex/pimcore/js/filter/similarity.js',
                145 => '/bundles/coreshopindex/pimcore/js/filter/conditions/abstract.js',
                146 => '/bundles/coreshopindex/pimcore/js/filter/conditions/boolean.js',
                147 => '/bundles/coreshopindex/pimcore/js/filter/conditions/combined.js',
                148 => '/bundles/coreshopindex/pimcore/js/filter/conditions/multiselect.js',
                149 => '/bundles/coreshopindex/pimcore/js/filter/conditions/range.js',
                150 => '/bundles/coreshopindex/pimcore/js/filter/conditions/select.js',
                151 => '/bundles/coreshopindex/pimcore/js/filter/similarities/abstract.js',
                152 => '/bundles/coreshopindex/pimcore/js/filter/similarities/field.js',
                153 => '/bundles/coreshopindex/pimcore/js/coreExtension/data/coreShopFilter.js',
                154 => '/bundles/coreshopindex/pimcore/js/coreExtension/tags/coreShopFilter.js',
                155 => '/bundles/coreshopshipping/pimcore/js/resource.js',
                156 => '/bundles/coreshopshipping/pimcore/js/carrier/item.js',
                157 => '/bundles/coreshopshipping/pimcore/js/carrier/panel.js',
                158 => '/bundles/coreshopshipping/pimcore/js/shippingrule/item.js',
                159 => '/bundles/coreshopshipping/pimcore/js/shippingrule/panel.js',
                160 => '/bundles/coreshopshipping/pimcore/js/shippingrule/action.js',
                161 => '/bundles/coreshopshipping/pimcore/js/shippingrule/condition.js',
                162 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionAmount.js',
                163 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionPercent.js',
                164 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountAmount.js',
                165 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountPercent.js',
                166 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/price.js',
                167 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/shippingRule.js',
                168 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/amount.js',
                169 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/dimension.js',
                170 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/nested.js',
                171 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/postcodes.js',
                172 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/shippingRule.js',
                173 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/weight.js',
                174 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrier.js',
                175 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrier.js',
                176 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrierMultiselect.js',
                177 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrierMultiselect.js',
                178 => '/bundles/coreshoppayment/pimcore/js/resource.js',
                179 => '/bundles/coreshoppayment/pimcore/js/provider/item.js',
                180 => '/bundles/coreshoppayment/pimcore/js/provider/panel.js',
                181 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/abstract.js',
                182 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/paypal_express_checkout.js',
                183 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/sofort.js',
                184 => '/bundles/coreshoppayment/pimcore/js/coreExtension/data/coreShopPaymentProvider.js',
                185 => '/bundles/coreshoppayment/pimcore/js/coreExtension/tags/coreShopPaymentProvider.js',
                186 => '/bundles/coreshopnotification/pimcore/js/resource.js',
                187 => '/bundles/coreshopnotification/pimcore/js/rule/item.js',
                188 => '/bundles/coreshopnotification/pimcore/js/rule/panel.js',
                189 => '/bundles/coreshopnotification/pimcore/js/rule/action.js',
                190 => '/bundles/coreshopnotification/pimcore/js/rule/condition.js',
                191 => '/bundles/coreshopnotification/pimcore/js/rule/actions/mail.js',
                192 => '/bundles/coreshopnotification/pimcore/js/rule/actions/orderMail.js',
                193 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/invoice/invoiceState.js',
                194 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/messaging/messageType.js',
                195 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/carriers.js',
                196 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/orderState.js',
                197 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/payment.js',
                198 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/payment/paymentState.js',
                199 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/shipment/shipmentState.js',
                200 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/user/userType.js',
                201 => '/bundles/coreshopcore/pimcore/js/payment/provider/item.js',
                202 => '/bundles/coreshopcore/pimcore/js/order/detail.js',
                203 => '/bundles/coreshopcore/pimcore/js/order/shipment.js',
                204 => '/bundles/coreshopcore/pimcore/js/sale/create/step/base.js',
                205 => '/bundles/coreshopcore/pimcore/js/sale/create/step/shipping.js',
                206 => '/bundles/coreshopcore/pimcore/js/quote/list.js',
                207 => '/bundles/coreshopcore/pimcore/js/store/item.js',
                208 => '/bundles/coreshopcore/pimcore/js/address/country/item.js',
                209 => '/bundles/coreshopcore/pimcore/js/report/abstract.js',
                210 => '/bundles/coreshopcore/pimcore/js/report/monitoring/abstract.js',
                211 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/disabledProducts.js',
                212 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/emptyCategories.js',
                213 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/outOfStockProducts.js',
                214 => '/bundles/coreshopcore/pimcore/js/report/reports/carriers.js',
                215 => '/bundles/coreshopcore/pimcore/js/report/reports/carts.js',
                216 => '/bundles/coreshopcore/pimcore/js/report/reports/carts_abandoned.js',
                217 => '/bundles/coreshopcore/pimcore/js/report/reports/categories.js',
                218 => '/bundles/coreshopcore/pimcore/js/report/reports/customers.js',
                219 => '/bundles/coreshopcore/pimcore/js/report/reports/payment_providers.js',
                220 => '/bundles/coreshopcore/pimcore/js/report/reports/products.js',
                221 => '/bundles/coreshopcore/pimcore/js/report/reports/sales.js',
                222 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/ordersAndCartsFromLastDays.js',
                223 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/salesFromLastDays.js',
                224 => '/bundles/coreshopcore/pimcore/js/object/variantGenerator.js',
                225 => '/bundles/coreshopcore/pimcore/js/shipping/carrier/item.js',
                226 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/categories.js',
                227 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/countries.js',
                228 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/currencies.js',
                229 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customerGroups.js',
                230 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customers.js',
                231 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/products.js',
                232 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/stores.js',
                233 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/zones.js',
                234 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/countries.js',
                235 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/currencies.js',
                236 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customerGroups.js',
                237 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customers.js',
                238 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/quantity.js',
                239 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/stores.js',
                240 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/zones.js',
                241 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/countries.js',
                242 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/currencies.js',
                243 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customerGroups.js',
                244 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customers.js',
                245 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/stores.js',
                246 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/zones.js',
                247 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/freeShipping.js',
                248 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/giftProduct.js',
                249 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/carriers.js',
                250 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/categories.js',
                251 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/countries.js',
                252 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/currencies.js',
                253 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customerGroups.js',
                254 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customers.js',
                255 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/products.js',
                256 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/stores.js',
                257 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/zones.js',
                258 => '/bundles/coreshopcore/pimcore/js/taxation/taxrulegroup/item.js',
                259 => '/bundles/coreshopcore/pimcore/js/coreExtension/data/coreShopStorePrice.js',
                260 => '/bundles/coreshopcore/pimcore/js/coreExtension/tags/coreShopStorePrice.js',
                261 => '/bundles/coreshopcore/pimcore/js/settings.js',
                262 => '/bundles/coreshopcore/pimcore/js/helpers.js',
                263 => '/bundles/coreshopcore/pimcore/js/coreshop.js',
            ),
            'coreshop.orm.repository.class' => 'CoreShop\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'coreshop.translation.translatable_listener.doctrine.orm.class' => 'CoreShop\\Bundle\\ResourceBundle\\EventListener\\ORMTranslatableListener',
            'core_shop_money.pimcore.admin.js' => array(
                0 => '/bundles/coreshopmoney/pimcore/js/coreExtension/data/coreShopMoney.js',
                1 => '/bundles/coreshopmoney/pimcore/js/coreExtension/tags/coreShopMoney.js',
            ),
            'coreshop.application.pimcore.admin.css' => array(
                0 => '/bundles/coreshopmoney/pimcore/css/money.css',
                1 => '/bundles/coreshoprule/pimcore/css/rule.css',
                2 => '/bundles/coreshoporder/pimcore/css/order.css',
                3 => '/bundles/coreshopcustomer/pimcore/css/customer.css',
                4 => '/bundles/coreshopproduct/pimcore/css/product.css',
                5 => '/bundles/coreshopaddress/pimcore/css/address.css',
                6 => '/bundles/coreshopcurrency/pimcore/css/currency.css',
                7 => '/bundles/coreshoptaxation/pimcore/css/taxation.css',
                8 => '/bundles/coreshopstore/pimcore/css/store.css',
                9 => '/bundles/coreshopindex/pimcore/css/index.css',
                10 => '/bundles/coreshopshipping/pimcore/css/shipping.css',
                11 => '/bundles/coreshoppayment/pimcore/css/payment.css',
                12 => '/bundles/coreshopnotification/pimcore/css/notification.css',
                13 => '/bundles/coreshopcore/pimcore/css/core.css',
            ),
            'core_shop_money.pimcore.admin.css' => array(
                0 => '/bundles/coreshopmoney/pimcore/css/money.css',
            ),
            'resources.admin.css' => array(
                0 => '/bundles/coreshopmoney/pimcore/css/money.css',
                1 => '/bundles/coreshoprule/pimcore/css/rule.css',
                2 => '/bundles/coreshoporder/pimcore/css/order.css',
                3 => '/bundles/coreshopcustomer/pimcore/css/customer.css',
                4 => '/bundles/coreshopproduct/pimcore/css/product.css',
                5 => '/bundles/coreshopaddress/pimcore/css/address.css',
                6 => '/bundles/coreshopcurrency/pimcore/css/currency.css',
                7 => '/bundles/coreshoptaxation/pimcore/css/taxation.css',
                8 => '/bundles/coreshopstore/pimcore/css/store.css',
                9 => '/bundles/coreshopindex/pimcore/css/index.css',
                10 => '/bundles/coreshopshipping/pimcore/css/shipping.css',
                11 => '/bundles/coreshoppayment/pimcore/css/payment.css',
                12 => '/bundles/coreshopnotification/pimcore/css/notification.css',
                13 => '/bundles/coreshopcore/pimcore/css/core.css',
            ),
            'core_shop_rule.driver.doctrine/orm' => true,
            'core_shop_rule.driver' => 'doctrine/orm',
            'coreshop.resources' => array(
                'coreshop.rule_condition' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Rule\\Model\\Condition',
                        'interface' => 'CoreShop\\Component\\Rule\\Model\\ConditionInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'coreshop.rule_action' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Rule\\Model\\Action',
                        'interface' => 'CoreShop\\Component\\Rule\\Model\\ActionInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'coreshop.configuration' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\Configuration',
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\ConfigurationRepository',
                        'admin_controller' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ConfigurationController',
                        'interface' => 'CoreShop\\Component\\Configuration\\Model\\ConfigurationInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\ConfigurationBundle\\Form\\Type\\ConfigurationType',
                    ),
                ),
                'coreshop.cart_price_rule' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'cart_price_rule',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Order\\Model\\CartPriceRule',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\CartPriceRuleController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\OrderBundle\\Form\\Type\\CartPriceRuleType',
                    ),
                ),
                'coreshop.cart_price_rule_voucher_code' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCodeInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Doctrine\\ORM\\CartPriceRuleVoucherRepository',
                    ),
                ),
                'coreshop.product_price_rule' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'product_price_rule',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Product\\Model\\ProductPriceRule',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ProductPriceRuleInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductPriceRuleController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductPriceRuleRepository',
                        'form' => 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductPriceRuleType',
                    ),
                ),
                'coreshop.product_specific_price_rule' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRuleInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductSpecificPriceRuleController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductSpecificPriceRuleRepository',
                        'form' => 'CoreShop\\Bundle\\ProductBundle\\Form\\Type\\ProductSpecificPriceRuleType',
                    ),
                ),
                'coreshop.country' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\Country',
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CountryRepository',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\CountryInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryType',
                    ),
                    'permission' => 'country',
                    'translation' => array(
                        'classes' => array(
                            'model' => 'CoreShop\\Component\\Address\\Model\\CountryTranslation',
                            'interface' => 'CoreShop\\Component\\Address\\Model\\CountryTranslationInterface',
                            'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                            'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryTranslationType',
                        ),
                    ),
                ),
                'coreshop.country_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Address\\Model\\CountryTranslation',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\CountryTranslationInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\CountryTranslationType',
                    ),
                ),
                'coreshop.zone' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'zone',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Address\\Model\\Zone',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\ZoneInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\ZoneType',
                    ),
                ),
                'coreshop.state' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'state',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Address\\Model\\State',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\StateInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'CoreShop\\Component\\Address\\Model\\StateTranslation',
                            'interface' => 'CoreShop\\Component\\Address\\Model\\StateTranslationInterface',
                            'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                            'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateTranslationType',
                        ),
                    ),
                ),
                'coreshop.state_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Address\\Model\\StateTranslation',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\StateTranslationInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\AddressBundle\\Form\\Type\\StateTranslationType',
                    ),
                ),
                'coreshop.currency' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\Currency',
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CurrencyRepository',
                        'interface' => 'CoreShop\\Component\\Currency\\Model\\CurrencyInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType',
                    ),
                    'permission' => 'currency',
                ),
                'coreshop.exchange_rate' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'exchange_rate',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Currency\\Model\\ExchangeRate',
                        'interface' => 'CoreShop\\Component\\Currency\\Model\\ExchangeRateInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\CurrencyBundle\\Controller\\ExchangeRateController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\CurrencyBundle\\Doctrine\\ORM\\ExchangeRateRepository',
                        'form' => 'CoreShop\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType',
                    ),
                ),
                'coreshop.tax_rule' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\TaxRule',
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\TaxRuleRepository',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRuleInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleType',
                    ),
                ),
                'coreshop.tax_rule_group' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\TaxRuleGroup',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRuleGroupInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\TaxationBundle\\Controller\\TaxRuleGroupController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRuleGroupType',
                    ),
                    'permission' => 'tax_rule_group',
                ),
                'coreshop.tax_rate' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'tax_rate',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRate',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation',
                            'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslationInterface',
                            'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                            'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateTranslationType',
                        ),
                    ),
                ),
                'coreshop.tax_rate_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslationInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateTranslationType',
                    ),
                ),
                'coreshop.store' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'repository' => 'CoreShop\\Bundle\\StoreBundle\\Doctrine\\ORM\\StoreRepository',
                        'model' => 'CoreShop\\Component\\Core\\Model\\Store',
                        'interface' => 'CoreShop\\Component\\Store\\Model\\StoreInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\StoreBundle\\Controller\\StoreController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\StoreBundle\\Form\\Type\\StoreType',
                    ),
                    'permission' => 'store',
                ),
                'coreshop.index' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'index',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Index\\Model\\Index',
                        'interface' => 'CoreShop\\Component\\Index\\Model\\IndexInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\IndexController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexType',
                    ),
                ),
                'coreshop.index_column' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Index\\Model\\IndexColumn',
                        'interface' => 'CoreShop\\Component\\Index\\Model\\IndexColumnInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\IndexColumnType',
                    ),
                ),
                'coreshop.filter' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'filter',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Index\\Model\\Filter',
                        'interface' => 'CoreShop\\Component\\Index\\Model\\FilterInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\FilterController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterType',
                    ),
                ),
                'coreshop.filter_condition' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Index\\Model\\FilterCondition',
                        'interface' => 'CoreShop\\Component\\Index\\Model\\FilterConditionInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\IndexBundle\\Form\\Type\\FilterConditionType',
                    ),
                ),
                'coreshop.carrier' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\Carrier',
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CarrierRepository',
                        'interface' => 'CoreShop\\Component\\Shipping\\Model\\CarrierInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\CarrierType',
                    ),
                    'permission' => 'carrier',
                ),
                'coreshop.shipping_rule' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'shipping_rule',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRule',
                        'interface' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ShippingBundle\\Controller\\ShippingRuleController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleType',
                    ),
                ),
                'coreshop.shipping_rule_group' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup',
                        'interface' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroupInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\ShippingBundle\\Form\\Type\\ShippingRuleGroupType',
                    ),
                ),
                'coreshop.payment_provider' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Core\\Model\\PaymentProvider',
                        'admin_controller' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\PaymentProviderController',
                        'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderType',
                    ),
                    'permission' => 'payment_provider',
                    'translation' => array(
                        'classes' => array(
                            'model' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation',
                            'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslationInterface',
                            'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                            'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderTranslationType',
                        ),
                    ),
                ),
                'coreshop.payment_provider_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation',
                        'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslationInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'form' => 'CoreShop\\Bundle\\PaymentBundle\\Form\\Type\\PaymentProviderTranslationType',
                    ),
                ),
                'coreshop.payment' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Payment\\Model\\Payment',
                        'interface' => 'CoreShop\\Component\\Payment\\Model\\PaymentInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\PaymentBundle\\Doctrine\\ORM\\PaymentRepository',
                    ),
                ),
                'coreshop.sequence' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Sequence\\Model\\Sequence',
                        'interface' => 'CoreShop\\Component\\Sequence\\Model\\SequenceInterface',
                        'admin_controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Sequence\\Factory\\SequenceFactory',
                        'repository' => 'CoreShop\\Bundle\\SequenceBundle\\Doctrine\\ORM\\SequenceRepository',
                    ),
                ),
                'coreshop.notification_rule' => array(
                    'driver' => 'doctrine/orm',
                    'permission' => 'notification',
                    'classes' => array(
                        'model' => 'CoreShop\\Component\\Notification\\Model\\NotificationRule',
                        'interface' => 'CoreShop\\Component\\Notification\\Model\\NotificationRuleInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                        'repository' => 'CoreShop\\Bundle\\NotificationBundle\\Doctrine\\ORM\\NotificationRuleRepository',
                        'admin_controller' => 'CoreShop\\Bundle\\NotificationBundle\\Controller\\NotificationRuleController',
                        'form' => 'CoreShop\\Bundle\\NotificationBundle\\Form\\Type\\NotificationRuleType',
                    ),
                ),
                'coreshop.gateway_config' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig',
                        'controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'coreshop.payment_security_token' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken',
                        'controller' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
            ),
            'coreshop.model.rule_condition.class' => 'CoreShop\\Component\\Rule\\Model\\Condition',
            'coreshop.admin_controller.rule_condition.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.rule_condition.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.rule_action.class' => 'CoreShop\\Component\\Rule\\Model\\Action',
            'coreshop.admin_controller.rule_action.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.rule_action.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'core_shop_rule.pimcore.admin.js' => array(
                0 => '/bundles/coreshoprule/pimcore/js/rules/panel.js',
                1 => '/bundles/coreshoprule/pimcore/js/rules/item.js',
                2 => '/bundles/coreshoprule/pimcore/js/rules/abstract.js',
                3 => '/bundles/coreshoprule/pimcore/js/rules/condition.js',
                4 => '/bundles/coreshoprule/pimcore/js/rules/action.js',
                5 => '/bundles/coreshoprule/pimcore/js/rules/actions/abstract.js',
                6 => '/bundles/coreshoprule/pimcore/js/rules/conditions/abstract.js',
            ),
            'core_shop_rule.pimcore.admin.css' => array(
                0 => '/bundles/coreshoprule/pimcore/css/rule.css',
            ),
            'core_shop_configuration.driver.doctrine/orm' => true,
            'core_shop_configuration.driver' => 'doctrine/orm',
            'coreshop.model.configuration.class' => 'CoreShop\\Component\\Core\\Model\\Configuration',
            'coreshop.admin_controller.configuration.class' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ConfigurationController',
            'coreshop.factory.configuration.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.configuration.class' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\ConfigurationRepository',
            'coreshop.form.type.configuration.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_order.driver.doctrine/orm' => true,
            'core_shop_order.driver' => 'pimcore',
            'coreshop.model.cart_price_rule.class' => 'CoreShop\\Component\\Order\\Model\\CartPriceRule',
            'coreshop.admin_controller.cart_price_rule.class' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\CartPriceRuleController',
            'coreshop.factory.cart_price_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.cart_price_rule_voucher_code.class' => 'CoreShop\\Component\\Order\\Model\\CartPriceRuleVoucherCode',
            'coreshop.factory.cart_price_rule_voucher_code.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.cart_price_rule_voucher_code.class' => 'CoreShop\\Bundle\\OrderBundle\\Doctrine\\ORM\\CartPriceRuleVoucherRepository',
            'core_shop_order.driver.pimcore' => true,
            'coreshop.pimcore' => array(
                'coreshop.cart' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/carts',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCart.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCart',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\CartRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.cart_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCartItem.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCartItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                    'path' => 'items',
                ),
                'coreshop.order' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/orders',
                    'classes' => array(
                        'pimcore_controller' => array(
                            'default' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderController',
                            'creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderCreationController',
                        ),
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrder.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrder',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_shipment' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrderShipment.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipment',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderShipmentRepository',
                        'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderShipmentController',
                        'type' => 'object',
                    ),
                    'path' => 'shipments',
                ),
                'coreshop.quote' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/quotes',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopQuote.json',
                        'pimcore_controller' => array(
                            'creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\QuoteCreationController',
                            'default' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\QuoteController',
                        ),
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopQuote',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_invoice' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'invoices',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoice',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderInvoiceRepository',
                        'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderInvoiceController',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoice.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_invoice_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoiceItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoiceItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_shipment_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipmentItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderShipmentItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.cart_price_rule_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopProposalCartPriceRuleItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\ProposalCartPriceRuleItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/fieldcollections/CoreShopProposalCartPriceRuleItem.json',
                        'type' => 'fieldcollection',
                    ),
                ),
                'coreshop.quote_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopQuoteItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopQuoteItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.customer_group' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_customer',
                    'path' => 'coreshop/customer_groups',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomerGroup.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomerGroup',
                        'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerGroupInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.customer' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_customer',
                    'path' => array(
                        'customer' => 'coreshop/customers',
                        'guest' => 'coreshop/guests',
                    ),
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomer.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomer',
                        'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\CustomerBundle\\Pimcore\\Repository\\CustomerRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.category' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'coreshop/categories',
                    'classes' => array(
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\CategoryRepository',
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopCategory.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCategory',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\CategoryInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.product' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'coreshop/products',
                    'classes' => array(
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\ProductRepository',
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopProduct.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopProduct',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ProductInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.manufacturer' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'manufacturers',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopManufacturer',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ManufacturerInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopProductBundle/Resources/install/pimcore/classes/CoreShopManufacturer.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.address' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_address',
                    'path' => 'addresses',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopAddress',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\AddressInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopAddressBundle/Resources/install/pimcore/classes/CoreShopAddress.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.tax_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_taxation',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopTaxItem',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopTaxationBundle/Resources/install/pimcore/fieldcollections/CoreShopTaxItem.json',
                        'type' => 'fieldcollection',
                    ),
                ),
            ),
            'coreshop.pimcore.classes' => array(
                'coreshop.cart' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/carts',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCart.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCart',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\CartRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.cart_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopCartItem.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCartItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\CartItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                    'path' => 'items',
                ),
                'coreshop.order' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/orders',
                    'classes' => array(
                        'pimcore_controller' => array(
                            'default' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderController',
                            'creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderCreationController',
                        ),
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrder.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrder',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_shipment' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopOrderShipment.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipment',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderShipmentRepository',
                        'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderShipmentController',
                        'type' => 'object',
                    ),
                    'path' => 'shipments',
                ),
                'coreshop.quote' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'coreshop/quotes',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopOrderBundle/CoreShopQuote.json',
                        'pimcore_controller' => array(
                            'creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\QuoteCreationController',
                            'default' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\QuoteController',
                        ),
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopQuote',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_invoice' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'invoices',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoice',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderInvoiceRepository',
                        'pimcore_controller' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderInvoiceController',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoice.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_invoice_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoiceItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderInvoiceItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderInvoiceItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.order_shipment_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipmentItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\OrderShipmentItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopOrderShipmentItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.cart_price_rule_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopProposalCartPriceRuleItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\ProposalCartPriceRuleItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/fieldcollections/CoreShopProposalCartPriceRuleItem.json',
                        'type' => 'fieldcollection',
                    ),
                ),
                'coreshop.quote_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_order',
                    'path' => 'items',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopQuoteItem',
                        'interface' => 'CoreShop\\Component\\Order\\Model\\QuoteItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopOrderBundle/Resources/install/pimcore/classes/CoreShopQuoteItem.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.customer_group' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_customer',
                    'path' => 'coreshop/customer_groups',
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomerGroup.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomerGroup',
                        'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerGroupInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.customer' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_customer',
                    'path' => array(
                        'customer' => 'coreshop/customers',
                        'guest' => 'coreshop/guests',
                    ),
                    'classes' => array(
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopCustomerBundle/CoreShopCustomer.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCustomer',
                        'interface' => 'CoreShop\\Component\\Customer\\Model\\CustomerInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'repository' => 'CoreShop\\Bundle\\CustomerBundle\\Pimcore\\Repository\\CustomerRepository',
                        'type' => 'object',
                    ),
                ),
                'coreshop.category' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'coreshop/categories',
                    'classes' => array(
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\CategoryRepository',
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopCategory.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopCategory',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\CategoryInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.product' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'coreshop/products',
                    'classes' => array(
                        'repository' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\ProductRepository',
                        'install_file' => '@CoreShopCoreBundle/Resources/install/pimcore/classes/CoreShopProductBundle/CoreShopProduct.json',
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopProduct',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ProductInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'type' => 'object',
                    ),
                ),
                'coreshop.manufacturer' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_product',
                    'path' => 'manufacturers',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopManufacturer',
                        'interface' => 'CoreShop\\Component\\Product\\Model\\ManufacturerInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopProductBundle/Resources/install/pimcore/classes/CoreShopManufacturer.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.address' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_address',
                    'path' => 'addresses',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\CoreShopAddress',
                        'interface' => 'CoreShop\\Component\\Address\\Model\\AddressInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopAddressBundle/Resources/install/pimcore/classes/CoreShopAddress.json',
                        'type' => 'object',
                    ),
                ),
                'coreshop.tax_item' => array(
                    'driver' => 'pimcore',
                    'alias' => 'core_shop_taxation',
                    'classes' => array(
                        'model' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopTaxItem',
                        'interface' => 'CoreShop\\Component\\Taxation\\Model\\TaxItemInterface',
                        'factory' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
                        'install_file' => '@CoreShopTaxationBundle/Resources/install/pimcore/fieldcollections/CoreShopTaxItem.json',
                        'type' => 'fieldcollection',
                    ),
                ),
            ),
            'coreshop.model.cart.class' => 'Pimcore\\Model\\DataObject\\CoreShopCart',
            'coreshop.factory.cart.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.cart.class' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\CartRepository',
            'coreshop.folder.cart' => 'coreshop/carts',
            'coreshop.resource.folders' => array(
                'coreshop.folder.cart' => 'coreshop/carts',
                'coreshop.folder.cart_item' => 'items',
                'coreshop.folder.order' => 'coreshop/orders',
                'coreshop.folder.order_shipment' => 'shipments',
                'coreshop.folder.quote' => 'coreshop/quotes',
                'coreshop.folder.order_item' => 'items',
                'coreshop.folder.order_invoice' => 'invoices',
                'coreshop.folder.order_invoice_item' => 'items',
                'coreshop.folder.order_shipment_item' => 'items',
                'coreshop.folder.quote_item' => 'items',
                'coreshop.folder.customer_group' => 'coreshop/customer_groups',
                'coreshop.folder.customer' => 'coreshop/customers',
                'coreshop.folder.guest' => 'coreshop/guests',
                'coreshop.folder.category' => 'coreshop/categories',
                'coreshop.folder.product' => 'coreshop/products',
                'coreshop.folder.manufacturer' => 'manufacturers',
                'coreshop.folder.address' => 'addresses',
            ),
            'coreshop.folders' => array(
                'coreshop.folder.cart' => 'coreshop/carts',
                'coreshop.folder.cart_item' => 'items',
                'coreshop.folder.order' => 'coreshop/orders',
                'coreshop.folder.order_shipment' => 'shipments',
                'coreshop.folder.quote' => 'coreshop/quotes',
                'coreshop.folder.order_item' => 'items',
                'coreshop.folder.order_invoice' => 'invoices',
                'coreshop.folder.order_invoice_item' => 'items',
                'coreshop.folder.order_shipment_item' => 'items',
                'coreshop.folder.quote_item' => 'items',
                'coreshop.folder.customer_group' => 'coreshop/customer_groups',
                'coreshop.folder.customer' => 'coreshop/customers',
                'coreshop.folder.guest' => 'coreshop/guests',
                'coreshop.folder.category' => 'coreshop/categories',
                'coreshop.folder.product' => 'coreshop/products',
                'coreshop.folder.manufacturer' => 'manufacturers',
                'coreshop.folder.address' => 'addresses',
            ),
            'coreshop.model.cart_item.class' => 'Pimcore\\Model\\DataObject\\CoreShopCartItem',
            'coreshop.factory.cart_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.cart_item' => 'items',
            'coreshop.model.order.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrder',
            'coreshop.factory.order.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.order.class' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderRepository',
            'coreshop.folder.order' => 'coreshop/orders',
            'coreshop.model.order_shipment.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipment',
            'coreshop.factory.order_shipment.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.order_shipment.class' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderShipmentRepository',
            'coreshop.folder.order_shipment' => 'shipments',
            'coreshop.model.quote.class' => 'Pimcore\\Model\\DataObject\\CoreShopQuote',
            'coreshop.factory.quote.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.quote' => 'coreshop/quotes',
            'coreshop.model.order_item.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrderItem',
            'coreshop.factory.order_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.order_item' => 'items',
            'coreshop.model.order_invoice.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoice',
            'coreshop.factory.order_invoice.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.order_invoice.class' => 'CoreShop\\Bundle\\OrderBundle\\Pimcore\\Repository\\OrderInvoiceRepository',
            'coreshop.folder.order_invoice' => 'invoices',
            'coreshop.model.order_invoice_item.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrderInvoiceItem',
            'coreshop.factory.order_invoice_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.order_invoice_item' => 'items',
            'coreshop.model.order_shipment_item.class' => 'Pimcore\\Model\\DataObject\\CoreShopOrderShipmentItem',
            'coreshop.factory.order_shipment_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.order_shipment_item' => 'items',
            'coreshop.model.cart_price_rule_item.class' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopProposalCartPriceRuleItem',
            'coreshop.factory.cart_price_rule_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.model.quote_item.class' => 'Pimcore\\Model\\DataObject\\CoreShopQuoteItem',
            'coreshop.factory.quote_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.quote_item' => 'items',
            'core_shop_order.pimcore.admin.js' => array(
                0 => '/bundles/coreshoporder/pimcore/js/resource.js',
                1 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/panel.js',
                2 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/item.js',
                3 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/action.js',
                4 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/condition.js',
                5 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountAmount.js',
                6 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/actions/discountPercent.js',
                7 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/amount.js',
                8 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/nested.js',
                9 => '/bundles/coreshoporder/pimcore/js/cart/pricerules/conditions/timespan.js',
                10 => '/bundles/coreshoporder/pimcore/js/sale/detail.js',
                11 => '/bundles/coreshoporder/pimcore/js/sale/list.js',
                12 => '/bundles/coreshoporder/pimcore/js/sale/create/eventManager.js',
                13 => '/bundles/coreshoporder/pimcore/js/sale/create/panel.js',
                14 => '/bundles/coreshoporder/pimcore/js/sale/create/abstractStep.js',
                15 => '/bundles/coreshoporder/pimcore/js/sale/create/step/preparation.js',
                16 => '/bundles/coreshoporder/pimcore/js/sale/create/step/base.js',
                17 => '/bundles/coreshoporder/pimcore/js/sale/create/step/products.js',
                18 => '/bundles/coreshoporder/pimcore/js/sale/create/step/address.js',
                19 => '/bundles/coreshoporder/pimcore/js/sale/create/step/rules.js',
                20 => '/bundles/coreshoporder/pimcore/js/sale/create/step/payment.js',
                21 => '/bundles/coreshoporder/pimcore/js/sale/create/step/totals.js',
                22 => '/bundles/coreshoporder/pimcore/js/order/list.js',
                23 => '/bundles/coreshoporder/pimcore/js/order/create/panel.js',
                24 => '/bundles/coreshoporder/pimcore/js/helper.js',
                25 => '/bundles/coreshoporder/pimcore/js/order/detail.js',
                26 => '/bundles/coreshoporder/pimcore/js/order/invoice.js',
                27 => '/bundles/coreshoporder/pimcore/js/order/shipment.js',
                28 => '/bundles/coreshoporder/pimcore/js/order/createPayment.js',
                29 => '/bundles/coreshoporder/pimcore/js/order/editPayment.js',
                30 => '/bundles/coreshoporder/pimcore/js/order/invoice/render.js',
                31 => '/bundles/coreshoporder/pimcore/js/order/shipment/render.js',
                32 => '/bundles/coreshoporder/pimcore/js/quote/list.js',
                33 => '/bundles/coreshoporder/pimcore/js/quote/detail.js',
                34 => '/bundles/coreshoporder/pimcore/js/quote/create/panel.js',
                35 => '/bundles/coreshoporder/pimcore/js/coreExtension/data/coreShopCartPriceRule.js',
                36 => '/bundles/coreshoporder/pimcore/js/coreExtension/tags/coreShopCartPriceRule.js',
            ),
            'core_shop_order.pimcore.admin.css' => array(
                0 => '/bundles/coreshoporder/pimcore/css/order.css',
            ),
            'coreshop.resource.permissions' => array(
                0 => 'coreshop_permission_cart_price_rule',
                1 => 'coreshop_permission_order_list',
                2 => 'coreshop_permission_order_detail',
                3 => 'coreshop_permission_order_create',
                4 => 'coreshop_permission_quote_list',
                5 => 'coreshop_permission_quote_detail',
                6 => 'coreshop_permission_quote_create',
                7 => 'coreshop_permission_product_price_rule',
                8 => 'coreshop_permission_country',
                9 => 'coreshop_permission_state',
                10 => 'coreshop_permission_zone',
                11 => 'coreshop_permission_currency',
                12 => 'coreshop_permission_exchange_rate',
                13 => 'coreshop_permission_tax_rate',
                14 => 'coreshop_permission_tax_rule_group',
                15 => 'coreshop_permission_store',
                16 => 'coreshop_permission_index',
                17 => 'coreshop_permission_filter',
                18 => 'coreshop_permission_carrier',
                19 => 'coreshop_permission_shipping_rule',
                20 => 'coreshop_permission_payment_provider',
                21 => 'coreshop_permission_notification',
            ),
            'coreshop.permissions' => array(
                0 => 'coreshop_permission_cart_price_rule',
                1 => 'coreshop_permission_order_list',
                2 => 'coreshop_permission_order_detail',
                3 => 'coreshop_permission_order_create',
                4 => 'coreshop_permission_quote_list',
                5 => 'coreshop_permission_quote_detail',
                6 => 'coreshop_permission_quote_create',
                7 => 'coreshop_permission_product_price_rule',
                8 => 'coreshop_permission_country',
                9 => 'coreshop_permission_state',
                10 => 'coreshop_permission_zone',
                11 => 'coreshop_permission_currency',
                12 => 'coreshop_permission_exchange_rate',
                13 => 'coreshop_permission_tax_rate',
                14 => 'coreshop_permission_tax_rule_group',
                15 => 'coreshop_permission_store',
                16 => 'coreshop_permission_index',
                17 => 'coreshop_permission_filter',
                18 => 'coreshop_permission_carrier',
                19 => 'coreshop_permission_shipping_rule',
                20 => 'coreshop_permission_payment_provider',
                21 => 'coreshop_permission_notification',
            ),
            'coreshop.cart.cleanup.expiration_days' => NULL,
            'coreshop.cart.cleanup.anonymous' => true,
            'coreshop.cart.cleanup.user' => true,
            'coreshop.form.type.cart_price_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.cart_price_rule_generator.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.cart_price_rule.rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.cart_price_rule.rule_action.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.cart_price_rule.rule_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.cart_price_rule.promotion_coupon.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.workflow.manager.order.state_identifier' => 'Order State Change',
            'core_shop_customer.driver.pimcore' => true,
            'core_shop_customer.driver' => 'pimcore',
            'coreshop.model.customer_group.class' => 'Pimcore\\Model\\DataObject\\CoreShopCustomerGroup',
            'coreshop.factory.customer_group.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.customer_group' => 'coreshop/customer_groups',
            'coreshop.model.customer.class' => 'Pimcore\\Model\\DataObject\\CoreShopCustomer',
            'coreshop.factory.customer.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.customer.class' => 'CoreShop\\Bundle\\CustomerBundle\\Pimcore\\Repository\\CustomerRepository',
            'coreshop.folder.customer' => 'coreshop/customers',
            'coreshop.folder.guest' => 'coreshop/guests',
            'core_shop_customer.pimcore.admin.js' => array(
                0 => '/bundles/coreshopcustomer/pimcore/js/resource.js',
            ),
            'core_shop_customer.pimcore.admin.css' => array(
                0 => '/bundles/coreshopcustomer/pimcore/css/customer.css',
            ),
            'coreshop.coreshop.application.implementations' => array(
                'coreshop.customer' => 'CoreShop\\Component\\Customer\\Model\\CustomerInterface',
                'coreshop.customer_group' => 'CoreShop\\Component\\Customer\\Model\\CustomerGroupInterface',
                'coreshop.product' => 'CoreShop\\Component\\Product\\Model\\ProductInterface',
                'coreshop.category' => 'CoreShop\\Component\\Product\\Model\\CategoryInterface',
            ),
            'coreshop.implementations' => array(
                'coreshop.customer' => 'CoreShop\\Component\\Customer\\Model\\CustomerInterface',
                'coreshop.customer_group' => 'CoreShop\\Component\\Customer\\Model\\CustomerGroupInterface',
                'coreshop.product' => 'CoreShop\\Component\\Product\\Model\\ProductInterface',
                'coreshop.category' => 'CoreShop\\Component\\Product\\Model\\CategoryInterface',
            ),
            'coreshop.form.type.customer.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_product.driver.doctrine/orm' => true,
            'core_shop_product.driver' => 'pimcore',
            'coreshop.model.product_price_rule.class' => 'CoreShop\\Component\\Product\\Model\\ProductPriceRule',
            'coreshop.admin_controller.product_price_rule.class' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductPriceRuleController',
            'coreshop.factory.product_price_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.product_price_rule.class' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductPriceRuleRepository',
            'coreshop.model.product_specific_price_rule.class' => 'CoreShop\\Component\\Product\\Model\\ProductSpecificPriceRule',
            'coreshop.admin_controller.product_specific_price_rule.class' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductSpecificPriceRuleController',
            'coreshop.factory.product_specific_price_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.product_specific_price_rule.class' => 'CoreShop\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductSpecificPriceRuleRepository',
            'core_shop_product.driver.pimcore' => true,
            'coreshop.model.category.class' => 'Pimcore\\Model\\DataObject\\CoreShopCategory',
            'coreshop.factory.category.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.category.class' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\CategoryRepository',
            'coreshop.folder.category' => 'coreshop/categories',
            'coreshop.model.product.class' => 'Pimcore\\Model\\DataObject\\CoreShopProduct',
            'coreshop.factory.product.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.repository.product.class' => 'CoreShop\\Bundle\\CoreBundle\\Pimcore\\Repository\\ProductRepository',
            'coreshop.folder.product' => 'coreshop/products',
            'coreshop.model.manufacturer.class' => 'Pimcore\\Model\\DataObject\\CoreShopManufacturer',
            'coreshop.factory.manufacturer.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.manufacturer' => 'manufacturers',
            'core_shop_product.pimcore.admin.js' => array(
                0 => '/bundles/coreshopproduct/pimcore/js/resource.js',
                1 => '/bundles/coreshopproduct/pimcore/js/grid.js',
                2 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/panel.js',
                3 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/item.js',
                4 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/action.js',
                5 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/condition.js',
                6 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/categories.js',
                7 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/nested.js',
                8 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/products.js',
                9 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/timespan.js',
                10 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/conditions/weight.js',
                11 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountAmount.js',
                12 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/discountPercent.js',
                13 => '/bundles/coreshopproduct/pimcore/js/product/pricerule/actions/price.js',
                14 => '/bundles/coreshopproduct/pimcore/js/specificprice/action.js',
                15 => '/bundles/coreshopproduct/pimcore/js/specificprice//condition.js',
                16 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/price.js',
                17 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountAmount.js',
                18 => '/bundles/coreshopproduct/pimcore/js/specificprice/actions/discountPercent.js',
                19 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/nested.js',
                20 => '/bundles/coreshopproduct/pimcore/js/specificprice/conditions/timespan.js',
                21 => '/bundles/coreshopproduct/pimcore/js/specificprice/object/item.js',
                22 => '/bundles/coreshopproduct/pimcore/js/coreExtension/data/coreShopProductSpecificPriceRules.js',
                23 => '/bundles/coreshopproduct/pimcore/js/coreExtension/tags/coreShopProductSpecificPriceRules.js',
            ),
            'core_shop_product.pimcore.admin.css' => array(
                0 => '/bundles/coreshopproduct/pimcore/css/product.css',
            ),
            'coreshop.form.type.product_price_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_price_rule.rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_price_rule.rule_action.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_price_rule.rule_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_price_rule.promotion_coupon.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_specific_price_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_specific_price_rule.rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_specific_price_rule.rule_action.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_specific_price_rule.rule_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.product_specific_price_rule.promotion_coupon.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_address.driver.doctrine/orm' => true,
            'core_shop_address.driver' => 'pimcore',
            'coreshop.model.country.class' => 'CoreShop\\Component\\Core\\Model\\Country',
            'coreshop.admin_controller.country.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.country.class' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
            'coreshop.repository.country.class' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CountryRepository',
            'coreshop.model.country_translation.class' => 'CoreShop\\Component\\Address\\Model\\CountryTranslation',
            'coreshop.factory.country_translation.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.zone.class' => 'CoreShop\\Component\\Address\\Model\\Zone',
            'coreshop.admin_controller.zone.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.zone.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.state.class' => 'CoreShop\\Component\\Address\\Model\\State',
            'coreshop.admin_controller.state.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.state.class' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
            'coreshop.model.state_translation.class' => 'CoreShop\\Component\\Address\\Model\\StateTranslation',
            'coreshop.factory.state_translation.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'core_shop_address.driver.pimcore' => true,
            'coreshop.model.address.class' => 'Pimcore\\Model\\DataObject\\CoreShopAddress',
            'coreshop.factory.address.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'coreshop.folder.address' => 'addresses',
            'core_shop_address.pimcore.admin.js' => array(
                0 => '/bundles/coreshopaddress/pimcore/js/resource.js',
                1 => '/bundles/coreshopaddress/pimcore/js/resource/country.js',
                2 => '/bundles/coreshopaddress/pimcore/js/resource/state.js',
                3 => '/bundles/coreshopaddress/pimcore/js/resource/zone.js',
                4 => '/bundles/coreshopaddress/pimcore/js/country/item.js',
                5 => '/bundles/coreshopaddress/pimcore/js/country/panel.js',
                6 => '/bundles/coreshopaddress/pimcore/js/state/item.js',
                7 => '/bundles/coreshopaddress/pimcore/js/state/panel.js',
                8 => '/bundles/coreshopaddress/pimcore/js/zone/item.js',
                9 => '/bundles/coreshopaddress/pimcore/js/zone/panel.js',
                10 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountry.js',
                11 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountry.js',
                12 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopCountryMultiselect.js',
                13 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopCountryMultiselect.js',
                14 => '/bundles/coreshopaddress/pimcore/js/coreExtension/data/coreShopState.js',
                15 => '/bundles/coreshopaddress/pimcore/js/coreExtension/tags/coreShopState.js',
            ),
            'core_shop_address.pimcore.admin.css' => array(
                0 => '/bundles/coreshopaddress/pimcore/css/address.css',
            ),
            'coreshop.form.type.zone.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.country.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.country_translation.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.state.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.state_translation.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.address.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_currency.driver.doctrine/orm' => true,
            'core_shop_currency.driver' => 'doctrine/orm',
            'coreshop.model.currency.class' => 'CoreShop\\Component\\Core\\Model\\Currency',
            'coreshop.admin_controller.currency.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.currency.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.currency.class' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CurrencyRepository',
            'coreshop.model.exchange_rate.class' => 'CoreShop\\Component\\Currency\\Model\\ExchangeRate',
            'coreshop.admin_controller.exchange_rate.class' => 'CoreShop\\Bundle\\CurrencyBundle\\Controller\\ExchangeRateController',
            'coreshop.factory.exchange_rate.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.exchange_rate.class' => 'CoreShop\\Bundle\\CurrencyBundle\\Doctrine\\ORM\\ExchangeRateRepository',
            'core_shop_currency.pimcore.admin.js' => array(
                0 => '/bundles/coreshopcurrency/pimcore/js/resource.js',
                1 => '/bundles/coreshopcurrency/pimcore/js/resource/currency.js',
                2 => '/bundles/coreshopcurrency/pimcore/js/currency/item.js',
                3 => '/bundles/coreshopcurrency/pimcore/js/currency/panel.js',
                4 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrency.js',
                5 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrency.js',
                6 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/data/coreShopCurrencyMultiselect.js',
                7 => '/bundles/coreshopcurrency/pimcore/js/coreExtension/tags/coreShopCurrencyMultiselect.js',
                8 => '/bundles/coreshopcurrency/pimcore/js/exchangeRate/panel.js',
            ),
            'core_shop_currency.pimcore.admin.css' => array(
                0 => '/bundles/coreshopcurrency/pimcore/css/currency.css',
            ),
            'coreshop.form.type.currency.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.exchange_rate.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_taxation.driver.doctrine/orm' => true,
            'core_shop_taxation.driver' => 'pimcore',
            'coreshop.model.tax_rule.class' => 'CoreShop\\Component\\Core\\Model\\TaxRule',
            'coreshop.factory.tax_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.tax_rule.class' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\TaxRuleRepository',
            'coreshop.model.tax_rule_group.class' => 'CoreShop\\Component\\Core\\Model\\TaxRuleGroup',
            'coreshop.admin_controller.tax_rule_group.class' => 'CoreShop\\Bundle\\TaxationBundle\\Controller\\TaxRuleGroupController',
            'coreshop.factory.tax_rule_group.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.tax_rate.class' => 'CoreShop\\Component\\Taxation\\Model\\TaxRate',
            'coreshop.admin_controller.tax_rate.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.tax_rate.class' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
            'coreshop.model.tax_rate_translation.class' => 'CoreShop\\Component\\Taxation\\Model\\TaxRateTranslation',
            'coreshop.factory.tax_rate_translation.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'core_shop_taxation.driver.pimcore' => true,
            'coreshop.model.tax_item.class' => 'Pimcore\\Model\\DataObject\\Fieldcollection\\Data\\CoreShopTaxItem',
            'coreshop.factory.tax_item.class' => 'CoreShop\\Component\\Resource\\Factory\\PimcoreFactory',
            'core_shop_taxation.pimcore.admin.js' => array(
                0 => '/bundles/coreshoptaxation/pimcore/js/resource.js',
                1 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRate.js',
                2 => '/bundles/coreshoptaxation/pimcore/js/resource/taxRuleGroup.js',
                3 => '/bundles/coreshoptaxation/pimcore/js/tax/item.js',
                4 => '/bundles/coreshoptaxation/pimcore/js/tax/panel.js',
                5 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/item.js',
                6 => '/bundles/coreshoptaxation/pimcore/js/taxrulegroup/panel.js',
                7 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/data/coreShopTaxRuleGroup.js',
                8 => '/bundles/coreshoptaxation/pimcore/js/coreExtension/tags/coreShopTaxRuleGroup.js',
            ),
            'core_shop_taxation.pimcore.admin.css' => array(
                0 => '/bundles/coreshoptaxation/pimcore/css/taxation.css',
            ),
            'coreshop.form.type.tax_rule_group.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.tax_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.tax_rate.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.tax_rate_translation.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_store.driver.doctrine/orm' => true,
            'core_shop_store.driver' => 'doctrine/orm',
            'coreshop.model.store.class' => 'CoreShop\\Component\\Core\\Model\\Store',
            'coreshop.admin_controller.store.class' => 'CoreShop\\Bundle\\StoreBundle\\Controller\\StoreController',
            'coreshop.factory.store.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.store.class' => 'CoreShop\\Bundle\\StoreBundle\\Doctrine\\ORM\\StoreRepository',
            'core_shop_store.pimcore.admin.js' => array(
                0 => '/bundles/coreshopstore/pimcore/js/resource.js',
                1 => '/bundles/coreshopstore/pimcore/js/resource/store.js',
                2 => '/bundles/coreshopstore/pimcore/js/item.js',
                3 => '/bundles/coreshopstore/pimcore/js/panel.js',
                4 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStore.js',
                5 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStore.js',
                6 => '/bundles/coreshopstore/pimcore/js/coreExtension/data/coreShopStoreMultiselect.js',
                7 => '/bundles/coreshopstore/pimcore/js/coreExtension/tags/coreShopStoreMultiselect.js',
            ),
            'core_shop_store.pimcore.admin.css' => array(
                0 => '/bundles/coreshopstore/pimcore/css/store.css',
            ),
            'coreshop.form.type.store.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_index.driver.doctrine/orm' => true,
            'core_shop_index.driver' => 'doctrine/orm',
            'coreshop.model.index.class' => 'CoreShop\\Component\\Index\\Model\\Index',
            'coreshop.admin_controller.index.class' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\IndexController',
            'coreshop.factory.index.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.index_column.class' => 'CoreShop\\Component\\Index\\Model\\IndexColumn',
            'coreshop.factory.index_column.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.filter.class' => 'CoreShop\\Component\\Index\\Model\\Filter',
            'coreshop.admin_controller.filter.class' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\FilterController',
            'coreshop.factory.filter.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.filter_condition.class' => 'CoreShop\\Component\\Index\\Model\\FilterCondition',
            'coreshop.factory.filter_condition.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'core_shop_index.pimcore.admin.js' => array(
                0 => '/bundles/coreshopindex/pimcore/js/resource.js',
                1 => '/bundles/coreshopindex/pimcore/js/index/item.js',
                2 => '/bundles/coreshopindex/pimcore/js/index/panel.js',
                3 => '/bundles/coreshopindex/pimcore/js/index/fields.js',
                4 => '/bundles/coreshopindex/pimcore/js/index/getters/abstract.js',
                5 => '/bundles/coreshopindex/pimcore/js/index/getters/brick.js',
                6 => '/bundles/coreshopindex/pimcore/js/index/getters/classificationstore.js',
                7 => '/bundles/coreshopindex/pimcore/js/index/getters/fieldcollection.js',
                8 => '/bundles/coreshopindex/pimcore/js/index/getters/localizedfield.js',
                9 => '/bundles/coreshopindex/pimcore/js/index/interpreters/abstract.js',
                10 => '/bundles/coreshopindex/pimcore/js/index/interpreters/objectproperty.js',
                11 => '/bundles/coreshopindex/pimcore/js/index/objecttype/abstract.js',
                12 => '/bundles/coreshopindex/pimcore/js/index/type/abstract.js',
                13 => '/bundles/coreshopindex/pimcore/js/index/type/elasticsearch.js',
                14 => '/bundles/coreshopindex/pimcore/js/filter/item.js',
                15 => '/bundles/coreshopindex/pimcore/js/filter/panel.js',
                16 => '/bundles/coreshopindex/pimcore/js/filter/abstract.js',
                17 => '/bundles/coreshopindex/pimcore/js/filter/condition.js',
                18 => '/bundles/coreshopindex/pimcore/js/filter/similarity.js',
                19 => '/bundles/coreshopindex/pimcore/js/filter/conditions/abstract.js',
                20 => '/bundles/coreshopindex/pimcore/js/filter/conditions/boolean.js',
                21 => '/bundles/coreshopindex/pimcore/js/filter/conditions/combined.js',
                22 => '/bundles/coreshopindex/pimcore/js/filter/conditions/multiselect.js',
                23 => '/bundles/coreshopindex/pimcore/js/filter/conditions/range.js',
                24 => '/bundles/coreshopindex/pimcore/js/filter/conditions/select.js',
                25 => '/bundles/coreshopindex/pimcore/js/filter/similarities/abstract.js',
                26 => '/bundles/coreshopindex/pimcore/js/filter/similarities/field.js',
                27 => '/bundles/coreshopindex/pimcore/js/coreExtension/data/coreShopFilter.js',
                28 => '/bundles/coreshopindex/pimcore/js/coreExtension/tags/coreShopFilter.js',
            ),
            'core_shop_index.pimcore.admin.css' => array(
                0 => '/bundles/coreshopindex/pimcore/css/index.css',
            ),
            'coreshop.form.type.index.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.index.column.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.index.column_type.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.index.columns.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.index.worker.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.filter.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.filter.filter_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_shipping.driver.doctrine/orm' => true,
            'core_shop_shipping.driver' => 'doctrine/orm',
            'coreshop.model.carrier.class' => 'CoreShop\\Component\\Core\\Model\\Carrier',
            'coreshop.admin_controller.carrier.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.carrier.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.carrier.class' => 'CoreShop\\Bundle\\CoreBundle\\Doctrine\\ORM\\CarrierRepository',
            'coreshop.model.shipping_rule.class' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRule',
            'coreshop.admin_controller.shipping_rule.class' => 'CoreShop\\Bundle\\ShippingBundle\\Controller\\ShippingRuleController',
            'coreshop.factory.shipping_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.shipping_rule_group.class' => 'CoreShop\\Component\\Shipping\\Model\\ShippingRuleGroup',
            'coreshop.factory.shipping_rule_group.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'core_shop_shipping.pimcore.admin.js' => array(
                0 => '/bundles/coreshopshipping/pimcore/js/resource.js',
                1 => '/bundles/coreshopshipping/pimcore/js/carrier/item.js',
                2 => '/bundles/coreshopshipping/pimcore/js/carrier/panel.js',
                3 => '/bundles/coreshopshipping/pimcore/js/shippingrule/item.js',
                4 => '/bundles/coreshopshipping/pimcore/js/shippingrule/panel.js',
                5 => '/bundles/coreshopshipping/pimcore/js/shippingrule/action.js',
                6 => '/bundles/coreshopshipping/pimcore/js/shippingrule/condition.js',
                7 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionAmount.js',
                8 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/additionPercent.js',
                9 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountAmount.js',
                10 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/discountPercent.js',
                11 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/price.js',
                12 => '/bundles/coreshopshipping/pimcore/js/shippingrule/actions/shippingRule.js',
                13 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/amount.js',
                14 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/dimension.js',
                15 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/nested.js',
                16 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/postcodes.js',
                17 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/shippingRule.js',
                18 => '/bundles/coreshopshipping/pimcore/js/shippingrule/conditions/weight.js',
                19 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrier.js',
                20 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrier.js',
                21 => '/bundles/coreshopshipping/pimcore/js/coreExtension/data/coreShopCarrierMultiselect.js',
                22 => '/bundles/coreshopshipping/pimcore/js/coreExtension/tags/coreShopCarrierMultiselect.js',
            ),
            'core_shop_shipping.pimcore.admin.css' => array(
                0 => '/bundles/coreshopshipping/pimcore/css/shipping.css',
            ),
            'coreshop.form.type.carrier.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.shipping_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.shipping_rule_group.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.shipping_rule.rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.shipping_rule.rule_action.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.shipping_rule.rule_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_payment.driver.doctrine/orm' => true,
            'core_shop_payment.driver' => 'doctrine/orm',
            'coreshop.model.payment_provider.class' => 'CoreShop\\Component\\Core\\Model\\PaymentProvider',
            'coreshop.admin_controller.payment_provider.class' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\PaymentProviderController',
            'coreshop.factory.payment_provider.class' => 'CoreShop\\Component\\Resource\\Factory\\TranslatableFactory',
            'coreshop.model.payment_provider_translation.class' => 'CoreShop\\Component\\Payment\\Model\\PaymentProviderTranslation',
            'coreshop.factory.payment_provider_translation.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.payment.class' => 'CoreShop\\Component\\Payment\\Model\\Payment',
            'coreshop.admin_controller.payment.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.payment.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.payment.class' => 'CoreShop\\Bundle\\PaymentBundle\\Doctrine\\ORM\\PaymentRepository',
            'core_shop_payment.pimcore.admin.js' => array(
                0 => '/bundles/coreshoppayment/pimcore/js/resource.js',
                1 => '/bundles/coreshoppayment/pimcore/js/provider/item.js',
                2 => '/bundles/coreshoppayment/pimcore/js/provider/panel.js',
                3 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/abstract.js',
                4 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/paypal_express_checkout.js',
                5 => '/bundles/coreshoppayment/pimcore/js/provider/gateways/sofort.js',
                6 => '/bundles/coreshoppayment/pimcore/js/coreExtension/data/coreShopPaymentProvider.js',
                7 => '/bundles/coreshoppayment/pimcore/js/coreExtension/tags/coreShopPaymentProvider.js',
            ),
            'core_shop_payment.pimcore.admin.css' => array(
                0 => '/bundles/coreshoppayment/pimcore/css/payment.css',
            ),
            'coreshop.form.type.payment_provider.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.payment_provider_translation.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.payment_gateways' => array(

            ),
            'core_shop_sequence.driver.doctrine/orm' => true,
            'core_shop_sequence.driver' => 'doctrine/orm',
            'coreshop.model.sequence.class' => 'CoreShop\\Component\\Sequence\\Model\\Sequence',
            'coreshop.admin_controller.sequence.class' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'coreshop.factory.sequence.class' => 'CoreShop\\Component\\Sequence\\Factory\\SequenceFactory',
            'coreshop.repository.sequence.class' => 'CoreShop\\Bundle\\SequenceBundle\\Doctrine\\ORM\\SequenceRepository',
            'core_shop_notification.driver.doctrine/orm' => true,
            'core_shop_notification.driver' => 'doctrine/orm',
            'coreshop.model.notification_rule.class' => 'CoreShop\\Component\\Notification\\Model\\NotificationRule',
            'coreshop.admin_controller.notification_rule.class' => 'CoreShop\\Bundle\\NotificationBundle\\Controller\\NotificationRuleController',
            'coreshop.factory.notification_rule.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.repository.notification_rule.class' => 'CoreShop\\Bundle\\NotificationBundle\\Doctrine\\ORM\\NotificationRuleRepository',
            'core_shop_notification.pimcore.admin.js' => array(
                0 => '/bundles/coreshopnotification/pimcore/js/resource.js',
                1 => '/bundles/coreshopnotification/pimcore/js/rule/item.js',
                2 => '/bundles/coreshopnotification/pimcore/js/rule/panel.js',
                3 => '/bundles/coreshopnotification/pimcore/js/rule/action.js',
                4 => '/bundles/coreshopnotification/pimcore/js/rule/condition.js',
                5 => '/bundles/coreshopnotification/pimcore/js/rule/actions/mail.js',
                6 => '/bundles/coreshopnotification/pimcore/js/rule/actions/orderMail.js',
                7 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/invoice/invoiceState.js',
                8 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/messaging/messageType.js',
                9 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/carriers.js',
                10 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/orderState.js',
                11 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/order/payment.js',
                12 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/payment/paymentState.js',
                13 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/shipment/shipmentState.js',
                14 => '/bundles/coreshopnotification/pimcore/js/rule/conditions/user/userType.js',
            ),
            'core_shop_notification.pimcore.admin.css' => array(
                0 => '/bundles/coreshopnotification/pimcore/css/notification.css',
            ),
            'coreshop.form.type.notification_rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.notification_rule_group.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.notification_rule.rule.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.notification_rule.rule_action.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.form.type.notification_rule.rule_condition.validation_groups' => array(
                0 => 'coreshop',
            ),
            'coreshop.application.pimcore.admin.install.routes' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/staticroutes.yml',
            ),
            'core_shop_frontend.pimcore.admin.install.routes' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/staticroutes.yml',
            ),
            'resources.admin.install.routes' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/staticroutes.yml',
            ),
            'coreshop.application.pimcore.admin.install.documents' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/documents.yml',
            ),
            'core_shop_frontend.pimcore.admin.install.documents' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/documents.yml',
            ),
            'resources.admin.install.documents' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/documents.yml',
            ),
            'coreshop.application.pimcore.admin.install.image_thumbnails' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/image-thumbnails.yml',
            ),
            'core_shop_frontend.pimcore.admin.install.image_thumbnails' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/image-thumbnails.yml',
            ),
            'resources.admin.install.image_thumbnails' => array(
                0 => '@CoreShopFrontendBundle/Resources/install/pimcore/image-thumbnails.yml',
            ),
            'coreshop.frontend.controller.index' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\IndexController',
            'coreshop.frontend.controller.register' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\RegisterController',
            'coreshop.frontend.controller.customer' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CustomerController',
            'coreshop.frontend.controller.currency' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CurrencyController',
            'coreshop.frontend.controller.language' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\LanguageController',
            'coreshop.frontend.controller.search' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SearchController',
            'coreshop.frontend.controller.cart' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CartController',
            'coreshop.frontend.controller.checkout' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CheckoutController',
            'coreshop.frontend.controller.category' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CategoryController',
            'coreshop.frontend.controller.product' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\ProductController',
            'coreshop.frontend.controller.quote' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\QuoteController',
            'coreshop.frontend.controller.security' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SecurityController',
            'coreshop.frontend.controller.payment' => 'CoreShop\\Bundle\\PayumBundle\\Controller\\PaymentController',
            'coreshop.frontend.controller.wishlist' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\WishlistController',
            'coreshop.frontend.base.url' => '/test/shop',
            'core_shop_payum.driver.doctrine/orm' => true,
            'core_shop_payum.driver' => 'doctrine/orm',
            'coreshop.model.gateway_config.class' => 'CoreShop\\Bundle\\PayumBundle\\Model\\GatewayConfig',
            'coreshop.factory.gateway_config.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.model.payment_security_token.class' => 'CoreShop\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken',
            'coreshop.factory.payment_security_token.class' => 'CoreShop\\Component\\Resource\\Factory\\Factory',
            'coreshop.form.type.gateway_config.validation_groups' => array(
                0 => 'coreshop',
            ),
            'core_shop_core.driver.doctrine/orm' => true,
            'core_shop_core.driver' => 'doctrine/orm',
            'core_shop_core.pimcore.admin.js' => array(
                0 => '/bundles/coreshopcore/pimcore/js/payment/provider/item.js',
                1 => '/bundles/coreshopcore/pimcore/js/order/detail.js',
                2 => '/bundles/coreshopcore/pimcore/js/order/shipment.js',
                3 => '/bundles/coreshopcore/pimcore/js/sale/create/step/base.js',
                4 => '/bundles/coreshopcore/pimcore/js/sale/create/step/shipping.js',
                5 => '/bundles/coreshopcore/pimcore/js/quote/list.js',
                6 => '/bundles/coreshopcore/pimcore/js/store/item.js',
                7 => '/bundles/coreshopcore/pimcore/js/address/country/item.js',
                8 => '/bundles/coreshopcore/pimcore/js/report/abstract.js',
                9 => '/bundles/coreshopcore/pimcore/js/report/monitoring/abstract.js',
                10 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/disabledProducts.js',
                11 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/emptyCategories.js',
                12 => '/bundles/coreshopcore/pimcore/js/report/monitoring/reports/outOfStockProducts.js',
                13 => '/bundles/coreshopcore/pimcore/js/report/reports/carriers.js',
                14 => '/bundles/coreshopcore/pimcore/js/report/reports/carts.js',
                15 => '/bundles/coreshopcore/pimcore/js/report/reports/carts_abandoned.js',
                16 => '/bundles/coreshopcore/pimcore/js/report/reports/categories.js',
                17 => '/bundles/coreshopcore/pimcore/js/report/reports/customers.js',
                18 => '/bundles/coreshopcore/pimcore/js/report/reports/payment_providers.js',
                19 => '/bundles/coreshopcore/pimcore/js/report/reports/products.js',
                20 => '/bundles/coreshopcore/pimcore/js/report/reports/sales.js',
                21 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/ordersAndCartsFromLastDays.js',
                22 => '/bundles/coreshopcore/pimcore/js/dashboard/portlets/salesFromLastDays.js',
                23 => '/bundles/coreshopcore/pimcore/js/object/variantGenerator.js',
                24 => '/bundles/coreshopcore/pimcore/js/shipping/carrier/item.js',
                25 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/categories.js',
                26 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/countries.js',
                27 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/currencies.js',
                28 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customerGroups.js',
                29 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/customers.js',
                30 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/products.js',
                31 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/stores.js',
                32 => '/bundles/coreshopcore/pimcore/js/shipping/rules/conditions/zones.js',
                33 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/countries.js',
                34 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/currencies.js',
                35 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customerGroups.js',
                36 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/customers.js',
                37 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/quantity.js',
                38 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/stores.js',
                39 => '/bundles/coreshopcore/pimcore/js/product/pricerule/conditions/zones.js',
                40 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/countries.js',
                41 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/currencies.js',
                42 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customerGroups.js',
                43 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/customers.js',
                44 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/stores.js',
                45 => '/bundles/coreshopcore/pimcore/js/product/specificprice/conditions/zones.js',
                46 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/freeShipping.js',
                47 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/actions/giftProduct.js',
                48 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/carriers.js',
                49 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/categories.js',
                50 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/countries.js',
                51 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/currencies.js',
                52 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customerGroups.js',
                53 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/customers.js',
                54 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/products.js',
                55 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/stores.js',
                56 => '/bundles/coreshopcore/pimcore/js/cart/pricerules/conditions/zones.js',
                57 => '/bundles/coreshopcore/pimcore/js/taxation/taxrulegroup/item.js',
                58 => '/bundles/coreshopcore/pimcore/js/coreExtension/data/coreShopStorePrice.js',
                59 => '/bundles/coreshopcore/pimcore/js/coreExtension/tags/coreShopStorePrice.js',
                60 => '/bundles/coreshopcore/pimcore/js/settings.js',
                61 => '/bundles/coreshopcore/pimcore/js/helpers.js',
                62 => '/bundles/coreshopcore/pimcore/js/coreshop.js',
            ),
            'core_shop_core.pimcore.admin.css' => array(
                0 => '/bundles/coreshopcore/pimcore/css/core.css',
            ),
            'coreshop.installer.resources' => '@CoreShopCoreBundle/Resources/install',
            'coreshop.customer_address.folder_path' => 'addresses',
            'coreshop.checkout_managers' => array(
                0 => 'coreshop.checkout_manager.default',
            ),
            'fos_rest.format_listener.rules' => NULL,
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.apcu.class' => 'Doctrine\\Common\\Cache\\ApcuCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.chain.class' => 'Doctrine\\Common\\Cache\\ChainCache',
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'localhost',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'localhost',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.predis.client.class' => 'Predis\\Client',
            'doctrine_cache.predis.scheme' => 'tcp',
            'doctrine_cache.predis.host' => 'localhost',
            'doctrine_cache.predis.port' => 6379,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'localhost',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.sqlite3.class' => 'Doctrine\\Common\\Cache\\SQLite3Cache',
            'doctrine_cache.sqlite3.connection.class' => 'SQLite3',
            'doctrine_cache.void.class' => 'Doctrine\\Common\\Cache\\VoidCache',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine_cache.custom_provider.coreshop_pimcore_cache' => 'coreshop.doctrine.cache.pimcore',
            'payum.capture_path' => 'payum_capture_do',
            'payum.notify_path' => 'payum_notify_do',
            'payum.authorize_path' => 'payum_authorize_do',
            'payum.refund_path' => 'payum_refund_do',
            'payum.cancel_path' => 'payum_cancel_do',
            'payum.payout_path' => 'payum_payout_do',
            'payum.available_gateway_factories' => array(

            ),
            'payum.storage.doctrine.orm.class' => 'Payum\\Core\\Bridge\\Doctrine\\Storage\\DoctrineStorage',
            'stof_doctrine_extensions.event_listener.locale.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener',
            'stof_doctrine_extensions.event_listener.logger.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener',
            'stof_doctrine_extensions.event_listener.blame.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\BlameListener',
            'stof_doctrine_extensions.uploadable.manager.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadableManager',
            'stof_doctrine_extensions.uploadable.mime_type_guesser.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\MimeTypeGuesserAdapter',
            'stof_doctrine_extensions.uploadable.default_file_info.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo',
            'stof_doctrine_extensions.default_locale' => 'en',
            'stof_doctrine_extensions.default_file_path' => NULL,
            'stof_doctrine_extensions.translation_fallback' => false,
            'stof_doctrine_extensions.persist_default_translation' => false,
            'stof_doctrine_extensions.skip_translation_on_load' => false,
            'stof_doctrine_extensions.uploadable.validate_writable_directory' => true,
            'stof_doctrine_extensions.listener.translatable.class' => 'Gedmo\\Translatable\\TranslatableListener',
            'stof_doctrine_extensions.listener.timestampable.class' => 'Gedmo\\Timestampable\\TimestampableListener',
            'stof_doctrine_extensions.listener.blameable.class' => 'Gedmo\\Blameable\\BlameableListener',
            'stof_doctrine_extensions.listener.sluggable.class' => 'Gedmo\\Sluggable\\SluggableListener',
            'stof_doctrine_extensions.listener.tree.class' => 'Gedmo\\Tree\\TreeListener',
            'stof_doctrine_extensions.listener.loggable.class' => 'Gedmo\\Loggable\\LoggableListener',
            'stof_doctrine_extensions.listener.sortable.class' => 'Gedmo\\Sortable\\SortableListener',
            'stof_doctrine_extensions.listener.softdeleteable.class' => 'Gedmo\\SoftDeleteable\\SoftDeleteableListener',
            'stof_doctrine_extensions.listener.uploadable.class' => 'Gedmo\\Uploadable\\UploadableListener',
            'stof_doctrine_extensions.listener.reference_integrity.class' => 'Gedmo\\ReferenceIntegrity\\ReferenceIntegrityListener',
            'liip_theme.themes' => array(

            ),
            'liip_theme.active_theme' => NULL,
            'liip_theme.path_patterns' => array(
                'app_resource' => array(

                ),
                'bundle_resource' => array(

                ),
                'bundle_resource_dir' => array(

                ),
            ),
            'liip_theme.cache_warming' => true,
            'liip_theme.cookie' => NULL,
            'liip_theme.templating_locator.class' => 'Liip\\ThemeBundle\\Locator\\TemplateLocator',
            'liip_theme.file_locator.class' => 'Liip\\ThemeBundle\\Locator\\FileLocator',
            'liip_theme.filesystem_loader.class' => 'Liip\\ThemeBundle\\Twig\\Loader\\FilesystemLoader',
            'liip_theme.active_theme.class' => 'Liip\\ThemeBundle\\ActiveTheme',
            'liip_theme.cache_warmer.class' => 'Liip\\ThemeBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'liip_theme.theme_auto_detect.class' => 'Liip\\ThemeBundle\\Helper\\DeviceDetection',
            'templating.finder.class' => 'Liip\\ThemeBundle\\CacheWarmer\\TemplateFinder',
            'zurb_ink.inlinecss.class' => 'Hampe\\Bundle\\ZurbInkBundle\\Service\\InlineCss',
            'zurb_ink.inlinecss.twig.class' => 'Hampe\\Bundle\\ZurbInkBundle\\Twig\\InlineCssExtension',
            'zurb_ink.inky.twig.class' => 'Hampe\\Bundle\\ZurbInkBundle\\Twig\\InkyExtension',
            'zurb_ink.inky.class' => 'Hampe\\Inky\\Inky',
            'zurb_ink.inky.gridcolumns' => 12,
            'zurb_ink.inky.componentfactories' => array(

            ),
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.secret' => 'fb0cd3e33f74127cd452bcd07a52e802188c5221',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(

            ),
            'kernel.default_locale' => 'en',
            'templating.helper.code.file_link_format' => NULL,
            'debug.file_link_format' => NULL,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => array(
                'cookie_httponly' => true,
                'gc_probability' => 1,
            ),
            'session.metadata.update_threshold' => '0',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'php',
                1 => 'twig',
            ),
            'templating.helper.form.resources' => array(
                0 => 'FrameworkBundle:Form',
            ),
            'validator.mapping.cache.prefix' => '',
            'validator.mapping.cache.file' => (__DIR__.'/validation.php'),
            'validator.translation_domain' => 'validators',
            'translator.logging' => true,
            'profiler_listener.only_exceptions' => false,
            'profiler_listener.only_master_requests' => false,
            'profiler.storage.dsn' => ('file:'.__DIR__.'/profiler'),
            'debug.error_handler.throw_at' => -1,
            'debug.container.dump' => (__DIR__.'/appDevDebugProjectContainer.xml'),
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.options.matcher.cache_class' => 'appDevDebugProjectContainerUrlMatcher',
            'router.options.generator.cache_class' => 'appDevDebugProjectContainerUrlGenerator',
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.cache_class_prefix' => 'appDevDebugProjectContainer',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'serializer.mapping.cache.file' => (__DIR__.'/serialization.php'),
            'serializer.mapping.cache.prefix' => '',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.role_hierarchy.roles' => array(
                'ROLE_PIMCORE_ADMIN' => array(
                    0 => 'ROLE_PIMCORE_USER',
                ),
                'ROLE_ADMIN' => array(
                    0 => 'ROLE_USER',
                ),
            ),
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'twig.exception_listener.controller' => 'twig.controller.exception:showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
            ),
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => array(

            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.console' => array(
                    'type' => 'exclusive',
                    'elements' => array(
                        0 => 'event',
                    ),
                ),
                'monolog.handler.main' => array(
                    'type' => 'exclusive',
                    'elements' => array(
                        0 => 'event',
                    ),
                ),
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.pimcore_mailer.transport.name' => 'mail',
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.port' => '',
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.host' => '',
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.username' => '',
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.password' => NULL,
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.source_ip' => NULL,
            'swiftmailer.mailer.pimcore_mailer.transport.smtp.local_domain' => NULL,
            'swiftmailer.mailer.pimcore_mailer.spool.enabled' => false,
            'swiftmailer.mailer.pimcore_mailer.plugin.impersonate' => NULL,
            'swiftmailer.mailer.pimcore_mailer.single_address' => '',
            'swiftmailer.mailer.pimcore_mailer.delivery_addresses' => array(
                0 => '',
            ),
            'swiftmailer.mailer.pimcore_mailer.delivery_whitelist' => array(

            ),
            'swiftmailer.mailer.pimcore_mailer.delivery.enabled' => true,
            'swiftmailer.spool.enabled' => false,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => '',
            'swiftmailer.mailer.newsletter_mailer.transport.name' => 'mail',
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.port' => '',
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.host' => '',
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.username' => '',
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.password' => NULL,
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.source_ip' => NULL,
            'swiftmailer.mailer.newsletter_mailer.transport.smtp.local_domain' => NULL,
            'swiftmailer.mailer.newsletter_mailer.spool.enabled' => false,
            'swiftmailer.mailer.newsletter_mailer.plugin.impersonate' => NULL,
            'swiftmailer.mailer.newsletter_mailer.single_address' => '',
            'swiftmailer.mailer.newsletter_mailer.delivery_addresses' => array(
                0 => '',
            ),
            'swiftmailer.mailer.newsletter_mailer.delivery_whitelist' => array(

            ),
            'swiftmailer.mailer.newsletter_mailer.delivery.enabled' => true,
            'swiftmailer.mailers' => array(
                'newsletter_mailer' => 'swiftmailer.mailer.newsletter_mailer',
                'pimcore_mailer' => 'swiftmailer.mailer.pimcore_mailer',
            ),
            'swiftmailer.default_mailer' => 'pimcore_mailer',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(

            ),
            'doctrine.connections' => array(
                'default' => 'doctrine.dbal.default_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerAwareEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.proxy_dir' => (__DIR__.'/doctrine/orm/Proxies'),
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'sensio_framework_extra.view.guesser.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Templating\\TemplateGuesser',
            'sensio_framework_extra.controller.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener',
            'sensio_framework_extra.routing.loader.annot_dir.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationDirectoryLoader',
            'sensio_framework_extra.routing.loader.annot_file.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationFileLoader',
            'sensio_framework_extra.routing.loader.annot_class.class' => 'Pimcore\\Routing\\Loader\\AnnotatedRouteControllerLoader',
            'sensio_framework_extra.converter.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener',
            'sensio_framework_extra.converter.manager.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterManager',
            'sensio_framework_extra.converter.doctrine.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DoctrineParamConverter',
            'sensio_framework_extra.converter.datetime.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DateTimeParamConverter',
            'sensio_framework_extra.view.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener',
            'cmf_routing.uri_filter_regexp' => '',
            'cmf_routing.default_controller' => NULL,
            'cmf_routing.generic_controller' => NULL,
            'cmf_routing.controllers_by_type' => array(

            ),
            'cmf_routing.controllers_by_class' => array(

            ),
            'cmf_routing.templates_by_class' => array(

            ),
            'cmf_routing.route_collection_limit' => 0,
            'cmf_routing.dynamic.limit_candidates' => 20,
            'cmf_routing.dynamic.locales' => array(

            ),
            'cmf_routing.dynamic.auto_locale_pattern' => false,
            'cmf_routing.replace_symfony_router' => true,
            'web_profiler.debug_toolbar.position' => 'bottom',
            'web_profiler.debug_toolbar.intercept_redirects' => false,
            'web_profiler.debug_toolbar.mode' => 2,
            'pimcore.extensions.bundles.search_paths' => array(
                0 => 'src',
                1 => 'pimcore/lib/Pimcore/Bundle',
            ),
            'pimcore.extensions.bundles.handle_composer' => true,
            'pimcore.admin.unauthenticated_routes' => array(
                0 => array(
                    'route' => 'pimcore_admin_login',
                    'path' => false,
                    'host' => false,
                    'methods' => array(

                    ),
                ),
                1 => array(
                    'route' => 'pimcore_admin_webdav',
                    'path' => false,
                    'host' => false,
                    'methods' => array(

                    ),
                ),
            ),
            'pimcore.admin.session.attribute_bags' => array(
                'pimcore_admin' => array(
                    'storage_key' => '_pimcore_admin',
                ),
                'pimcore_documents' => array(
                    'storage_key' => '_pimcore_documents',
                ),
                'pimcore_objects' => array(
                    'storage_key' => '_pimcore_objects',
                ),
                'pimcore_copy' => array(
                    'storage_key' => '_pimcore_copy',
                ),
                'pimcore_backup' => array(
                    'storage_key' => '_pimcore_backup',
                ),
            ),
            'pimcore.admin.translations.path' => '@PimcoreCoreBundle/Resources/translations',
            'pimcore.web_profiler.toolbar.excluded_routes' => array(

            ),
            'pimcore.response_exception_listener.render_error_document' => false,
            'pimcore.config' => array(
                'objects' => array(
                    'class_definitions' => array(
                        'data' => array(
                            'map' => array(
                                'coreShopMoney' => 'CoreShop\\Bundle\\MoneyBundle\\CoreExtension\\Money',
                                'coreShopCartPriceRule' => 'CoreShop\\Bundle\\OrderBundle\\CoreExtension\\CartPriceRule',
                                'coreShopProductSpecificPriceRules' => 'CoreShop\\Bundle\\ProductBundle\\CoreExtension\\ProductSpecificPriceRules',
                                'coreShopCountry' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\Country',
                                'coreShopState' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\State',
                                'coreShopCountryMultiselect' => 'CoreShop\\Bundle\\AddressBundle\\CoreExtension\\CountryMultiselect',
                                'coreShopCurrency' => 'CoreShop\\Bundle\\CurrencyBundle\\CoreExtension\\Currency',
                                'coreShopCurrencyMultiselect' => 'CoreShop\\Bundle\\CurrencyBundle\\CoreExtension\\CurrencyMultiselect',
                                'coreShopTaxRuleGroup' => 'CoreShop\\Bundle\\TaxationBundle\\CoreExtension\\TaxRuleGroup',
                                'coreShopStore' => 'CoreShop\\Bundle\\StoreBundle\\CoreExtension\\Store',
                                'coreShopStoreMultiselect' => 'CoreShop\\Bundle\\StoreBundle\\CoreExtension\\StoreMultiselect',
                                'coreShopFilter' => 'CoreShop\\Bundle\\IndexBundle\\CoreExtension\\Filter',
                                'coreShopCarrier' => 'CoreShop\\Bundle\\ShippingBundle\\CoreExtension\\Carrier',
                                'coreShopCarrierMultiselect' => 'CoreShop\\Bundle\\ShippingBundle\\CoreExtension\\CarrierMultiselect',
                                'coreShopPaymentProvider' => 'CoreShop\\Bundle\\PaymentBundle\\CoreExtension\\PaymentProvider',
                                'coreShopStorePrice' => 'CoreShop\\Bundle\\CoreBundle\\CoreExtension\\StorePrice',
                                'block' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Block',
                                'calculatedValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\CalculatedValue',
                                'checkbox' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Checkbox',
                                'classificationstore' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Classificationstore',
                                'country' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Country',
                                'countrymultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Countrymultiselect',
                                'date' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Date',
                                'datetime' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Datetime',
                                'email' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Email',
                                'externalImage' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\ExternalImage',
                                'fieldcollections' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Fieldcollections',
                                'firstname' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Firstname',
                                'gender' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Gender',
                                'geobounds' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geobounds',
                                'geopoint' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geopoint',
                                'geopolygon' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Geopolygon',
                                'hotspotimage' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Hotspotimage',
                                'href' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Href',
                                'image' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Image',
                                'input' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Input',
                                'language' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Language',
                                'languagemultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Languagemultiselect',
                                'lastname' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Lastname',
                                'link' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Link',
                                'localizedfields' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Localizedfields',
                                'multihref' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Multihref',
                                'multihrefMetadata' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\MultihrefMetadata',
                                'multiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Multiselect',
                                'newsletterActive' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\NewsletterActive',
                                'nonownerobjects' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Nonownerobjects',
                                'numeric' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Numeric',
                                'objectbricks' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Objectbricks',
                                'objects' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Objects',
                                'objectsMetadata' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\ObjectsMetadata',
                                'password' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Password',
                                'persona' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Persona',
                                'personamultiselect' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Personamultiselect',
                                'quantityValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\QuantityValue',
                                'inputQuantityValue' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\InputQuantityValue',
                                'select' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Select',
                                'slider' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Slider',
                                'structuredTable' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\StructuredTable',
                                'table' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Table',
                                'textarea' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Textarea',
                                'time' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Time',
                                'user' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\User',
                                'video' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Video',
                                'wysiwyg' => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\Wysiwyg',
                                'indexFieldSelection' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelection',
                                'indexFieldSelectionCombo' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelectionCombo',
                                'indexFieldSelectionField' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\CoreExtensions\\ClassDefinition\\IndexFieldSelectionField',
                            ),
                            'prefixes' => array(
                                0 => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\',
                                1 => '\\Object_Class_Data_',
                            ),
                        ),
                        'layout' => array(
                            'prefixes' => array(
                                0 => '\\Pimcore\\Model\\DataObject\\ClassDefinition\\Layout\\',
                                1 => '\\Object_Class_Layout_',
                            ),
                            'map' => array(

                            ),
                        ),
                    ),
                ),
                'security' => array(
                    'encoder_factories' => array(
                        'Pimcore\\Bundle\\AdminBundle\\Security\\User\\User' => array(
                            'id' => 'pimcore_admin.security.password_encoder_factory',
                        ),
                        'AppBundle\\Model\\DataObject\\User' => array(
                            'id' => 'website_demo.security.password_encoder_factory',
                        ),
                        'Pimcore\\Model\\DataObject\\CoreShopCustomer' => array(
                            'id' => 'coreshop.security.customer.password_encoder_factory',
                        ),
                    ),
                ),
                'error_handling' => array(
                    'render_error_document' => false,
                ),
                'bundles' => array(
                    'search_paths' => array(
                        0 => 'src',
                        1 => 'pimcore/lib/Pimcore/Bundle',
                    ),
                    'handle_composer' => true,
                ),
                'documents' => array(
                    'tags' => array(
                        'prefixes' => array(
                            0 => '\\Pimcore\\Model\\Document\\Tag\\',
                            1 => '\\Document_Tag_',
                        ),
                        'map' => array(

                        ),
                    ),
                    'editables' => array(
                        'naming_strategy' => 'nested',
                    ),
                    'areas' => array(
                        'autoload' => true,
                    ),
                ),
                'newsletter' => array(
                    'source_adapters' => array(
                        'defaultAdapter' => 'pimcore.document.newsletter.factory.default',
                        'csvList' => 'pimcore.document.newsletter.factory.csv',
                        'reportAdapter' => 'pimcore.document.newsletter.factory.report',
                    ),
                ),
                'custom_report' => array(
                    'adapters' => array(
                        'sql' => 'pimcore.custom_report.adapter.factory.sql',
                        'analytics' => 'pimcore.custom_report.adapter.factory.analytics',
                    ),
                ),
                'context' => array(
                    'profiler' => array(
                        'routes' => array(
                            0 => array(
                                'path' => '^/_(_profiler|wdt)',
                                'route' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                        ),
                    ),
                    'admin' => array(
                        'routes' => array(
                            0 => array(
                                'path' => '^/admin',
                                'route' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                            1 => array(
                                'route' => '^pimcore_admin_',
                                'path' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                        ),
                    ),
                    'webservice' => array(
                        'routes' => array(
                            0 => array(
                                'path' => '^/webservice',
                                'route' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                            1 => array(
                                'route' => '^pimcore_webservice',
                                'path' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                        ),
                    ),
                    'plugin' => array(
                        'routes' => array(
                            0 => array(
                                'path' => '^/plugin',
                                'route' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                        ),
                    ),
                    'install' => array(
                        'routes' => array(
                            0 => array(
                                'path' => '^/install',
                                'route' => false,
                                'host' => false,
                                'methods' => array(

                                ),
                            ),
                        ),
                    ),
                ),
                'admin' => array(
                    'session' => array(
                        'attribute_bags' => array(
                            'pimcore_admin' => array(
                                'storage_key' => '_pimcore_admin',
                            ),
                            'pimcore_documents' => array(
                                'storage_key' => '_pimcore_documents',
                            ),
                            'pimcore_objects' => array(
                                'storage_key' => '_pimcore_objects',
                            ),
                            'pimcore_copy' => array(
                                'storage_key' => '_pimcore_copy',
                            ),
                            'pimcore_backup' => array(
                                'storage_key' => '_pimcore_backup',
                            ),
                        ),
                    ),
                    'unauthenticated_routes' => array(
                        0 => array(
                            'route' => 'pimcore_admin_login',
                            'path' => false,
                            'host' => false,
                            'methods' => array(

                            ),
                        ),
                        1 => array(
                            'route' => 'pimcore_admin_webdav',
                            'path' => false,
                            'host' => false,
                            'methods' => array(

                            ),
                        ),
                    ),
                    'translations' => array(
                        'path' => '@PimcoreCoreBundle/Resources/translations',
                    ),
                ),
                'web_profiler' => array(
                    'toolbar' => array(
                        'excluded_routes' => array(

                        ),
                    ),
                ),
                'translations' => array(
                    'debugging' => array(
                        'enabled' => true,
                        'parameter' => 'pimcore_debug_translations',
                    ),
                    'case_insensitive' => false,
                ),
                'models' => array(
                    'class_overrides' => array(
                        'Pimcore\\Model\\DataObject\\User' => 'AppBundle\\Model\\DataObject\\User',
                    ),
                ),
                'flags' => array(

                ),
                'routing' => array(
                    'static' => array(
                        'locale_params' => array(

                        ),
                    ),
                ),
                'cache' => array(
                    'enabled' => true,
                    'pool_service_id' => NULL,
                    'default_lifetime' => 2419200,
                    'pools' => array(
                        'doctrine' => array(
                            'enabled' => true,
                            'connection' => 'default',
                        ),
                        'redis' => array(
                            'enabled' => false,
                        ),
                    ),
                ),
            ),
            'pimcore.routing.static.locale_params' => array(

            ),
            'pimcore.cache.core.default_lifetime' => 2419200,
            'pimcore_ecommerce.pimcore.config' => array(
                'menu' => array(
                    'pricing_rules' => array(
                        'enabled' => true,
                    ),
                    'order_list' => array(
                        'enabled' => true,
                        'route' => 'pimcore_ecommerce_backend_admin-order_list',
                        'path' => NULL,
                    ),
                ),
            ),
            'pimcore_ecommerce.use_legacy_class_mapping' => true,
            'pimcore_ecommerce.decimal_scale' => 4,
            'pimcore_ecommerce.factory.strict_tenants' => false,
            'pimcore_ecommerce.environment.options' => array(

            ),
            'pimcore_ecommerce.pricing_manager.enabled' => true,
            'pimcore_ecommerce.pricing_manager.condition_mapping' => array(
                'Bracket' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Bracket',
                'DateRange' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\DateRange',
                'CartAmount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CartAmount',
                'CatalogProduct' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CatalogProduct',
                'CatalogCategory' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\CatalogCategory',
                'Token' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Token',
                'Sold' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Sold',
                'Sales' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\Sales',
                'ClientIp' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\ClientIp',
                'VoucherToken' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Condition\\VoucherToken',
            ),
            'pimcore_ecommerce.pricing_manager.action_mapping' => array(
                'ProductDiscount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\ProductDiscount',
                'CartDiscount' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\CartDiscount',
                'Gift' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\Gift',
                'FreeShipping' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Action\\FreeShipping',
            ),
            'pimcore_ecommerce.pricing_manager.options' => array(
                'rule_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Rule',
                'price_info_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\PriceInfo',
                'environment_class' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\PricingManager\\Environment',
            ),
            'pimcore_ecommerce.index_service.default_tenant' => 'default',
            'pimcore_ecommerce.voucher_service.options' => array(
                'reservation_minutes_threshold' => 5,
                'statistics_days_threshold' => 30,
            ),
            'pimcore_ecommerce.voucher_service.token_manager.mapping' => array(
                'VoucherTokenTypePattern' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\VoucherService\\TokenManager\\Pattern',
                'VoucherTokenTypeSingle' => '\\Pimcore\\Bundle\\EcommerceFrameworkBundle\\VoucherService\\TokenManager\\Single',
            ),
            'pimcore_ecommerce.offer_tool.order_storage.offer_class' => 'Pimcore\\Model\\DataObject\\OfferToolOffer',
            'pimcore_ecommerce.offer_tool.order_storage.offer_item_class' => 'Pimcore\\Model\\DataObject\\OfferToolOfferItem',
            'pimcore_ecommerce.offer_tool.order_storage.parent_folder_path' => '/offertool/offers/%Y/%m',
            'coreshop.model.cart.pimcore_class_id' => 17,
            'coreshop.model.cart_item.pimcore_class_id' => 18,
            'coreshop.model.order.pimcore_class_id' => 19,
            'coreshop.model.order_shipment.pimcore_class_id' => 20,
            'coreshop.model.quote.pimcore_class_id' => 21,
            'coreshop.model.order_item.pimcore_class_id' => 22,
            'coreshop.model.order_invoice.pimcore_class_id' => 23,
            'coreshop.model.order_invoice_item.pimcore_class_id' => 24,
            'coreshop.model.order_shipment_item.pimcore_class_id' => 25,
            'coreshop.model.quote_item.pimcore_class_id' => 26,
            'coreshop.model.customer_group.pimcore_class_id' => 27,
            'coreshop.model.customer.pimcore_class_id' => 28,
            'coreshop.model.category.pimcore_class_id' => 29,
            'coreshop.model.product.pimcore_class_id' => 30,
            'coreshop.model.manufacturer.pimcore_class_id' => 31,
            'coreshop.model.address.pimcore_class_id' => 32,
            'coreshop.pimcore_class_ids' => array(
                'cart' => 17,
                'cart_item' => 18,
                'order' => 19,
                'order_shipment' => 20,
                'quote' => 21,
                'order_item' => 22,
                'order_invoice' => 23,
                'order_invoice_item' => 24,
                'order_shipment_item' => 25,
                'quote_item' => 26,
                'customer_group' => 27,
                'customer' => 28,
                'category' => 29,
                'product' => 30,
                'manufacturer' => 31,
                'address' => 32,
            ),
            'coreshop.resource.installers' => array(
                'classes' => 'classes',
                'routes' => 'routes',
                'documents' => 'documents',
                'image_thumbnail' => 'image_thumbnail',
                'permissions' => 'permissions',
                'sql' => 'sql',
            ),
            'coreshop.cart_price_rule.actions' => array(
                'discountAmount' => 'discountAmount',
                'discountPercent' => 'discountPercent',
                'freeShipping' => 'freeShipping',
                'giftProduct' => 'giftProduct',
            ),
            'coreshop.cart_price_rule.conditions' => array(
                'nested' => 'nested',
                'timespan' => 'timespan',
                'amount' => 'amount',
                'customers' => 'customers',
                'customerGroups' => 'customerGroups',
                'countries' => 'countries',
                'zones' => 'zones',
                'stores' => 'stores',
                'currencies' => 'currencies',
                'carriers' => 'carriers',
                'products' => 'products',
                'categories' => 'categories',
            ),
            'coreshop.order.purchasable.price_calculators' => array(
                'price_aware' => 'price_aware',
                'product' => 'product',
            ),
            'coreshop.order.purchasable.discount_calculators' => array(
                'no_discount' => 'no_discount',
                'product' => 'product',
            ),
            'coreshop.product_price_rule.conditions' => array(
                'products' => 'products',
                'nested' => 'nested',
                'categories' => 'categories',
                'timespan' => 'timespan',
                'quantity' => 'quantity',
                'customers' => 'customers',
                'customerGroups' => 'customerGroups',
                'countries' => 'countries',
                'zones' => 'zones',
                'stores' => 'stores',
                'currencies' => 'currencies',
            ),
            'coreshop.product_price_rule.actions' => array(
                'price' => 'price',
                'discountAmount' => 'discountAmount',
                'discountPercent' => 'discountPercent',
            ),
            'coreshop.product_specific_price_rule.conditions' => array(
                'nested' => 'nested',
                'timespan' => 'timespan',
                'customers' => 'customers',
                'customerGroups' => 'customerGroups',
                'countries' => 'countries',
                'zones' => 'zones',
                'stores' => 'stores',
                'currencies' => 'currencies',
            ),
            'coreshop.product_specific_price_rule.actions' => array(
                'price' => 'price',
                'discountAmount' => 'discountAmount',
                'discountPercent' => 'discountPercent',
            ),
            'coreshop.product.price_calculators' => array(
                'product_price_rules' => 'product_price_rules',
                'product_specific_price_rules' => 'product_specific_price_rules',
                'property' => 'property',
            ),
            'coreshop.index.column_types' => array(
                'classificationstore' => 'classificationstore',
                'fieldcollection' => 'fieldcollection',
                'localizedfields' => 'localizedfields',
                'objectbrick' => 'objectbrick',
                'object' => 'object',
            ),
            'coreshop.index.workers' => array(
                'mysql' => 'mysql',
            ),
            'coreshop.index.interpreters' => array(
                'soundex' => 'soundex',
                'objectId' => 'objectId',
                'objectIdSum' => 'objectIdSum',
                'object' => 'object',
                'objectProperty' => 'objectProperty',
            ),
            'coreshop.index.getters' => array(
                'brick' => 'brick',
                'classificationstore' => 'classificationstore',
                'fieldcollection' => 'fieldcollection',
                'localizedfield' => 'localizedfield',
            ),
            'coreshop.filter.condition_types' => array(
                'select' => 'select',
                'range' => 'range',
                'multiselect' => 'multiselect',
                'boolean' => 'boolean',
            ),
            'coreshop.shipping_rule.conditions' => array(
                'amount' => 'amount',
                'postcodes' => 'postcodes',
                'weight' => 'weight',
                'dimension' => 'dimension',
                'nested' => 'nested',
                'shippingRule' => 'shippingRule',
                'categories' => 'categories',
                'products' => 'products',
                'countries' => 'countries',
                'customers' => 'customers',
                'customerGroups' => 'customerGroups',
                'zones' => 'zones',
                'stores' => 'stores',
                'currencies' => 'currencies',
            ),
            'coreshop.shipping_rule.actions' => array(
                'price' => 'price',
                'additionAmount' => 'additionAmount',
                'discountAmount' => 'discountAmount',
                'additionPercent' => 'additionPercent',
                'discountPercent' => 'discountPercent',
                'shippingRule' => 'shippingRule',
            ),
            'coreshop.shipping.price_calculators' => array(
                'shipping-rule' => 'shipping-rule',
                'free-shipping-rule' => 'free-shipping-rule',
            ),
            'coreshop.notification_rule.actions.order' => array(
                'orderMail' => 'orderMail',
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.invoice' => array(
                'orderMail' => 'orderMail',
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.shipment' => array(
                'orderMail' => 'orderMail',
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.user' => array(
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.payment' => array(
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.quote' => array(
                'mail' => 'mail',
            ),
            'coreshop.notification_rule.actions.types' => array(
                0 => 'order',
                1 => 'invoice',
                2 => 'shipment',
                3 => 'user',
                4 => 'payment',
                5 => 'quote',
            ),
            'coreshop.notification_rule.actions' => array(
                'order.orderMail' => 'order.orderMail',
                'invoice.orderMail' => 'invoice.orderMail',
                'shipment.orderMail' => 'shipment.orderMail',
                'order.mail' => 'order.mail',
                'invoice.mail' => 'invoice.mail',
                'shipment.mail' => 'shipment.mail',
                'user.mail' => 'user.mail',
                'payment.mail' => 'payment.mail',
                'quote.mail' => 'quote.mail',
            ),
            'coreshop.notification_rule.conditions.order' => array(
                'invoiceState' => 'invoiceState',
                'shipmentState' => 'shipmentState',
                'orderState' => 'orderState',
                'paymentState' => 'paymentState',
                'carriers' => 'carriers',
            ),
            'coreshop.notification_rule.conditions.quote' => array(
                'carriers' => 'carriers',
            ),
            'coreshop.notification_rule.conditions.invoice' => array(
                'invoiceState' => 'invoiceState',
            ),
            'coreshop.notification_rule.conditions.shipment' => array(
                'shipmentState' => 'shipmentState',
            ),
            'coreshop.notification_rule.conditions.payment' => array(
                'paymentState' => 'paymentState',
            ),
            'coreshop.notification_rule.conditions.user' => array(
                'userType' => 'userType',
            ),
            'coreshop.notification_rule.conditions.types' => array(
                0 => 'order',
                1 => 'quote',
                2 => 'invoice',
                3 => 'shipment',
                4 => 'payment',
                5 => 'user',
            ),
            'coreshop.notification_rule.conditions' => array(
                'order.invoiceState' => 'order.invoiceState',
                'order.shipmentState' => 'order.shipmentState',
                'order.orderState' => 'order.orderState',
                'order.paymentState' => 'order.paymentState',
                'order.carriers' => 'order.carriers',
                'quote.carriers' => 'quote.carriers',
                'invoice.invoiceState' => 'invoice.invoiceState',
                'shipment.shipmentState' => 'shipment.shipmentState',
                'payment.paymentState' => 'payment.paymentState',
                'user.userType' => 'user.userType',
            ),
            'coreshop.tracking.trackers' => array(
                'google-enhanced-ecommerce' => 'google-enhanced-ecommerce',
            ),
            'coreshop.gateway_factories' => array(
                'offline' => 'coreshop.payum_gateway_factory.offline',
                'paypal_express_checkout' => 'paypal_express_checkout',
                'sofort' => 'sofort',
            ),
            'coreshop.reports' => array(
                'products' => 'products',
                'categories' => 'categories',
                'customers' => 'customers',
                'carts' => 'carts',
                'carts_abandoned' => 'carts_abandoned',
                'sales' => 'sales',
                'carriers' => 'carriers',
                'payment_providers' => 'payment_providers',
            ),
            'data_collector.templates' => array(
                'Pimcore\\Bundle\\CoreBundle\\DataCollector\\PimcoreDataCollector' => array(
                    0 => 'pimcore.data_collector',
                    1 => 'PimcoreCoreBundle:Profiler:data_collector.html.twig',
                ),
                'data_collector.request' => array(
                    0 => 'request',
                    1 => '@WebProfiler/Collector/request.html.twig',
                ),
                'data_collector.time' => array(
                    0 => 'time',
                    1 => '@WebProfiler/Collector/time.html.twig',
                ),
                'data_collector.memory' => array(
                    0 => 'memory',
                    1 => '@WebProfiler/Collector/memory.html.twig',
                ),
                'data_collector.ajax' => array(
                    0 => 'ajax',
                    1 => '@WebProfiler/Collector/ajax.html.twig',
                ),
                'data_collector.form' => array(
                    0 => 'form',
                    1 => '@WebProfiler/Collector/form.html.twig',
                ),
                'data_collector.exception' => array(
                    0 => 'exception',
                    1 => '@WebProfiler/Collector/exception.html.twig',
                ),
                'data_collector.logger' => array(
                    0 => 'logger',
                    1 => '@WebProfiler/Collector/logger.html.twig',
                ),
                'data_collector.events' => array(
                    0 => 'events',
                    1 => '@WebProfiler/Collector/events.html.twig',
                ),
                'data_collector.router' => array(
                    0 => 'router',
                    1 => '@WebProfiler/Collector/router.html.twig',
                ),
                'data_collector.cache' => array(
                    0 => 'cache',
                    1 => '@WebProfiler/Collector/cache.html.twig',
                ),
                'data_collector.translation' => array(
                    0 => 'translation',
                    1 => '@WebProfiler/Collector/translation.html.twig',
                ),
                'data_collector.security' => array(
                    0 => 'security',
                    1 => '@Security/Collector/security.html.twig',
                ),
                'data_collector.twig' => array(
                    0 => 'twig',
                    1 => '@WebProfiler/Collector/twig.html.twig',
                ),
                'data_collector.doctrine' => array(
                    0 => 'db',
                    1 => '@Doctrine/Collector/db.html.twig',
                ),
                'swiftmailer.data_collector' => array(
                    0 => 'swiftmailer',
                    1 => '@Swiftmailer/Collector/swiftmailer.html.twig',
                ),
                'data_collector.dump' => array(
                    0 => 'dump',
                    1 => '@Debug/Profiler/dump.html.twig',
                ),
                'coreshop.country_collector' => array(
                    0 => 'coreshop.country_collector',
                    1 => 'CoreShopAddressBundle:Collector:country.html.twig',
                ),
                'coreshop.store_collector' => array(
                    0 => 'coreshop.store_collector',
                    1 => 'CoreShopStoreBundle:Collector:store.html.twig',
                ),
                'coreshop.currency_collector' => array(
                    0 => 'coreshop.currency_collector',
                    1 => 'CoreShopCoreBundle:Collector:currency.html.twig',
                ),
                'payum.profiler.payum_collector' => array(
                    0 => 'payum',
                    1 => 'PayumBundle:Profiler:payum.html.twig',
                ),
                'data_collector.config' => array(
                    0 => 'config',
                    1 => '@WebProfiler/Collector/config.html.twig',
                ),
            ),
            'console.command.ids' => array(
                'console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand' => 'console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand',
                'console.command.sensiolabs_security_command_securitycheckercommand' => 'sensio_distribution.security_checker.command',
                'console.command.pimcore_migrations_command_executecommand' => 'console.command.pimcore_migrations_command_executecommand',
                'console.command.pimcore_migrations_command_generatecommand' => 'console.command.pimcore_migrations_command_generatecommand',
                'console.command.pimcore_migrations_command_latestcommand' => 'console.command.pimcore_migrations_command_latestcommand',
                'console.command.pimcore_migrations_command_migratecommand' => 'console.command.pimcore_migrations_command_migratecommand',
                'console.command.pimcore_migrations_command_statuscommand' => 'console.command.pimcore_migrations_command_statuscommand',
                'console.command.pimcore_migrations_command_versioncommand' => 'console.command.pimcore_migrations_command_versioncommand',
            ),
            'pimcore.service_controllers' => array(
                'AppBundle\\Controller\\AdvancedController' => 'AppBundle\\Controller\\AdvancedController',
                'AppBundle\\Controller\\BlogController' => 'AppBundle\\Controller\\BlogController',
                'AppBundle\\Controller\\Category\\ExampleController' => 'AppBundle\\Controller\\Category\\ExampleController',
                'AppBundle\\Controller\\ContentController' => 'AppBundle\\Controller\\ContentController',
                'AppBundle\\Controller\\DefaultController' => 'AppBundle\\Controller\\DefaultController',
                'AppBundle\\Controller\\NewsController' => 'AppBundle\\Controller\\NewsController',
                'AppBundle\\Controller\\NewsletterController' => 'AppBundle\\Controller\\NewsletterController',
                'AppBundle\\Controller\\SecureController' => 'AppBundle\\Controller\\SecureController',
                'AppBundle\\Controller\\Web2printController' => 'AppBundle\\Controller\\Web2printController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\AssetController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ClassificationstoreController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DataObjectHelperController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\DocumentTag\\RenderletController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\ElementControllerBase',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\EmailController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\AdminerController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\LinfoController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\External\\OpcacheController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\FolderController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\HardlinkController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\IndexController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\InstallController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LinkController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LogController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\LoginController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\MiscController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\NewsletterController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PageController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PortalController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintcontainerController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\PrintpageControllerBase',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\QuantityValueController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\RecyclebinController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SettingsController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\SnippetController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TagsController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\TranslationController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\UserController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\VariantsController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Admin\\WorkflowController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\ExtensionManager\\ExtensionManagerController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\AnalyticsController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\CustomReportController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\QrcodeController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\ReportsControllerBase',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\SettingsController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Reports\\TargetingController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ClassController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\AssetController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DataObjectController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\DocumentController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\Element\\TagController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\ImageController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Rest\\InfoController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Searchadmin\\SearchController',
                'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController' => 'Pimcore\\Bundle\\AdminBundle\\Controller\\Update\\IndexController',
                'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController' => 'Pimcore\\Bundle\\CoreBundle\\Controller\\PublicServicesController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\AdminOrderController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\ConfigController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\FindologicController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\IndexController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\PricingController',
                'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController' => 'Pimcore\\Bundle\\EcommerceFrameworkBundle\\Controller\\VoucherController',
                'coreshop.admin_controller.carrier' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.cart_price_rule' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\CartPriceRuleController',
                'coreshop.admin_controller.configuration' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ConfigurationController',
                'coreshop.admin_controller.country' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.currency' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.exchange_rate' => 'CoreShop\\Bundle\\CurrencyBundle\\Controller\\ExchangeRateController',
                'coreshop.admin_controller.filter' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\FilterController',
                'coreshop.admin_controller.index' => 'CoreShop\\Bundle\\IndexBundle\\Controller\\IndexController',
                'coreshop.admin_controller.notification_rule' => 'CoreShop\\Bundle\\NotificationBundle\\Controller\\NotificationRuleController',
                'coreshop.admin_controller.payment' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.payment_provider' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\PaymentProviderController',
                'coreshop.admin_controller.product_price_rule' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductPriceRuleController',
                'coreshop.admin_controller.product_specific_price_rule' => 'CoreShop\\Bundle\\ProductBundle\\Controller\\ProductSpecificPriceRuleController',
                'coreshop.admin_controller.reports' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\ReportsController',
                'coreshop.admin_controller.resource_settings' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceSettingsController',
                'coreshop.admin_controller.rule_action' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.rule_condition' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.sequence' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.settings' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\SettingsController',
                'coreshop.admin_controller.shipping_rule' => 'CoreShop\\Bundle\\ShippingBundle\\Controller\\ShippingRuleController',
                'coreshop.admin_controller.state' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.store' => 'CoreShop\\Bundle\\StoreBundle\\Controller\\StoreController',
                'coreshop.admin_controller.tax_rate' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.admin_controller.tax_rule_group' => 'CoreShop\\Bundle\\TaxationBundle\\Controller\\TaxRuleGroupController',
                'coreshop.admin_controller.zone' => 'CoreShop\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                'coreshop.frontend.controller.cart' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CartController',
                'coreshop.frontend.controller.category' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CategoryController',
                'coreshop.frontend.controller.checkout' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CheckoutController',
                'coreshop.frontend.controller.currency' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CurrencyController',
                'coreshop.frontend.controller.customer' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\CustomerController',
                'coreshop.frontend.controller.index' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\IndexController',
                'coreshop.frontend.controller.language' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\LanguageController',
                'coreshop.frontend.controller.payment' => 'CoreShop\\Bundle\\PayumBundle\\Controller\\PaymentController',
                'coreshop.frontend.controller.product' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\ProductController',
                'coreshop.frontend.controller.quote' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\QuoteController',
                'coreshop.frontend.controller.register' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\RegisterController',
                'coreshop.frontend.controller.search' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SearchController',
                'coreshop.frontend.controller.security' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\SecurityController',
                'coreshop.frontend.controller.wishlist' => 'CoreShop\\Bundle\\FrontendBundle\\Controller\\WishlistController',
                'coreshop.pimcore_controller.order' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderController',
                'coreshop.pimcore_controller.order_creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\OrderCreationController',
                'coreshop.pimcore_controller.order_invoice' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderInvoiceController',
                'coreshop.pimcore_controller.order_shipment' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\OrderShipmentController',
                'coreshop.pimcore_controller.quote' => 'CoreShop\\Bundle\\OrderBundle\\Controller\\QuoteController',
                'coreshop.pimcore_controller.quote_creation' => 'CoreShop\\Bundle\\CoreBundle\\Controller\\QuoteCreationController',
            ),
            'doctrine_migrations.namespace' => 'Application\\Migrations',
            'doctrine_migrations.table_name' => 'migration_versions',
            'doctrine_migrations.name' => 'Application Migrations',
            'doctrine_migrations.organize_migrations' => false,
        );
    }
}

class CoreShopBundleMoneyBundleTemplatingHelperFormatMoneyHelper_0000000051556835000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf683cae302696455 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf683cbc000509345 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf683c6a742639502 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function formatAmount($amount, $currencyCode, $localeCode)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, 'formatAmount', array('amount' => $amount, 'currencyCode' => $currencyCode, 'localeCode' => $localeCode), $this->initializer5a25fbf683cbc000509345);

        return $this->valueHolder5a25fbf683cae302696455->formatAmount($amount, $currencyCode, $localeCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, 'getName', array(), $this->initializer5a25fbf683cbc000509345);

        return $this->valueHolder5a25fbf683cae302696455->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, 'setCharset', array('charset' => $charset), $this->initializer5a25fbf683cbc000509345);

        return $this->valueHolder5a25fbf683cae302696455->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, 'getCharset', array(), $this->initializer5a25fbf683cbc000509345);

        return $this->valueHolder5a25fbf683cae302696455->getCharset();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        unset($instance->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper $instance) {
            unset($instance->moneyFormatter);
        }, $instance, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\FormatMoneyHelper')->__invoke($instance);

        $instance->initializer5a25fbf683cbc000509345 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\CoreShop\Component\Currency\Formatter\MoneyFormatterInterface $moneyFormatter)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf683cae302696455) {
            $reflection = $reflection ?: new \ReflectionClass('CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\FormatMoneyHelper');
            $this->valueHolder5a25fbf683cae302696455 = $reflection->newInstanceWithoutConstructor();
        unset($this->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper $instance) {
            unset($instance->moneyFormatter);
        }, $this, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\FormatMoneyHelper')->__invoke($this);

        }

        $this->valueHolder5a25fbf683cae302696455->__construct($moneyFormatter);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__get', ['name' => $name], $this->initializer5a25fbf683cbc000509345);

        if (isset(self::$publicProperties5a25fbf683c6a742639502[$name])) {
            return $this->valueHolder5a25fbf683cae302696455->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf683cae302696455;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf683cae302696455;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf683cbc000509345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf683cae302696455;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf683cae302696455;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__isset', array('name' => $name), $this->initializer5a25fbf683cbc000509345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf683cae302696455;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf683cae302696455;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__unset', array('name' => $name), $this->initializer5a25fbf683cbc000509345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf683cae302696455;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf683cae302696455;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__clone', array(), $this->initializer5a25fbf683cbc000509345);

        $this->valueHolder5a25fbf683cae302696455 = clone $this->valueHolder5a25fbf683cae302696455;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, '__sleep', array(), $this->initializer5a25fbf683cbc000509345);

        return array('valueHolder5a25fbf683cae302696455');
    }

    public function __wakeup()
    {
        unset($this->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper $instance) {
            unset($instance->moneyFormatter);
        }, $this, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\FormatMoneyHelper')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf683cbc000509345 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf683cbc000509345;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf683cbc000509345 && $this->initializer5a25fbf683cbc000509345->__invoke($this->valueHolder5a25fbf683cae302696455, $this, 'initializeProxy', array(), $this->initializer5a25fbf683cbc000509345);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf683cae302696455;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf683cae302696455;
    }


}

class CoreShopBundleMoneyBundleTemplatingHelperConvertMoneyHelper_0000000051556833000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf68467f800185871 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf684688259452513 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf684661961584296 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function convertAmount($amount, $sourceCurrencyCode, $targetCurrencyCode)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, 'convertAmount', array('amount' => $amount, 'sourceCurrencyCode' => $sourceCurrencyCode, 'targetCurrencyCode' => $targetCurrencyCode), $this->initializer5a25fbf684688259452513);

        return $this->valueHolder5a25fbf68467f800185871->convertAmount($amount, $sourceCurrencyCode, $targetCurrencyCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, 'getName', array(), $this->initializer5a25fbf684688259452513);

        return $this->valueHolder5a25fbf68467f800185871->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, 'setCharset', array('charset' => $charset), $this->initializer5a25fbf684688259452513);

        return $this->valueHolder5a25fbf68467f800185871->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, 'getCharset', array(), $this->initializer5a25fbf684688259452513);

        return $this->valueHolder5a25fbf68467f800185871->getCharset();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        unset($instance->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper $instance) {
            unset($instance->currencyConverter);
        }, $instance, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\ConvertMoneyHelper')->__invoke($instance);

        $instance->initializer5a25fbf684688259452513 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\CoreShop\Component\Currency\Converter\CurrencyConverterInterface $currencyConverter)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf68467f800185871) {
            $reflection = $reflection ?: new \ReflectionClass('CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\ConvertMoneyHelper');
            $this->valueHolder5a25fbf68467f800185871 = $reflection->newInstanceWithoutConstructor();
        unset($this->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper $instance) {
            unset($instance->currencyConverter);
        }, $this, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\ConvertMoneyHelper')->__invoke($this);

        }

        $this->valueHolder5a25fbf68467f800185871->__construct($currencyConverter);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__get', ['name' => $name], $this->initializer5a25fbf684688259452513);

        if (isset(self::$publicProperties5a25fbf684661961584296[$name])) {
            return $this->valueHolder5a25fbf68467f800185871->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68467f800185871;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68467f800185871;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf684688259452513);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68467f800185871;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68467f800185871;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__isset', array('name' => $name), $this->initializer5a25fbf684688259452513);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68467f800185871;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68467f800185871;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__unset', array('name' => $name), $this->initializer5a25fbf684688259452513);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68467f800185871;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68467f800185871;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__clone', array(), $this->initializer5a25fbf684688259452513);

        $this->valueHolder5a25fbf68467f800185871 = clone $this->valueHolder5a25fbf68467f800185871;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, '__sleep', array(), $this->initializer5a25fbf684688259452513);

        return array('valueHolder5a25fbf68467f800185871');
    }

    public function __wakeup()
    {
        unset($this->charset);

        \Closure::bind(function (\CoreShop\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper $instance) {
            unset($instance->currencyConverter);
        }, $this, 'CoreShop\\Bundle\\MoneyBundle\\Templating\\Helper\\ConvertMoneyHelper')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf684688259452513 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf684688259452513;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf684688259452513 && $this->initializer5a25fbf684688259452513->__invoke($this->valueHolder5a25fbf68467f800185871, $this, 'initializeProxy', array(), $this->initializer5a25fbf684688259452513);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf68467f800185871;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf68467f800185871;
    }


}

class CoreShopBundleAddressBundleTemplatingHelperFormatAddressHelper_0000000051556616000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf684f08509890740 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf684f11847436602 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf684eea754935763 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function formatAddress($address, $asHtml = true)
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, 'formatAddress', array('address' => $address, 'asHtml' => $asHtml), $this->initializer5a25fbf684f11847436602);

        return $this->valueHolder5a25fbf684f08509890740->formatAddress($address, $asHtml);
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        \Closure::bind(function (\CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper $instance) {
            unset($instance->addressFormatter);
        }, $instance, 'CoreShop\\Bundle\\AddressBundle\\Templating\\Helper\\FormatAddressHelper')->__invoke($instance);

        $instance->initializer5a25fbf684f11847436602 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\CoreShop\Component\Address\Formatter\AddressFormatterInterface $addressFormatter)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf684f08509890740) {
            $reflection = $reflection ?: new \ReflectionClass('CoreShop\\Bundle\\AddressBundle\\Templating\\Helper\\FormatAddressHelper');
            $this->valueHolder5a25fbf684f08509890740 = $reflection->newInstanceWithoutConstructor();
        \Closure::bind(function (\CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper $instance) {
            unset($instance->addressFormatter);
        }, $this, 'CoreShop\\Bundle\\AddressBundle\\Templating\\Helper\\FormatAddressHelper')->__invoke($this);

        }

        $this->valueHolder5a25fbf684f08509890740->__construct($addressFormatter);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__get', ['name' => $name], $this->initializer5a25fbf684f11847436602);

        if (isset(self::$publicProperties5a25fbf684eea754935763[$name])) {
            return $this->valueHolder5a25fbf684f08509890740->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf684f08509890740;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf684f08509890740;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf684f11847436602);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf684f08509890740;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf684f08509890740;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__isset', array('name' => $name), $this->initializer5a25fbf684f11847436602);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf684f08509890740;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf684f08509890740;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__unset', array('name' => $name), $this->initializer5a25fbf684f11847436602);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf684f08509890740;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf684f08509890740;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__clone', array(), $this->initializer5a25fbf684f11847436602);

        $this->valueHolder5a25fbf684f08509890740 = clone $this->valueHolder5a25fbf684f08509890740;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, '__sleep', array(), $this->initializer5a25fbf684f11847436602);

        return array('valueHolder5a25fbf684f08509890740');
    }

    public function __wakeup()
    {
        \Closure::bind(function (\CoreShop\Bundle\AddressBundle\Templating\Helper\FormatAddressHelper $instance) {
            unset($instance->addressFormatter);
        }, $this, 'CoreShop\\Bundle\\AddressBundle\\Templating\\Helper\\FormatAddressHelper')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf684f11847436602 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf684f11847436602;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf684f11847436602 && $this->initializer5a25fbf684f11847436602->__invoke($this->valueHolder5a25fbf684f08509890740, $this, 'initializeProxy', array(), $this->initializer5a25fbf684f11847436602);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf684f08509890740;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf684f08509890740;
    }


}

class CoreShopBundleCurrencyBundleTemplatingHelperCurrencyHelper_0000000051556194000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \CoreShop\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf6854a9854936014 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf6854b2280540358 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf68548b995455186 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function convertCurrencyCodeToSymbol($code)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, 'convertCurrencyCodeToSymbol', array('code' => $code), $this->initializer5a25fbf6854b2280540358);

        return $this->valueHolder5a25fbf6854a9854936014->convertCurrencyCodeToSymbol($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, 'getName', array(), $this->initializer5a25fbf6854b2280540358);

        return $this->valueHolder5a25fbf6854a9854936014->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, 'setCharset', array('charset' => $charset), $this->initializer5a25fbf6854b2280540358);

        return $this->valueHolder5a25fbf6854a9854936014->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, 'getCharset', array(), $this->initializer5a25fbf6854b2280540358);

        return $this->valueHolder5a25fbf6854a9854936014->getCharset();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        unset($instance->charset);

        $instance->initializer5a25fbf6854b2280540358 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct()
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf6854a9854936014) {
            $reflection = $reflection ?: new \ReflectionClass('CoreShop\\Bundle\\CurrencyBundle\\Templating\\Helper\\CurrencyHelper');
            $this->valueHolder5a25fbf6854a9854936014 = $reflection->newInstanceWithoutConstructor();
        unset($this->charset);

        }
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__get', ['name' => $name], $this->initializer5a25fbf6854b2280540358);

        if (isset(self::$publicProperties5a25fbf68548b995455186[$name])) {
            return $this->valueHolder5a25fbf6854a9854936014->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf6854a9854936014;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf6854a9854936014;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf6854b2280540358);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf6854a9854936014;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf6854a9854936014;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__isset', array('name' => $name), $this->initializer5a25fbf6854b2280540358);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf6854a9854936014;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf6854a9854936014;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__unset', array('name' => $name), $this->initializer5a25fbf6854b2280540358);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf6854a9854936014;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf6854a9854936014;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__clone', array(), $this->initializer5a25fbf6854b2280540358);

        $this->valueHolder5a25fbf6854a9854936014 = clone $this->valueHolder5a25fbf6854a9854936014;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, '__sleep', array(), $this->initializer5a25fbf6854b2280540358);

        return array('valueHolder5a25fbf6854a9854936014');
    }

    public function __wakeup()
    {
        unset($this->charset);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf6854b2280540358 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf6854b2280540358;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf6854b2280540358 && $this->initializer5a25fbf6854b2280540358->__invoke($this->valueHolder5a25fbf6854a9854936014, $this, 'initializeProxy', array(), $this->initializer5a25fbf6854b2280540358);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf6854a9854936014;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf6854a9854936014;
    }


}

class CoreShopComponentCoreContextShopperContext_0000000051557c49000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \CoreShop\Component\Core\Context\ShopperContext implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf685a6e381993531 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf685a77797379343 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf685a50766734349 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getStore()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'getStore', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->getStore();
    }

    /**
     * {@inheritDoc}
     */
    public function hasStore()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'hasStore', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->hasStore();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'getCurrency', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCurrency()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'hasCurrency', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->hasCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocaleCode()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'getLocaleCode', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->getLocaleCode();
    }

    /**
     * {@inheritDoc}
     */
    public function hasLocaleCode()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'hasLocaleCode', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->hasLocaleCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'getCountry', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCountry()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'hasCountry', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->hasCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'getCustomer', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCustomer()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'hasCustomer', array(), $this->initializer5a25fbf685a77797379343);

        return $this->valueHolder5a25fbf685a6e381993531->hasCustomer();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        \Closure::bind(function (\CoreShop\Component\Core\Context\ShopperContext $instance) {
            unset($instance->storeContext, $instance->currencyContext, $instance->localeContext, $instance->countryContext, $instance->customerContext);
        }, $instance, 'CoreShop\\Component\\Core\\Context\\ShopperContext')->__invoke($instance);

        $instance->initializer5a25fbf685a77797379343 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\CoreShop\Component\Store\Context\StoreContextInterface $storeContext, \CoreShop\Component\Currency\Context\CurrencyContextInterface $currencyContext, \CoreShop\Component\Locale\Context\LocaleContextInterface $localeContext, \CoreShop\Component\Address\Context\CountryContextInterface $countryContext, \CoreShop\Component\Customer\Context\CustomerContextInterface $customerContext)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf685a6e381993531) {
            $reflection = $reflection ?: new \ReflectionClass('CoreShop\\Component\\Core\\Context\\ShopperContext');
            $this->valueHolder5a25fbf685a6e381993531 = $reflection->newInstanceWithoutConstructor();
        \Closure::bind(function (\CoreShop\Component\Core\Context\ShopperContext $instance) {
            unset($instance->storeContext, $instance->currencyContext, $instance->localeContext, $instance->countryContext, $instance->customerContext);
        }, $this, 'CoreShop\\Component\\Core\\Context\\ShopperContext')->__invoke($this);

        }

        $this->valueHolder5a25fbf685a6e381993531->__construct($storeContext, $currencyContext, $localeContext, $countryContext, $customerContext);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__get', ['name' => $name], $this->initializer5a25fbf685a77797379343);

        if (isset(self::$publicProperties5a25fbf685a50766734349[$name])) {
            return $this->valueHolder5a25fbf685a6e381993531->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf685a6e381993531;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf685a6e381993531;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf685a77797379343);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf685a6e381993531;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf685a6e381993531;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__isset', array('name' => $name), $this->initializer5a25fbf685a77797379343);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf685a6e381993531;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf685a6e381993531;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__unset', array('name' => $name), $this->initializer5a25fbf685a77797379343);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf685a6e381993531;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf685a6e381993531;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__clone', array(), $this->initializer5a25fbf685a77797379343);

        $this->valueHolder5a25fbf685a6e381993531 = clone $this->valueHolder5a25fbf685a6e381993531;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, '__sleep', array(), $this->initializer5a25fbf685a77797379343);

        return array('valueHolder5a25fbf685a6e381993531');
    }

    public function __wakeup()
    {
        \Closure::bind(function (\CoreShop\Component\Core\Context\ShopperContext $instance) {
            unset($instance->storeContext, $instance->currencyContext, $instance->localeContext, $instance->countryContext, $instance->customerContext);
        }, $this, 'CoreShop\\Component\\Core\\Context\\ShopperContext')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf685a77797379343 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf685a77797379343;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf685a77797379343 && $this->initializer5a25fbf685a77797379343->__invoke($this->valueHolder5a25fbf685a6e381993531, $this, 'initializeProxy', array(), $this->initializer5a25fbf685a77797379343);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf685a6e381993531;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf685a6e381993531;
    }


}

class DoctrineORMEntityManager_0000000051554e2a000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \Doctrine\ORM\EntityManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf686aba418372896 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf686ac3949872174 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf686a9a345895258 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getConnection()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getConnection', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadataFactory()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getMetadataFactory', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getMetadataFactory();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpressionBuilder()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getExpressionBuilder', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getExpressionBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function beginTransaction()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'beginTransaction', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->beginTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function getCache()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getCache', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getCache();
    }

    /**
     * {@inheritDoc}
     */
    public function transactional($func)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'transactional', array('func' => $func), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->transactional($func);
    }

    /**
     * {@inheritDoc}
     */
    public function commit()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'commit', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->commit();
    }

    /**
     * {@inheritDoc}
     */
    public function rollback()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'rollback', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->rollback();
    }

    /**
     * {@inheritDoc}
     */
    public function getClassMetadata($className)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getClassMetadata', array('className' => $className), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getClassMetadata($className);
    }

    /**
     * {@inheritDoc}
     */
    public function createQuery($dql = '')
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'createQuery', array('dql' => $dql), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->createQuery($dql);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedQuery($name)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'createNamedQuery', array('name' => $name), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->createNamedQuery($name);
    }

    /**
     * {@inheritDoc}
     */
    public function createNativeQuery($sql, \Doctrine\ORM\Query\ResultSetMapping $rsm)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'createNativeQuery', array('sql' => $sql, 'rsm' => $rsm), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->createNativeQuery($sql, $rsm);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedNativeQuery($name)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'createNamedNativeQuery', array('name' => $name), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->createNamedNativeQuery($name);
    }

    /**
     * {@inheritDoc}
     */
    public function createQueryBuilder()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'createQueryBuilder', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->createQueryBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function flush($entity = null)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'flush', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->flush($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function find($entityName, $id, $lockMode = null, $lockVersion = null)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'find', array('entityName' => $entityName, 'id' => $id, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->find($entityName, $id, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference($entityName, $id)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getReference', array('entityName' => $entityName, 'id' => $id), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getReference($entityName, $id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartialReference($entityName, $identifier)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getPartialReference', array('entityName' => $entityName, 'identifier' => $identifier), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getPartialReference($entityName, $identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function clear($entityName = null)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'clear', array('entityName' => $entityName), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->clear($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function close()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'close', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->close();
    }

    /**
     * {@inheritDoc}
     */
    public function persist($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'persist', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->persist($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function remove($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'remove', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->remove($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function refresh($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'refresh', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->refresh($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function detach($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'detach', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->detach($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function merge($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'merge', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->merge($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function copy($entity, $deep = false)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'copy', array('entity' => $entity, 'deep' => $deep), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->copy($entity, $deep);
    }

    /**
     * {@inheritDoc}
     */
    public function lock($entity, $lockMode, $lockVersion = null)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'lock', array('entity' => $entity, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->lock($entity, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository($entityName)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getRepository', array('entityName' => $entityName), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getRepository($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function contains($entity)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'contains', array('entity' => $entity), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->contains($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventManager()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getEventManager', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getEventManager();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfiguration()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getConfiguration', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getConfiguration();
    }

    /**
     * {@inheritDoc}
     */
    public function isOpen()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'isOpen', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->isOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitOfWork()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getUnitOfWork', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getUnitOfWork();
    }

    /**
     * {@inheritDoc}
     */
    public function getHydrator($hydrationMode)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getHydrator', array('hydrationMode' => $hydrationMode), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getHydrator($hydrationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function newHydrator($hydrationMode)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'newHydrator', array('hydrationMode' => $hydrationMode), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->newHydrator($hydrationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyFactory()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getProxyFactory', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getProxyFactory();
    }

    /**
     * {@inheritDoc}
     */
    public function initializeObject($obj)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'initializeObject', array('obj' => $obj), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->initializeObject($obj);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilters()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'getFilters', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->getFilters();
    }

    /**
     * {@inheritDoc}
     */
    public function isFiltersStateClean()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'isFiltersStateClean', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->isFiltersStateClean();
    }

    /**
     * {@inheritDoc}
     */
    public function hasFilters()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'hasFilters', array(), $this->initializer5a25fbf686ac3949872174);

        return $this->valueHolder5a25fbf686aba418372896->hasFilters();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        \Closure::bind(function (\Doctrine\ORM\EntityManager $instance) {
            unset($instance->config, $instance->conn, $instance->metadataFactory, $instance->unitOfWork, $instance->eventManager, $instance->proxyFactory, $instance->repositoryFactory, $instance->expressionBuilder, $instance->closed, $instance->filterCollection, $instance->cache);
        }, $instance, 'Doctrine\\ORM\\EntityManager')->__invoke($instance);

        $instance->initializer5a25fbf686ac3949872174 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    protected function __construct(\Doctrine\DBAL\Connection $conn, \Doctrine\ORM\Configuration $config, \Doctrine\Common\EventManager $eventManager)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf686aba418372896) {
            $reflection = $reflection ?: new \ReflectionClass('Doctrine\\ORM\\EntityManager');
            $this->valueHolder5a25fbf686aba418372896 = $reflection->newInstanceWithoutConstructor();
        \Closure::bind(function (\Doctrine\ORM\EntityManager $instance) {
            unset($instance->config, $instance->conn, $instance->metadataFactory, $instance->unitOfWork, $instance->eventManager, $instance->proxyFactory, $instance->repositoryFactory, $instance->expressionBuilder, $instance->closed, $instance->filterCollection, $instance->cache);
        }, $this, 'Doctrine\\ORM\\EntityManager')->__invoke($this);

        }

        $this->valueHolder5a25fbf686aba418372896->__construct($conn, $config, $eventManager);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__get', ['name' => $name], $this->initializer5a25fbf686ac3949872174);

        if (isset(self::$publicProperties5a25fbf686a9a345895258[$name])) {
            return $this->valueHolder5a25fbf686aba418372896->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf686aba418372896;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf686aba418372896;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf686ac3949872174);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf686aba418372896;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf686aba418372896;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__isset', array('name' => $name), $this->initializer5a25fbf686ac3949872174);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf686aba418372896;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf686aba418372896;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__unset', array('name' => $name), $this->initializer5a25fbf686ac3949872174);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf686aba418372896;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf686aba418372896;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__clone', array(), $this->initializer5a25fbf686ac3949872174);

        $this->valueHolder5a25fbf686aba418372896 = clone $this->valueHolder5a25fbf686aba418372896;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, '__sleep', array(), $this->initializer5a25fbf686ac3949872174);

        return array('valueHolder5a25fbf686aba418372896');
    }

    public function __wakeup()
    {
        \Closure::bind(function (\Doctrine\ORM\EntityManager $instance) {
            unset($instance->config, $instance->conn, $instance->metadataFactory, $instance->unitOfWork, $instance->eventManager, $instance->proxyFactory, $instance->repositoryFactory, $instance->expressionBuilder, $instance->closed, $instance->filterCollection, $instance->cache);
        }, $this, 'Doctrine\\ORM\\EntityManager')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf686ac3949872174 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf686ac3949872174;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf686ac3949872174 && $this->initializer5a25fbf686ac3949872174->__invoke($this->valueHolder5a25fbf686aba418372896, $this, 'initializeProxy', array(), $this->initializer5a25fbf686ac3949872174);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf686aba418372896;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf686aba418372896;
    }


}

class PimcoreTemplatingHelperNavigation_0000000051556a36000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \Pimcore\Templating\Helper\Navigation implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf68be02661675141 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf68be0c073134428 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf68bddf034944535 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'getName', array(), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function buildNavigation(\Pimcore\Model\Document $activeDocument, ?\Pimcore\Model\Document $navigationRootDocument = null, ?string $htmlMenuPrefix = null, ?callable $pageCallback = null, $cache = true) : \Pimcore\Navigation\Container
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'buildNavigation', array('activeDocument' => $activeDocument, 'navigationRootDocument' => $navigationRootDocument, 'htmlMenuPrefix' => $htmlMenuPrefix, 'pageCallback' => $pageCallback, 'cache' => $cache), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->buildNavigation($activeDocument, $navigationRootDocument, $htmlMenuPrefix, $pageCallback, $cache);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenderer(string $alias) : \Pimcore\Navigation\Renderer\RendererInterface
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'getRenderer', array('alias' => $alias), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->getRenderer($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function render(\Pimcore\Navigation\Container $container, string $rendererName = 'menu', string $renderMethod = 'render', ... $rendererArguments)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'render', array('container' => $container, 'rendererName' => $rendererName, 'renderMethod' => $renderMethod, 'rendererArguments' => $rendererArguments), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->render($container, $rendererName, $renderMethod, ...$rendererArguments);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $arguments = array()) : \Pimcore\Navigation\Renderer\RendererInterface
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__call', array('method' => $method, 'arguments' => $arguments), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->__call($method, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'setCharset', array('charset' => $charset), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'getCharset', array(), $this->initializer5a25fbf68be0c073134428);

        return $this->valueHolder5a25fbf68be02661675141->getCharset();
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        unset($instance->charset);

        \Closure::bind(function (\Pimcore\Templating\Helper\Navigation $instance) {
            unset($instance->builder, $instance->rendererLocator);
        }, $instance, 'Pimcore\\Templating\\Helper\\Navigation')->__invoke($instance);

        $instance->initializer5a25fbf68be0c073134428 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\Pimcore\Navigation\Builder $builder, \Psr\Container\ContainerInterface $rendererLocator)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf68be02661675141) {
            $reflection = $reflection ?: new \ReflectionClass('Pimcore\\Templating\\Helper\\Navigation');
            $this->valueHolder5a25fbf68be02661675141 = $reflection->newInstanceWithoutConstructor();
        unset($this->charset);

        \Closure::bind(function (\Pimcore\Templating\Helper\Navigation $instance) {
            unset($instance->builder, $instance->rendererLocator);
        }, $this, 'Pimcore\\Templating\\Helper\\Navigation')->__invoke($this);

        }

        $this->valueHolder5a25fbf68be02661675141->__construct($builder, $rendererLocator);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__get', ['name' => $name], $this->initializer5a25fbf68be0c073134428);

        if (isset(self::$publicProperties5a25fbf68bddf034944535[$name])) {
            return $this->valueHolder5a25fbf68be02661675141->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68be02661675141;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68be02661675141;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf68be0c073134428);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68be02661675141;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68be02661675141;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__isset', array('name' => $name), $this->initializer5a25fbf68be0c073134428);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68be02661675141;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68be02661675141;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__unset', array('name' => $name), $this->initializer5a25fbf68be0c073134428);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68be02661675141;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68be02661675141;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__clone', array(), $this->initializer5a25fbf68be0c073134428);

        $this->valueHolder5a25fbf68be02661675141 = clone $this->valueHolder5a25fbf68be02661675141;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, '__sleep', array(), $this->initializer5a25fbf68be0c073134428);

        return array('valueHolder5a25fbf68be02661675141');
    }

    public function __wakeup()
    {
        unset($this->charset);

        \Closure::bind(function (\Pimcore\Templating\Helper\Navigation $instance) {
            unset($instance->builder, $instance->rendererLocator);
        }, $this, 'Pimcore\\Templating\\Helper\\Navigation')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf68be0c073134428 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf68be0c073134428;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf68be0c073134428 && $this->initializer5a25fbf68be0c073134428->__invoke($this->valueHolder5a25fbf68be02661675141, $this, 'initializeProxy', array(), $this->initializer5a25fbf68be0c073134428);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf68be02661675141;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf68be02661675141;
    }


}

class SymfonyComponentCacheAdapterFilesystemAdapter_0000000051554ee7000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \Symfony\Component\Cache\Adapter\FilesystemAdapter implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf68cea1880495541 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf68ceaa403967872 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf68ce82529146600 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getItem($key)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'getItem', array('key' => $key), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->getItem($key);
    }

    /**
     * {@inheritDoc}
     */
    public function getItems(array $keys = array())
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'getItems', array('keys' => $keys), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->getItems($keys);
    }

    /**
     * {@inheritDoc}
     */
    public function save(\Psr\Cache\CacheItemInterface $item)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'save', array('item' => $item), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->save($item);
    }

    /**
     * {@inheritDoc}
     */
    public function saveDeferred(\Psr\Cache\CacheItemInterface $item)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'saveDeferred', array('item' => $item), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->saveDeferred($item);
    }

    /**
     * {@inheritDoc}
     */
    public function commit()
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'commit', array(), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->commit();
    }

    /**
     * {@inheritDoc}
     */
    public function __destruct()
    {
        $this->initializer5a25fbf68ceaa403967872 || $this->valueHolder5a25fbf68cea1880495541->__destruct();
    }

    /**
     * {@inheritDoc}
     */
    public function hasItem($key)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'hasItem', array('key' => $key), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->hasItem($key);
    }

    /**
     * {@inheritDoc}
     */
    public function clear()
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'clear', array(), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->clear();
    }

    /**
     * {@inheritDoc}
     */
    public function deleteItem($key)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'deleteItem', array('key' => $key), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->deleteItem($key);
    }

    /**
     * {@inheritDoc}
     */
    public function deleteItems(array $keys)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'deleteItems', array('keys' => $keys), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->deleteItems($keys);
    }

    /**
     * {@inheritDoc}
     */
    public function enableVersioning($enable = true)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'enableVersioning', array('enable' => $enable), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->enableVersioning($enable);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogger(\Psr\Log\LoggerInterface $logger)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'setLogger', array('logger' => $logger), $this->initializer5a25fbf68ceaa403967872);

        return $this->valueHolder5a25fbf68cea1880495541->setLogger($logger);
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        unset($instance->maxIdLength, $instance->logger);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\FilesystemAdapter $instance) {
            unset($instance->directory, $instance->tmp);
        }, $instance, 'Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter')->__invoke($instance);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\AbstractAdapter $instance) {
            unset($instance->createCacheItem, $instance->mergeByLifetime, $instance->namespace, $instance->namespaceVersion, $instance->versioningIsEnabled, $instance->deferred);
        }, $instance, 'Symfony\\Component\\Cache\\Adapter\\AbstractAdapter')->__invoke($instance);

        $instance->initializer5a25fbf68ceaa403967872 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct($namespace = '', $defaultLifetime = 0, $directory = null)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf68cea1880495541) {
            $reflection = $reflection ?: new \ReflectionClass('Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter');
            $this->valueHolder5a25fbf68cea1880495541 = $reflection->newInstanceWithoutConstructor();
        unset($this->maxIdLength, $this->logger);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\FilesystemAdapter $instance) {
            unset($instance->directory, $instance->tmp);
        }, $this, 'Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter')->__invoke($this);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\AbstractAdapter $instance) {
            unset($instance->createCacheItem, $instance->mergeByLifetime, $instance->namespace, $instance->namespaceVersion, $instance->versioningIsEnabled, $instance->deferred);
        }, $this, 'Symfony\\Component\\Cache\\Adapter\\AbstractAdapter')->__invoke($this);

        }

        $this->valueHolder5a25fbf68cea1880495541->__construct($namespace, $defaultLifetime, $directory);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__get', ['name' => $name], $this->initializer5a25fbf68ceaa403967872);

        if (isset(self::$publicProperties5a25fbf68ce82529146600[$name])) {
            return $this->valueHolder5a25fbf68cea1880495541->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68cea1880495541;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68cea1880495541;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf68ceaa403967872);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68cea1880495541;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68cea1880495541;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__isset', array('name' => $name), $this->initializer5a25fbf68ceaa403967872);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68cea1880495541;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68cea1880495541;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__unset', array('name' => $name), $this->initializer5a25fbf68ceaa403967872);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68cea1880495541;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68cea1880495541;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__clone', array(), $this->initializer5a25fbf68ceaa403967872);

        $this->valueHolder5a25fbf68cea1880495541 = clone $this->valueHolder5a25fbf68cea1880495541;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, '__sleep', array(), $this->initializer5a25fbf68ceaa403967872);

        return array('valueHolder5a25fbf68cea1880495541');
    }

    public function __wakeup()
    {
        unset($this->maxIdLength, $this->logger);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\FilesystemAdapter $instance) {
            unset($instance->directory, $instance->tmp);
        }, $this, 'Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter')->__invoke($this);

        \Closure::bind(function (\Symfony\Component\Cache\Adapter\AbstractAdapter $instance) {
            unset($instance->createCacheItem, $instance->mergeByLifetime, $instance->namespace, $instance->namespaceVersion, $instance->versioningIsEnabled, $instance->deferred);
        }, $this, 'Symfony\\Component\\Cache\\Adapter\\AbstractAdapter')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf68ceaa403967872 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf68ceaa403967872;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf68ceaa403967872 && $this->initializer5a25fbf68ceaa403967872->__invoke($this->valueHolder5a25fbf68cea1880495541, $this, 'initializeProxy', array(), $this->initializer5a25fbf68ceaa403967872);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf68cea1880495541;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf68cea1880495541;
    }


}

class FOSRestBundleSerializerJMSSerializerAdapter_000000005155793b000000000e36caaa7062ec2b760b4b71a29793ce87ad2f3f extends \FOS\RestBundle\Serializer\JMSSerializerAdapter implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder5a25fbf68e84a900353314 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer5a25fbf68e853475481145 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties5a25fbf68e82c226858614 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function serialize($data, $format, \FOS\RestBundle\Context\Context $context)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, 'serialize', array('data' => $data, 'format' => $format, 'context' => $context), $this->initializer5a25fbf68e853475481145);

        return $this->valueHolder5a25fbf68e84a900353314->serialize($data, $format, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function deserialize($data, $type, $format, \FOS\RestBundle\Context\Context $context)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, 'deserialize', array('data' => $data, 'type' => $type, 'format' => $format, 'context' => $context), $this->initializer5a25fbf68e853475481145);

        return $this->valueHolder5a25fbf68e84a900353314->deserialize($data, $type, $format, $context);
    }

    /**
     * Constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public static function staticProxyConstructor($initializer)
    {
        static $reflection;

        $reflection = $reflection ?: $reflection = new \ReflectionClass(__CLASS__);
        $instance = (new \ReflectionClass(get_class()))->newInstanceWithoutConstructor();

        \Closure::bind(function (\FOS\RestBundle\Serializer\JMSSerializerAdapter $instance) {
            unset($instance->serializer);
        }, $instance, 'FOS\\RestBundle\\Serializer\\JMSSerializerAdapter')->__invoke($instance);

        $instance->initializer5a25fbf68e853475481145 = $initializer;

        return $instance;
    }

    /**
     * {@inheritDoc}
     */
    public function __construct(\JMS\Serializer\SerializerInterface $serializer)
    {
        static $reflection;

        if (! $this->valueHolder5a25fbf68e84a900353314) {
            $reflection = $reflection ?: new \ReflectionClass('FOS\\RestBundle\\Serializer\\JMSSerializerAdapter');
            $this->valueHolder5a25fbf68e84a900353314 = $reflection->newInstanceWithoutConstructor();
        \Closure::bind(function (\FOS\RestBundle\Serializer\JMSSerializerAdapter $instance) {
            unset($instance->serializer);
        }, $this, 'FOS\\RestBundle\\Serializer\\JMSSerializerAdapter')->__invoke($this);

        }

        $this->valueHolder5a25fbf68e84a900353314->__construct($serializer);
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__get', ['name' => $name], $this->initializer5a25fbf68e853475481145);

        if (isset(self::$publicProperties5a25fbf68e82c226858614[$name])) {
            return $this->valueHolder5a25fbf68e84a900353314->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68e84a900353314;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68e84a900353314;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5a25fbf68e853475481145);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68e84a900353314;

            return $targetObject->$name = $value;
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68e84a900353314;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__isset', array('name' => $name), $this->initializer5a25fbf68e853475481145);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68e84a900353314;

            return isset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68e84a900353314;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__unset', array('name' => $name), $this->initializer5a25fbf68e853475481145);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5a25fbf68e84a900353314;

            unset($targetObject->$name);
            return;
        }

        $targetObject = $this->valueHolder5a25fbf68e84a900353314;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \ProxyManager\Stub\EmptyClassStub();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__clone', array(), $this->initializer5a25fbf68e853475481145);

        $this->valueHolder5a25fbf68e84a900353314 = clone $this->valueHolder5a25fbf68e84a900353314;
    }

    public function __sleep()
    {
        $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, '__sleep', array(), $this->initializer5a25fbf68e853475481145);

        return array('valueHolder5a25fbf68e84a900353314');
    }

    public function __wakeup()
    {
        \Closure::bind(function (\FOS\RestBundle\Serializer\JMSSerializerAdapter $instance) {
            unset($instance->serializer);
        }, $this, 'FOS\\RestBundle\\Serializer\\JMSSerializerAdapter')->__invoke($this);
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5a25fbf68e853475481145 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer5a25fbf68e853475481145;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy() : bool
    {
        return $this->initializer5a25fbf68e853475481145 && $this->initializer5a25fbf68e853475481145->__invoke($this->valueHolder5a25fbf68e84a900353314, $this, 'initializeProxy', array(), $this->initializer5a25fbf68e853475481145);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized() : bool
    {
        return null !== $this->valueHolder5a25fbf68e84a900353314;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5a25fbf68e84a900353314;
    }


}
